{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Regression: predict fuel efficiency","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"FK1TGplqEQMI","colab_type":"code","colab":{}},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xfdJlpPfFEOT","colab_type":"code","outputId":"fa6573fb-49e1-426f-9790-c3b7e4831709","executionInfo":{"status":"ok","timestamp":1560340758748,"user_tz":-330,"elapsed":2449,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["data_file_path=keras.utils.get_file(\"auto-mpg.data\", \"https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data\")\n","data_file_path"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/root/.keras/datasets/auto-mpg.data'"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"CnHQG2RPIrWH","colab_type":"code","outputId":"3cd82f63-98ad-4d6e-c1d5-c09922935b67","executionInfo":{"status":"ok","timestamp":1560340763523,"user_tz":-330,"elapsed":7091,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}},"colab":{"base_uri":"https://localhost:8080/","height":7059}},"source":["!cat ~/.keras/datasets/auto-mpg.data head"],"execution_count":44,"outputs":[{"output_type":"stream","text":["18.0   8   307.0      130.0      3504.      12.0   70  1\t\"chevrolet chevelle malibu\"\n","15.0   8   350.0      165.0      3693.      11.5   70  1\t\"buick skylark 320\"\n","18.0   8   318.0      150.0      3436.      11.0   70  1\t\"plymouth satellite\"\n","16.0   8   304.0      150.0      3433.      12.0   70  1\t\"amc rebel sst\"\n","17.0   8   302.0      140.0      3449.      10.5   70  1\t\"ford torino\"\n","15.0   8   429.0      198.0      4341.      10.0   70  1\t\"ford galaxie 500\"\n","14.0   8   454.0      220.0      4354.       9.0   70  1\t\"chevrolet impala\"\n","14.0   8   440.0      215.0      4312.       8.5   70  1\t\"plymouth fury iii\"\n","14.0   8   455.0      225.0      4425.      10.0   70  1\t\"pontiac catalina\"\n","15.0   8   390.0      190.0      3850.       8.5   70  1\t\"amc ambassador dpl\"\n","15.0   8   383.0      170.0      3563.      10.0   70  1\t\"dodge challenger se\"\n","14.0   8   340.0      160.0      3609.       8.0   70  1\t\"plymouth 'cuda 340\"\n","15.0   8   400.0      150.0      3761.       9.5   70  1\t\"chevrolet monte carlo\"\n","14.0   8   455.0      225.0      3086.      10.0   70  1\t\"buick estate wagon (sw)\"\n","24.0   4   113.0      95.00      2372.      15.0   70  3\t\"toyota corona mark ii\"\n","22.0   6   198.0      95.00      2833.      15.5   70  1\t\"plymouth duster\"\n","18.0   6   199.0      97.00      2774.      15.5   70  1\t\"amc hornet\"\n","21.0   6   200.0      85.00      2587.      16.0   70  1\t\"ford maverick\"\n","27.0   4   97.00      88.00      2130.      14.5   70  3\t\"datsun pl510\"\n","26.0   4   97.00      46.00      1835.      20.5   70  2\t\"volkswagen 1131 deluxe sedan\"\n","25.0   4   110.0      87.00      2672.      17.5   70  2\t\"peugeot 504\"\n","24.0   4   107.0      90.00      2430.      14.5   70  2\t\"audi 100 ls\"\n","25.0   4   104.0      95.00      2375.      17.5   70  2\t\"saab 99e\"\n","26.0   4   121.0      113.0      2234.      12.5   70  2\t\"bmw 2002\"\n","21.0   6   199.0      90.00      2648.      15.0   70  1\t\"amc gremlin\"\n","10.0   8   360.0      215.0      4615.      14.0   70  1\t\"ford f250\"\n","10.0   8   307.0      200.0      4376.      15.0   70  1\t\"chevy c20\"\n","11.0   8   318.0      210.0      4382.      13.5   70  1\t\"dodge d200\"\n","9.0    8   304.0      193.0      4732.      18.5   70  1\t\"hi 1200d\"\n","27.0   4   97.00      88.00      2130.      14.5   71  3\t\"datsun pl510\"\n","28.0   4   140.0      90.00      2264.      15.5   71  1\t\"chevrolet vega 2300\"\n","25.0   4   113.0      95.00      2228.      14.0   71  3\t\"toyota corona\"\n","25.0   4   98.00      ?          2046.      19.0   71  1\t\"ford pinto\"\n","19.0   6   232.0      100.0      2634.      13.0   71  1\t\"amc gremlin\"\n","16.0   6   225.0      105.0      3439.      15.5   71  1\t\"plymouth satellite custom\"\n","17.0   6   250.0      100.0      3329.      15.5   71  1\t\"chevrolet chevelle malibu\"\n","19.0   6   250.0      88.00      3302.      15.5   71  1\t\"ford torino 500\"\n","18.0   6   232.0      100.0      3288.      15.5   71  1\t\"amc matador\"\n","14.0   8   350.0      165.0      4209.      12.0   71  1\t\"chevrolet impala\"\n","14.0   8   400.0      175.0      4464.      11.5   71  1\t\"pontiac catalina brougham\"\n","14.0   8   351.0      153.0      4154.      13.5   71  1\t\"ford galaxie 500\"\n","14.0   8   318.0      150.0      4096.      13.0   71  1\t\"plymouth fury iii\"\n","12.0   8   383.0      180.0      4955.      11.5   71  1\t\"dodge monaco (sw)\"\n","13.0   8   400.0      170.0      4746.      12.0   71  1\t\"ford country squire (sw)\"\n","13.0   8   400.0      175.0      5140.      12.0   71  1\t\"pontiac safari (sw)\"\n","18.0   6   258.0      110.0      2962.      13.5   71  1\t\"amc hornet sportabout (sw)\"\n","22.0   4   140.0      72.00      2408.      19.0   71  1\t\"chevrolet vega (sw)\"\n","19.0   6   250.0      100.0      3282.      15.0   71  1\t\"pontiac firebird\"\n","18.0   6   250.0      88.00      3139.      14.5   71  1\t\"ford mustang\"\n","23.0   4   122.0      86.00      2220.      14.0   71  1\t\"mercury capri 2000\"\n","28.0   4   116.0      90.00      2123.      14.0   71  2\t\"opel 1900\"\n","30.0   4   79.00      70.00      2074.      19.5   71  2\t\"peugeot 304\"\n","30.0   4   88.00      76.00      2065.      14.5   71  2\t\"fiat 124b\"\n","31.0   4   71.00      65.00      1773.      19.0   71  3\t\"toyota corolla 1200\"\n","35.0   4   72.00      69.00      1613.      18.0   71  3\t\"datsun 1200\"\n","27.0   4   97.00      60.00      1834.      19.0   71  2\t\"volkswagen model 111\"\n","26.0   4   91.00      70.00      1955.      20.5   71  1\t\"plymouth cricket\"\n","24.0   4   113.0      95.00      2278.      15.5   72  3\t\"toyota corona hardtop\"\n","25.0   4   97.50      80.00      2126.      17.0   72  1\t\"dodge colt hardtop\"\n","23.0   4   97.00      54.00      2254.      23.5   72  2\t\"volkswagen type 3\"\n","20.0   4   140.0      90.00      2408.      19.5   72  1\t\"chevrolet vega\"\n","21.0   4   122.0      86.00      2226.      16.5   72  1\t\"ford pinto runabout\"\n","13.0   8   350.0      165.0      4274.      12.0   72  1\t\"chevrolet impala\"\n","14.0   8   400.0      175.0      4385.      12.0   72  1\t\"pontiac catalina\"\n","15.0   8   318.0      150.0      4135.      13.5   72  1\t\"plymouth fury iii\"\n","14.0   8   351.0      153.0      4129.      13.0   72  1\t\"ford galaxie 500\"\n","17.0   8   304.0      150.0      3672.      11.5   72  1\t\"amc ambassador sst\"\n","11.0   8   429.0      208.0      4633.      11.0   72  1\t\"mercury marquis\"\n","13.0   8   350.0      155.0      4502.      13.5   72  1\t\"buick lesabre custom\"\n","12.0   8   350.0      160.0      4456.      13.5   72  1\t\"oldsmobile delta 88 royale\"\n","13.0   8   400.0      190.0      4422.      12.5   72  1\t\"chrysler newport royal\"\n","19.0   3   70.00      97.00      2330.      13.5   72  3\t\"mazda rx2 coupe\"\n","15.0   8   304.0      150.0      3892.      12.5   72  1\t\"amc matador (sw)\"\n","13.0   8   307.0      130.0      4098.      14.0   72  1\t\"chevrolet chevelle concours (sw)\"\n","13.0   8   302.0      140.0      4294.      16.0   72  1\t\"ford gran torino (sw)\"\n","14.0   8   318.0      150.0      4077.      14.0   72  1\t\"plymouth satellite custom (sw)\"\n","18.0   4   121.0      112.0      2933.      14.5   72  2\t\"volvo 145e (sw)\"\n","22.0   4   121.0      76.00      2511.      18.0   72  2\t\"volkswagen 411 (sw)\"\n","21.0   4   120.0      87.00      2979.      19.5   72  2\t\"peugeot 504 (sw)\"\n","26.0   4   96.00      69.00      2189.      18.0   72  2\t\"renault 12 (sw)\"\n","22.0   4   122.0      86.00      2395.      16.0   72  1\t\"ford pinto (sw)\"\n","28.0   4   97.00      92.00      2288.      17.0   72  3\t\"datsun 510 (sw)\"\n","23.0   4   120.0      97.00      2506.      14.5   72  3\t\"toyouta corona mark ii (sw)\"\n","28.0   4   98.00      80.00      2164.      15.0   72  1\t\"dodge colt (sw)\"\n","27.0   4   97.00      88.00      2100.      16.5   72  3\t\"toyota corolla 1600 (sw)\"\n","13.0   8   350.0      175.0      4100.      13.0   73  1\t\"buick century 350\"\n","14.0   8   304.0      150.0      3672.      11.5   73  1\t\"amc matador\"\n","13.0   8   350.0      145.0      3988.      13.0   73  1\t\"chevrolet malibu\"\n","14.0   8   302.0      137.0      4042.      14.5   73  1\t\"ford gran torino\"\n","15.0   8   318.0      150.0      3777.      12.5   73  1\t\"dodge coronet custom\"\n","12.0   8   429.0      198.0      4952.      11.5   73  1\t\"mercury marquis brougham\"\n","13.0   8   400.0      150.0      4464.      12.0   73  1\t\"chevrolet caprice classic\"\n","13.0   8   351.0      158.0      4363.      13.0   73  1\t\"ford ltd\"\n","14.0   8   318.0      150.0      4237.      14.5   73  1\t\"plymouth fury gran sedan\"\n","13.0   8   440.0      215.0      4735.      11.0   73  1\t\"chrysler new yorker brougham\"\n","12.0   8   455.0      225.0      4951.      11.0   73  1\t\"buick electra 225 custom\"\n","13.0   8   360.0      175.0      3821.      11.0   73  1\t\"amc ambassador brougham\"\n","18.0   6   225.0      105.0      3121.      16.5   73  1\t\"plymouth valiant\"\n","16.0   6   250.0      100.0      3278.      18.0   73  1\t\"chevrolet nova custom\"\n","18.0   6   232.0      100.0      2945.      16.0   73  1\t\"amc hornet\"\n","18.0   6   250.0      88.00      3021.      16.5   73  1\t\"ford maverick\"\n","23.0   6   198.0      95.00      2904.      16.0   73  1\t\"plymouth duster\"\n","26.0   4   97.00      46.00      1950.      21.0   73  2\t\"volkswagen super beetle\"\n","11.0   8   400.0      150.0      4997.      14.0   73  1\t\"chevrolet impala\"\n","12.0   8   400.0      167.0      4906.      12.5   73  1\t\"ford country\"\n","13.0   8   360.0      170.0      4654.      13.0   73  1\t\"plymouth custom suburb\"\n","12.0   8   350.0      180.0      4499.      12.5   73  1\t\"oldsmobile vista cruiser\"\n","18.0   6   232.0      100.0      2789.      15.0   73  1\t\"amc gremlin\"\n","20.0   4   97.00      88.00      2279.      19.0   73  3\t\"toyota carina\"\n","21.0   4   140.0      72.00      2401.      19.5   73  1\t\"chevrolet vega\"\n","22.0   4   108.0      94.00      2379.      16.5   73  3\t\"datsun 610\"\n","18.0   3   70.00      90.00      2124.      13.5   73  3\t\"maxda rx3\"\n","19.0   4   122.0      85.00      2310.      18.5   73  1\t\"ford pinto\"\n","21.0   6   155.0      107.0      2472.      14.0   73  1\t\"mercury capri v6\"\n","26.0   4   98.00      90.00      2265.      15.5   73  2\t\"fiat 124 sport coupe\"\n","15.0   8   350.0      145.0      4082.      13.0   73  1\t\"chevrolet monte carlo s\"\n","16.0   8   400.0      230.0      4278.      9.50   73  1\t\"pontiac grand prix\"\n","29.0   4   68.00      49.00      1867.      19.5   73  2\t\"fiat 128\"\n","24.0   4   116.0      75.00      2158.      15.5   73  2\t\"opel manta\"\n","20.0   4   114.0      91.00      2582.      14.0   73  2\t\"audi 100ls\"\n","19.0   4   121.0      112.0      2868.      15.5   73  2\t\"volvo 144ea\"\n","15.0   8   318.0      150.0      3399.      11.0   73  1\t\"dodge dart custom\"\n","24.0   4   121.0      110.0      2660.      14.0   73  2\t\"saab 99le\"\n","20.0   6   156.0      122.0      2807.      13.5   73  3\t\"toyota mark ii\"\n","11.0   8   350.0      180.0      3664.      11.0   73  1\t\"oldsmobile omega\"\n","20.0   6   198.0      95.00      3102.      16.5   74  1\t\"plymouth duster\"\n","21.0   6   200.0      ?          2875.      17.0   74  1\t\"ford maverick\"\n","19.0   6   232.0      100.0      2901.      16.0   74  1\t\"amc hornet\"\n","15.0   6   250.0      100.0      3336.      17.0   74  1\t\"chevrolet nova\"\n","31.0   4   79.00      67.00      1950.      19.0   74  3\t\"datsun b210\"\n","26.0   4   122.0      80.00      2451.      16.5   74  1\t\"ford pinto\"\n","32.0   4   71.00      65.00      1836.      21.0   74  3\t\"toyota corolla 1200\"\n","25.0   4   140.0      75.00      2542.      17.0   74  1\t\"chevrolet vega\"\n","16.0   6   250.0      100.0      3781.      17.0   74  1\t\"chevrolet chevelle malibu classic\"\n","16.0   6   258.0      110.0      3632.      18.0   74  1\t\"amc matador\"\n","18.0   6   225.0      105.0      3613.      16.5   74  1\t\"plymouth satellite sebring\"\n","16.0   8   302.0      140.0      4141.      14.0   74  1\t\"ford gran torino\"\n","13.0   8   350.0      150.0      4699.      14.5   74  1\t\"buick century luxus (sw)\"\n","14.0   8   318.0      150.0      4457.      13.5   74  1\t\"dodge coronet custom (sw)\"\n","14.0   8   302.0      140.0      4638.      16.0   74  1\t\"ford gran torino (sw)\"\n","14.0   8   304.0      150.0      4257.      15.5   74  1\t\"amc matador (sw)\"\n","29.0   4   98.00      83.00      2219.      16.5   74  2\t\"audi fox\"\n","26.0   4   79.00      67.00      1963.      15.5   74  2\t\"volkswagen dasher\"\n","26.0   4   97.00      78.00      2300.      14.5   74  2\t\"opel manta\"\n","31.0   4   76.00      52.00      1649.      16.5   74  3\t\"toyota corona\"\n","32.0   4   83.00      61.00      2003.      19.0   74  3\t\"datsun 710\"\n","28.0   4   90.00      75.00      2125.      14.5   74  1\t\"dodge colt\"\n","24.0   4   90.00      75.00      2108.      15.5   74  2\t\"fiat 128\"\n","26.0   4   116.0      75.00      2246.      14.0   74  2\t\"fiat 124 tc\"\n","24.0   4   120.0      97.00      2489.      15.0   74  3\t\"honda civic\"\n","26.0   4   108.0      93.00      2391.      15.5   74  3\t\"subaru\"\n","31.0   4   79.00      67.00      2000.      16.0   74  2\t\"fiat x1.9\"\n","19.0   6   225.0      95.00      3264.      16.0   75  1\t\"plymouth valiant custom\"\n","18.0   6   250.0      105.0      3459.      16.0   75  1\t\"chevrolet nova\"\n","15.0   6   250.0      72.00      3432.      21.0   75  1\t\"mercury monarch\"\n","15.0   6   250.0      72.00      3158.      19.5   75  1\t\"ford maverick\"\n","16.0   8   400.0      170.0      4668.      11.5   75  1\t\"pontiac catalina\"\n","15.0   8   350.0      145.0      4440.      14.0   75  1\t\"chevrolet bel air\"\n","16.0   8   318.0      150.0      4498.      14.5   75  1\t\"plymouth grand fury\"\n","14.0   8   351.0      148.0      4657.      13.5   75  1\t\"ford ltd\"\n","17.0   6   231.0      110.0      3907.      21.0   75  1\t\"buick century\"\n","16.0   6   250.0      105.0      3897.      18.5   75  1\t\"chevroelt chevelle malibu\"\n","15.0   6   258.0      110.0      3730.      19.0   75  1\t\"amc matador\"\n","18.0   6   225.0      95.00      3785.      19.0   75  1\t\"plymouth fury\"\n","21.0   6   231.0      110.0      3039.      15.0   75  1\t\"buick skyhawk\"\n","20.0   8   262.0      110.0      3221.      13.5   75  1\t\"chevrolet monza 2+2\"\n","13.0   8   302.0      129.0      3169.      12.0   75  1\t\"ford mustang ii\"\n","29.0   4   97.00      75.00      2171.      16.0   75  3\t\"toyota corolla\"\n","23.0   4   140.0      83.00      2639.      17.0   75  1\t\"ford pinto\"\n","20.0   6   232.0      100.0      2914.      16.0   75  1\t\"amc gremlin\"\n","23.0   4   140.0      78.00      2592.      18.5   75  1\t\"pontiac astro\"\n","24.0   4   134.0      96.00      2702.      13.5   75  3\t\"toyota corona\"\n","25.0   4   90.00      71.00      2223.      16.5   75  2\t\"volkswagen dasher\"\n","24.0   4   119.0      97.00      2545.      17.0   75  3\t\"datsun 710\"\n","18.0   6   171.0      97.00      2984.      14.5   75  1\t\"ford pinto\"\n","29.0   4   90.00      70.00      1937.      14.0   75  2\t\"volkswagen rabbit\"\n","19.0   6   232.0      90.00      3211.      17.0   75  1\t\"amc pacer\"\n","23.0   4   115.0      95.00      2694.      15.0   75  2\t\"audi 100ls\"\n","23.0   4   120.0      88.00      2957.      17.0   75  2\t\"peugeot 504\"\n","22.0   4   121.0      98.00      2945.      14.5   75  2\t\"volvo 244dl\"\n","25.0   4   121.0      115.0      2671.      13.5   75  2\t\"saab 99le\"\n","33.0   4   91.00      53.00      1795.      17.5   75  3\t\"honda civic cvcc\"\n","28.0   4   107.0      86.00      2464.      15.5   76  2\t\"fiat 131\"\n","25.0   4   116.0      81.00      2220.      16.9   76  2\t\"opel 1900\"\n","25.0   4   140.0      92.00      2572.      14.9   76  1\t\"capri ii\"\n","26.0   4   98.00      79.00      2255.      17.7   76  1\t\"dodge colt\"\n","27.0   4   101.0      83.00      2202.      15.3   76  2\t\"renault 12tl\"\n","17.5   8   305.0      140.0      4215.      13.0   76  1\t\"chevrolet chevelle malibu classic\"\n","16.0   8   318.0      150.0      4190.      13.0   76  1\t\"dodge coronet brougham\"\n","15.5   8   304.0      120.0      3962.      13.9   76  1\t\"amc matador\"\n","14.5   8   351.0      152.0      4215.      12.8   76  1\t\"ford gran torino\"\n","22.0   6   225.0      100.0      3233.      15.4   76  1\t\"plymouth valiant\"\n","22.0   6   250.0      105.0      3353.      14.5   76  1\t\"chevrolet nova\"\n","24.0   6   200.0      81.00      3012.      17.6   76  1\t\"ford maverick\"\n","22.5   6   232.0      90.00      3085.      17.6   76  1\t\"amc hornet\"\n","29.0   4   85.00      52.00      2035.      22.2   76  1\t\"chevrolet chevette\"\n","24.5   4   98.00      60.00      2164.      22.1   76  1\t\"chevrolet woody\"\n","29.0   4   90.00      70.00      1937.      14.2   76  2\t\"vw rabbit\"\n","33.0   4   91.00      53.00      1795.      17.4   76  3\t\"honda civic\"\n","20.0   6   225.0      100.0      3651.      17.7   76  1\t\"dodge aspen se\"\n","18.0   6   250.0      78.00      3574.      21.0   76  1\t\"ford granada ghia\"\n","18.5   6   250.0      110.0      3645.      16.2   76  1\t\"pontiac ventura sj\"\n","17.5   6   258.0      95.00      3193.      17.8   76  1\t\"amc pacer d/l\"\n","29.5   4   97.00      71.00      1825.      12.2   76  2\t\"volkswagen rabbit\"\n","32.0   4   85.00      70.00      1990.      17.0   76  3\t\"datsun b-210\"\n","28.0   4   97.00      75.00      2155.      16.4   76  3\t\"toyota corolla\"\n","26.5   4   140.0      72.00      2565.      13.6   76  1\t\"ford pinto\"\n","20.0   4   130.0      102.0      3150.      15.7   76  2\t\"volvo 245\"\n","13.0   8   318.0      150.0      3940.      13.2   76  1\t\"plymouth volare premier v8\"\n","19.0   4   120.0      88.00      3270.      21.9   76  2\t\"peugeot 504\"\n","19.0   6   156.0      108.0      2930.      15.5   76  3\t\"toyota mark ii\"\n","16.5   6   168.0      120.0      3820.      16.7   76  2\t\"mercedes-benz 280s\"\n","16.5   8   350.0      180.0      4380.      12.1   76  1\t\"cadillac seville\"\n","13.0   8   350.0      145.0      4055.      12.0   76  1\t\"chevy c10\"\n","13.0   8   302.0      130.0      3870.      15.0   76  1\t\"ford f108\"\n","13.0   8   318.0      150.0      3755.      14.0   76  1\t\"dodge d100\"\n","31.5   4   98.00      68.00      2045.      18.5   77  3\t\"honda accord cvcc\"\n","30.0   4   111.0      80.00      2155.      14.8   77  1\t\"buick opel isuzu deluxe\"\n","36.0   4   79.00      58.00      1825.      18.6   77  2\t\"renault 5 gtl\"\n","25.5   4   122.0      96.00      2300.      15.5   77  1\t\"plymouth arrow gs\"\n","33.5   4   85.00      70.00      1945.      16.8   77  3\t\"datsun f-10 hatchback\"\n","17.5   8   305.0      145.0      3880.      12.5   77  1\t\"chevrolet caprice classic\"\n","17.0   8   260.0      110.0      4060.      19.0   77  1\t\"oldsmobile cutlass supreme\"\n","15.5   8   318.0      145.0      4140.      13.7   77  1\t\"dodge monaco brougham\"\n","15.0   8   302.0      130.0      4295.      14.9   77  1\t\"mercury cougar brougham\"\n","17.5   6   250.0      110.0      3520.      16.4   77  1\t\"chevrolet concours\"\n","20.5   6   231.0      105.0      3425.      16.9   77  1\t\"buick skylark\"\n","19.0   6   225.0      100.0      3630.      17.7   77  1\t\"plymouth volare custom\"\n","18.5   6   250.0      98.00      3525.      19.0   77  1\t\"ford granada\"\n","16.0   8   400.0      180.0      4220.      11.1   77  1\t\"pontiac grand prix lj\"\n","15.5   8   350.0      170.0      4165.      11.4   77  1\t\"chevrolet monte carlo landau\"\n","15.5   8   400.0      190.0      4325.      12.2   77  1\t\"chrysler cordoba\"\n","16.0   8   351.0      149.0      4335.      14.5   77  1\t\"ford thunderbird\"\n","29.0   4   97.00      78.00      1940.      14.5   77  2\t\"volkswagen rabbit custom\"\n","24.5   4   151.0      88.00      2740.      16.0   77  1\t\"pontiac sunbird coupe\"\n","26.0   4   97.00      75.00      2265.      18.2   77  3\t\"toyota corolla liftback\"\n","25.5   4   140.0      89.00      2755.      15.8   77  1\t\"ford mustang ii 2+2\"\n","30.5   4   98.00      63.00      2051.      17.0   77  1\t\"chevrolet chevette\"\n","33.5   4   98.00      83.00      2075.      15.9   77  1\t\"dodge colt m/m\"\n","30.0   4   97.00      67.00      1985.      16.4   77  3\t\"subaru dl\"\n","30.5   4   97.00      78.00      2190.      14.1   77  2\t\"volkswagen dasher\"\n","22.0   6   146.0      97.00      2815.      14.5   77  3\t\"datsun 810\"\n","21.5   4   121.0      110.0      2600.      12.8   77  2\t\"bmw 320i\"\n","21.5   3   80.00      110.0      2720.      13.5   77  3\t\"mazda rx-4\"\n","43.1   4   90.00      48.00      1985.      21.5   78  2\t\"volkswagen rabbit custom diesel\"\n","36.1   4   98.00      66.00      1800.      14.4   78  1\t\"ford fiesta\"\n","32.8   4   78.00      52.00      1985.      19.4   78  3\t\"mazda glc deluxe\"\n","39.4   4   85.00      70.00      2070.      18.6   78  3\t\"datsun b210 gx\"\n","36.1   4   91.00      60.00      1800.      16.4   78  3\t\"honda civic cvcc\"\n","19.9   8   260.0      110.0      3365.      15.5   78  1\t\"oldsmobile cutlass salon brougham\"\n","19.4   8   318.0      140.0      3735.      13.2   78  1\t\"dodge diplomat\"\n","20.2   8   302.0      139.0      3570.      12.8   78  1\t\"mercury monarch ghia\"\n","19.2   6   231.0      105.0      3535.      19.2   78  1\t\"pontiac phoenix lj\"\n","20.5   6   200.0      95.00      3155.      18.2   78  1\t\"chevrolet malibu\"\n","20.2   6   200.0      85.00      2965.      15.8   78  1\t\"ford fairmont (auto)\"\n","25.1   4   140.0      88.00      2720.      15.4   78  1\t\"ford fairmont (man)\"\n","20.5   6   225.0      100.0      3430.      17.2   78  1\t\"plymouth volare\"\n","19.4   6   232.0      90.00      3210.      17.2   78  1\t\"amc concord\"\n","20.6   6   231.0      105.0      3380.      15.8   78  1\t\"buick century special\"\n","20.8   6   200.0      85.00      3070.      16.7   78  1\t\"mercury zephyr\"\n","18.6   6   225.0      110.0      3620.      18.7   78  1\t\"dodge aspen\"\n","18.1   6   258.0      120.0      3410.      15.1   78  1\t\"amc concord d/l\"\n","19.2   8   305.0      145.0      3425.      13.2   78  1\t\"chevrolet monte carlo landau\"\n","17.7   6   231.0      165.0      3445.      13.4   78  1\t\"buick regal sport coupe (turbo)\"\n","18.1   8   302.0      139.0      3205.      11.2   78  1\t\"ford futura\"\n","17.5   8   318.0      140.0      4080.      13.7   78  1\t\"dodge magnum xe\"\n","30.0   4   98.00      68.00      2155.      16.5   78  1\t\"chevrolet chevette\"\n","27.5   4   134.0      95.00      2560.      14.2   78  3\t\"toyota corona\"\n","27.2   4   119.0      97.00      2300.      14.7   78  3\t\"datsun 510\"\n","30.9   4   105.0      75.00      2230.      14.5   78  1\t\"dodge omni\"\n","21.1   4   134.0      95.00      2515.      14.8   78  3\t\"toyota celica gt liftback\"\n","23.2   4   156.0      105.0      2745.      16.7   78  1\t\"plymouth sapporo\"\n","23.8   4   151.0      85.00      2855.      17.6   78  1\t\"oldsmobile starfire sx\"\n","23.9   4   119.0      97.00      2405.      14.9   78  3\t\"datsun 200-sx\"\n","20.3   5   131.0      103.0      2830.      15.9   78  2\t\"audi 5000\"\n","17.0   6   163.0      125.0      3140.      13.6   78  2\t\"volvo 264gl\"\n","21.6   4   121.0      115.0      2795.      15.7   78  2\t\"saab 99gle\"\n","16.2   6   163.0      133.0      3410.      15.8   78  2\t\"peugeot 604sl\"\n","31.5   4   89.00      71.00      1990.      14.9   78  2\t\"volkswagen scirocco\"\n","29.5   4   98.00      68.00      2135.      16.6   78  3\t\"honda accord lx\"\n","21.5   6   231.0      115.0      3245.      15.4   79  1\t\"pontiac lemans v6\"\n","19.8   6   200.0      85.00      2990.      18.2   79  1\t\"mercury zephyr 6\"\n","22.3   4   140.0      88.00      2890.      17.3   79  1\t\"ford fairmont 4\"\n","20.2   6   232.0      90.00      3265.      18.2   79  1\t\"amc concord dl 6\"\n","20.6   6   225.0      110.0      3360.      16.6   79  1\t\"dodge aspen 6\"\n","17.0   8   305.0      130.0      3840.      15.4   79  1\t\"chevrolet caprice classic\"\n","17.6   8   302.0      129.0      3725.      13.4   79  1\t\"ford ltd landau\"\n","16.5   8   351.0      138.0      3955.      13.2   79  1\t\"mercury grand marquis\"\n","18.2   8   318.0      135.0      3830.      15.2   79  1\t\"dodge st. regis\"\n","16.9   8   350.0      155.0      4360.      14.9   79  1\t\"buick estate wagon (sw)\"\n","15.5   8   351.0      142.0      4054.      14.3   79  1\t\"ford country squire (sw)\"\n","19.2   8   267.0      125.0      3605.      15.0   79  1\t\"chevrolet malibu classic (sw)\"\n","18.5   8   360.0      150.0      3940.      13.0   79  1\t\"chrysler lebaron town @ country (sw)\"\n","31.9   4   89.00      71.00      1925.      14.0   79  2\t\"vw rabbit custom\"\n","34.1   4   86.00      65.00      1975.      15.2   79  3\t\"maxda glc deluxe\"\n","35.7   4   98.00      80.00      1915.      14.4   79  1\t\"dodge colt hatchback custom\"\n","27.4   4   121.0      80.00      2670.      15.0   79  1\t\"amc spirit dl\"\n","25.4   5   183.0      77.00      3530.      20.1   79  2\t\"mercedes benz 300d\"\n","23.0   8   350.0      125.0      3900.      17.4   79  1\t\"cadillac eldorado\"\n","27.2   4   141.0      71.00      3190.      24.8   79  2\t\"peugeot 504\"\n","23.9   8   260.0      90.00      3420.      22.2   79  1\t\"oldsmobile cutlass salon brougham\"\n","34.2   4   105.0      70.00      2200.      13.2   79  1\t\"plymouth horizon\"\n","34.5   4   105.0      70.00      2150.      14.9   79  1\t\"plymouth horizon tc3\"\n","31.8   4   85.00      65.00      2020.      19.2   79  3\t\"datsun 210\"\n","37.3   4   91.00      69.00      2130.      14.7   79  2\t\"fiat strada custom\"\n","28.4   4   151.0      90.00      2670.      16.0   79  1\t\"buick skylark limited\"\n","28.8   6   173.0      115.0      2595.      11.3   79  1\t\"chevrolet citation\"\n","26.8   6   173.0      115.0      2700.      12.9   79  1\t\"oldsmobile omega brougham\"\n","33.5   4   151.0      90.00      2556.      13.2   79  1\t\"pontiac phoenix\"\n","41.5   4   98.00      76.00      2144.      14.7   80  2\t\"vw rabbit\"\n","38.1   4   89.00      60.00      1968.      18.8   80  3\t\"toyota corolla tercel\"\n","32.1   4   98.00      70.00      2120.      15.5   80  1\t\"chevrolet chevette\"\n","37.2   4   86.00      65.00      2019.      16.4   80  3\t\"datsun 310\"\n","28.0   4   151.0      90.00      2678.      16.5   80  1\t\"chevrolet citation\"\n","26.4   4   140.0      88.00      2870.      18.1   80  1\t\"ford fairmont\"\n","24.3   4   151.0      90.00      3003.      20.1   80  1\t\"amc concord\"\n","19.1   6   225.0      90.00      3381.      18.7   80  1\t\"dodge aspen\"\n","34.3   4   97.00      78.00      2188.      15.8   80  2\t\"audi 4000\"\n","29.8   4   134.0      90.00      2711.      15.5   80  3\t\"toyota corona liftback\"\n","31.3   4   120.0      75.00      2542.      17.5   80  3\t\"mazda 626\"\n","37.0   4   119.0      92.00      2434.      15.0   80  3\t\"datsun 510 hatchback\"\n","32.2   4   108.0      75.00      2265.      15.2   80  3\t\"toyota corolla\"\n","46.6   4   86.00      65.00      2110.      17.9   80  3\t\"mazda glc\"\n","27.9   4   156.0      105.0      2800.      14.4   80  1\t\"dodge colt\"\n","40.8   4   85.00      65.00      2110.      19.2   80  3\t\"datsun 210\"\n","44.3   4   90.00      48.00      2085.      21.7   80  2\t\"vw rabbit c (diesel)\"\n","43.4   4   90.00      48.00      2335.      23.7   80  2\t\"vw dasher (diesel)\"\n","36.4   5   121.0      67.00      2950.      19.9   80  2\t\"audi 5000s (diesel)\"\n","30.0   4   146.0      67.00      3250.      21.8   80  2\t\"mercedes-benz 240d\"\n","44.6   4   91.00      67.00      1850.      13.8   80  3\t\"honda civic 1500 gl\"\n","40.9   4   85.00      ?          1835.      17.3   80  2\t\"renault lecar deluxe\"\n","33.8   4   97.00      67.00      2145.      18.0   80  3\t\"subaru dl\"\n","29.8   4   89.00      62.00      1845.      15.3   80  2\t\"vokswagen rabbit\"\n","32.7   6   168.0      132.0      2910.      11.4   80  3\t\"datsun 280-zx\"\n","23.7   3   70.00      100.0      2420.      12.5   80  3\t\"mazda rx-7 gs\"\n","35.0   4   122.0      88.00      2500.      15.1   80  2\t\"triumph tr7 coupe\"\n","23.6   4   140.0      ?          2905.      14.3   80  1\t\"ford mustang cobra\"\n","32.4   4   107.0      72.00      2290.      17.0   80  3\t\"honda accord\"\n","27.2   4   135.0      84.00      2490.      15.7   81  1\t\"plymouth reliant\"\n","26.6   4   151.0      84.00      2635.      16.4   81  1\t\"buick skylark\"\n","25.8   4   156.0      92.00      2620.      14.4   81  1\t\"dodge aries wagon (sw)\"\n","23.5   6   173.0      110.0      2725.      12.6   81  1\t\"chevrolet citation\"\n","30.0   4   135.0      84.00      2385.      12.9   81  1\t\"plymouth reliant\"\n","39.1   4   79.00      58.00      1755.      16.9   81  3\t\"toyota starlet\"\n","39.0   4   86.00      64.00      1875.      16.4   81  1\t\"plymouth champ\"\n","35.1   4   81.00      60.00      1760.      16.1   81  3\t\"honda civic 1300\"\n","32.3   4   97.00      67.00      2065.      17.8   81  3\t\"subaru\"\n","37.0   4   85.00      65.00      1975.      19.4   81  3\t\"datsun 210 mpg\"\n","37.7   4   89.00      62.00      2050.      17.3   81  3\t\"toyota tercel\"\n","34.1   4   91.00      68.00      1985.      16.0   81  3\t\"mazda glc 4\"\n","34.7   4   105.0      63.00      2215.      14.9   81  1\t\"plymouth horizon 4\"\n","34.4   4   98.00      65.00      2045.      16.2   81  1\t\"ford escort 4w\"\n","29.9   4   98.00      65.00      2380.      20.7   81  1\t\"ford escort 2h\"\n","33.0   4   105.0      74.00      2190.      14.2   81  2\t\"volkswagen jetta\"\n","34.5   4   100.0      ?          2320.      15.8   81  2\t\"renault 18i\"\n","33.7   4   107.0      75.00      2210.      14.4   81  3\t\"honda prelude\"\n","32.4   4   108.0      75.00      2350.      16.8   81  3\t\"toyota corolla\"\n","32.9   4   119.0      100.0      2615.      14.8   81  3\t\"datsun 200sx\"\n","31.6   4   120.0      74.00      2635.      18.3   81  3\t\"mazda 626\"\n","28.1   4   141.0      80.00      3230.      20.4   81  2\t\"peugeot 505s turbo diesel\"\n","30.7   6   145.0      76.00      3160.      19.6   81  2\t\"volvo diesel\"\n","25.4   6   168.0      116.0      2900.      12.6   81  3\t\"toyota cressida\"\n","24.2   6   146.0      120.0      2930.      13.8   81  3\t\"datsun 810 maxima\"\n","22.4   6   231.0      110.0      3415.      15.8   81  1\t\"buick century\"\n","26.6   8   350.0      105.0      3725.      19.0   81  1\t\"oldsmobile cutlass ls\"\n","20.2   6   200.0      88.00      3060.      17.1   81  1\t\"ford granada gl\"\n","17.6   6   225.0      85.00      3465.      16.6   81  1\t\"chrysler lebaron salon\"\n","28.0   4   112.0      88.00      2605.      19.6   82  1\t\"chevrolet cavalier\"\n","27.0   4   112.0      88.00      2640.      18.6   82  1\t\"chevrolet cavalier wagon\"\n","34.0   4   112.0      88.00      2395.      18.0   82  1\t\"chevrolet cavalier 2-door\"\n","31.0   4   112.0      85.00      2575.      16.2   82  1\t\"pontiac j2000 se hatchback\"\n","29.0   4   135.0      84.00      2525.      16.0   82  1\t\"dodge aries se\"\n","27.0   4   151.0      90.00      2735.      18.0   82  1\t\"pontiac phoenix\"\n","24.0   4   140.0      92.00      2865.      16.4   82  1\t\"ford fairmont futura\"\n","23.0   4   151.0      ?          3035.      20.5   82  1\t\"amc concord dl\"\n","36.0   4   105.0      74.00      1980.      15.3   82  2\t\"volkswagen rabbit l\"\n","37.0   4   91.00      68.00      2025.      18.2   82  3\t\"mazda glc custom l\"\n","31.0   4   91.00      68.00      1970.      17.6   82  3\t\"mazda glc custom\"\n","38.0   4   105.0      63.00      2125.      14.7   82  1\t\"plymouth horizon miser\"\n","36.0   4   98.00      70.00      2125.      17.3   82  1\t\"mercury lynx l\"\n","36.0   4   120.0      88.00      2160.      14.5   82  3\t\"nissan stanza xe\"\n","36.0   4   107.0      75.00      2205.      14.5   82  3\t\"honda accord\"\n","34.0   4   108.0      70.00      2245       16.9   82  3\t\"toyota corolla\"\n","38.0   4   91.00      67.00      1965.      15.0   82  3\t\"honda civic\"\n","32.0   4   91.00      67.00      1965.      15.7   82  3\t\"honda civic (auto)\"\n","38.0   4   91.00      67.00      1995.      16.2   82  3\t\"datsun 310 gx\"\n","25.0   6   181.0      110.0      2945.      16.4   82  1\t\"buick century limited\"\n","38.0   6   262.0      85.00      3015.      17.0   82  1\t\"oldsmobile cutlass ciera (diesel)\"\n","26.0   4   156.0      92.00      2585.      14.5   82  1\t\"chrysler lebaron medallion\"\n","22.0   6   232.0      112.0      2835       14.7   82  1\t\"ford granada l\"\n","32.0   4   144.0      96.00      2665.      13.9   82  3\t\"toyota celica gt\"\n","36.0   4   135.0      84.00      2370.      13.0   82  1\t\"dodge charger 2.2\"\n","27.0   4   151.0      90.00      2950.      17.3   82  1\t\"chevrolet camaro\"\n","27.0   4   140.0      86.00      2790.      15.6   82  1\t\"ford mustang gl\"\n","44.0   4   97.00      52.00      2130.      24.6   82  2\t\"vw pickup\"\n","32.0   4   135.0      84.00      2295.      11.6   82  1\t\"dodge rampage\"\n","28.0   4   120.0      79.00      2625.      18.6   82  1\t\"ford ranger\"\n","31.0   4   119.0      82.00      2720.      19.4   82  1\t\"chevy s-10\"\n","cat: head: No such file or directory\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"I0LzszczFnYu","colab_type":"code","outputId":"f40f0e6e-665d-40fa-ec0a-80b7a34e5443","executionInfo":{"status":"ok","timestamp":1560341532513,"user_tz":-330,"elapsed":1628,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}},"colab":{"base_uri":"https://localhost:8080/","height":232}},"source":["column_names = ['MPG','Cylinders','Displacement','Horsepower','Weight',\n","                'Acceleration', 'Model Year', 'Origin'] \n","data=pd.read_csv(data_file_path,names=column_names,sep=' ',comment='\\t',skipinitialspace=True)\n","data.tail()"],"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MPG</th>\n","      <th>Cylinders</th>\n","      <th>Displacement</th>\n","      <th>Horsepower</th>\n","      <th>Weight</th>\n","      <th>Acceleration</th>\n","      <th>Model Year</th>\n","      <th>Origin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>393</th>\n","      <td>27.0</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>86.00</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>44.0</td>\n","      <td>4</td>\n","      <td>97.0</td>\n","      <td>52.00</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","      <td>82</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>32.0</td>\n","      <td>4</td>\n","      <td>135.0</td>\n","      <td>84.00</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>79.00</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>82.00</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MPG  Cylinders  Displacement  ... Acceleration  Model Year  Origin\n","393  27.0          4         140.0  ...         15.6          82       1\n","394  44.0          4          97.0  ...         24.6          82       2\n","395  32.0          4         135.0  ...         11.6          82       1\n","396  28.0          4         120.0  ...         18.6          82       1\n","397  31.0          4         119.0  ...         19.4          82       1\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"R1FzhxOrTQpV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":274},"outputId":"95b404d0-bad8-42b7-89bc-dabd16129246","executionInfo":{"status":"ok","timestamp":1560341532533,"user_tz":-330,"elapsed":762,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data.describe().T"],"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>MPG</th>\n","      <td>398.0</td>\n","      <td>23.514573</td>\n","      <td>7.815984</td>\n","      <td>9.0</td>\n","      <td>17.500</td>\n","      <td>23.0</td>\n","      <td>29.000</td>\n","      <td>46.6</td>\n","    </tr>\n","    <tr>\n","      <th>Cylinders</th>\n","      <td>398.0</td>\n","      <td>5.454774</td>\n","      <td>1.701004</td>\n","      <td>3.0</td>\n","      <td>4.000</td>\n","      <td>4.0</td>\n","      <td>8.000</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>Displacement</th>\n","      <td>398.0</td>\n","      <td>193.425879</td>\n","      <td>104.269838</td>\n","      <td>68.0</td>\n","      <td>104.250</td>\n","      <td>148.5</td>\n","      <td>262.000</td>\n","      <td>455.0</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>398.0</td>\n","      <td>2970.424623</td>\n","      <td>846.841774</td>\n","      <td>1613.0</td>\n","      <td>2223.750</td>\n","      <td>2803.5</td>\n","      <td>3608.000</td>\n","      <td>5140.0</td>\n","    </tr>\n","    <tr>\n","      <th>Acceleration</th>\n","      <td>398.0</td>\n","      <td>15.568090</td>\n","      <td>2.757689</td>\n","      <td>8.0</td>\n","      <td>13.825</td>\n","      <td>15.5</td>\n","      <td>17.175</td>\n","      <td>24.8</td>\n","    </tr>\n","    <tr>\n","      <th>Model Year</th>\n","      <td>398.0</td>\n","      <td>76.010050</td>\n","      <td>3.697627</td>\n","      <td>70.0</td>\n","      <td>73.000</td>\n","      <td>76.0</td>\n","      <td>79.000</td>\n","      <td>82.0</td>\n","    </tr>\n","    <tr>\n","      <th>Origin</th>\n","      <td>398.0</td>\n","      <td>1.572864</td>\n","      <td>0.802055</td>\n","      <td>1.0</td>\n","      <td>1.000</td>\n","      <td>1.0</td>\n","      <td>2.000</td>\n","      <td>3.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              count         mean         std  ...     50%       75%     max\n","MPG           398.0    23.514573    7.815984  ...    23.0    29.000    46.6\n","Cylinders     398.0     5.454774    1.701004  ...     4.0     8.000     8.0\n","Displacement  398.0   193.425879  104.269838  ...   148.5   262.000   455.0\n","Weight        398.0  2970.424623  846.841774  ...  2803.5  3608.000  5140.0\n","Acceleration  398.0    15.568090    2.757689  ...    15.5    17.175    24.8\n","Model Year    398.0    76.010050    3.697627  ...    76.0    79.000    82.0\n","Origin        398.0     1.572864    0.802055  ...     1.0     2.000     3.0\n","\n","[7 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":75}]},{"cell_type":"code","metadata":{"id":"InihO8ztmLBP","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_18P3nJolEgo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":175},"outputId":"bd39b397-1971-476b-a13a-d7e9e3d4948c","executionInfo":{"status":"ok","timestamp":1560341535253,"user_tz":-330,"elapsed":1008,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data.dtypes"],"execution_count":76,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MPG             float64\n","Cylinders         int64\n","Displacement    float64\n","Horsepower       object\n","Weight          float64\n","Acceleration    float64\n","Model Year        int64\n","Origin            int64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"dik93d30kxRX","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":262},"outputId":"09e67c07-b9a7-45d8-eae1-784ae5df328a","executionInfo":{"status":"ok","timestamp":1560341661703,"user_tz":-330,"elapsed":1164,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["#na rows\n","data[data['Horsepower']=='?']"],"execution_count":83,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MPG</th>\n","      <th>Cylinders</th>\n","      <th>Displacement</th>\n","      <th>Horsepower</th>\n","      <th>Weight</th>\n","      <th>Acceleration</th>\n","      <th>Model Year</th>\n","      <th>Origin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32</th>\n","      <td>25.0</td>\n","      <td>4</td>\n","      <td>98.0</td>\n","      <td>?</td>\n","      <td>2046.0</td>\n","      <td>19.0</td>\n","      <td>71</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>21.0</td>\n","      <td>6</td>\n","      <td>200.0</td>\n","      <td>?</td>\n","      <td>2875.0</td>\n","      <td>17.0</td>\n","      <td>74</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>330</th>\n","      <td>40.9</td>\n","      <td>4</td>\n","      <td>85.0</td>\n","      <td>?</td>\n","      <td>1835.0</td>\n","      <td>17.3</td>\n","      <td>80</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>336</th>\n","      <td>23.6</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>?</td>\n","      <td>2905.0</td>\n","      <td>14.3</td>\n","      <td>80</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>354</th>\n","      <td>34.5</td>\n","      <td>4</td>\n","      <td>100.0</td>\n","      <td>?</td>\n","      <td>2320.0</td>\n","      <td>15.8</td>\n","      <td>81</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>374</th>\n","      <td>23.0</td>\n","      <td>4</td>\n","      <td>151.0</td>\n","      <td>?</td>\n","      <td>3035.0</td>\n","      <td>20.5</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MPG  Cylinders  Displacement  ... Acceleration  Model Year  Origin\n","32   25.0          4          98.0  ...         19.0          71       1\n","126  21.0          6         200.0  ...         17.0          74       1\n","330  40.9          4          85.0  ...         17.3          80       2\n","336  23.6          4         140.0  ...         14.3          80       1\n","354  34.5          4         100.0  ...         15.8          81       2\n","374  23.0          4         151.0  ...         20.5          82       1\n","\n","[6 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":83}]},{"cell_type":"code","metadata":{"id":"pWwaBgsFlciC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":262},"outputId":"d54b10e3-6d47-417e-f2c7-c16beca2d90f","executionInfo":{"status":"ok","timestamp":1560341618977,"user_tz":-330,"elapsed":1370,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data.loc[[32,126,330,336,354,374],:]"],"execution_count":81,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MPG</th>\n","      <th>Cylinders</th>\n","      <th>Displacement</th>\n","      <th>Horsepower</th>\n","      <th>Weight</th>\n","      <th>Acceleration</th>\n","      <th>Model Year</th>\n","      <th>Origin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32</th>\n","      <td>25.0</td>\n","      <td>4</td>\n","      <td>98.0</td>\n","      <td>?</td>\n","      <td>2046.0</td>\n","      <td>19.0</td>\n","      <td>71</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>21.0</td>\n","      <td>6</td>\n","      <td>200.0</td>\n","      <td>?</td>\n","      <td>2875.0</td>\n","      <td>17.0</td>\n","      <td>74</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>330</th>\n","      <td>40.9</td>\n","      <td>4</td>\n","      <td>85.0</td>\n","      <td>?</td>\n","      <td>1835.0</td>\n","      <td>17.3</td>\n","      <td>80</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>336</th>\n","      <td>23.6</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>?</td>\n","      <td>2905.0</td>\n","      <td>14.3</td>\n","      <td>80</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>354</th>\n","      <td>34.5</td>\n","      <td>4</td>\n","      <td>100.0</td>\n","      <td>?</td>\n","      <td>2320.0</td>\n","      <td>15.8</td>\n","      <td>81</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>374</th>\n","      <td>23.0</td>\n","      <td>4</td>\n","      <td>151.0</td>\n","      <td>?</td>\n","      <td>3035.0</td>\n","      <td>20.5</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MPG  Cylinders  Displacement  ... Acceleration  Model Year  Origin\n","32   25.0          4          98.0  ...         19.0          71       1\n","126  21.0          6         200.0  ...         17.0          74       1\n","330  40.9          4          85.0  ...         17.3          80       2\n","336  23.6          4         140.0  ...         14.3          80       1\n","354  34.5          4         100.0  ...         15.8          81       2\n","374  23.0          4         151.0  ...         20.5          82       1\n","\n","[6 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":81}]},{"cell_type":"code","metadata":{"id":"XEJ63dE1mCYg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":175},"outputId":"48b5cb58-0031-44e5-a799-115a6345eee2","executionInfo":{"status":"ok","timestamp":1560341405972,"user_tz":-330,"elapsed":1134,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data.loc[[32,126,330,336,354,374],:].dtypes"],"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MPG             float64\n","Cylinders         int64\n","Displacement    float64\n","Horsepower       object\n","Weight          float64\n","Acceleration    float64\n","Model Year        int64\n","Origin            int64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"8sQOpbURYVGA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":175},"outputId":"154931b4-4a48-42fb-a050-7328deca2d42","executionInfo":{"status":"ok","timestamp":1560341055206,"user_tz":-330,"elapsed":1042,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["#clean data\n","data.isna().sum()"],"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MPG             0\n","Cylinders       0\n","Displacement    0\n","Horsepower      6\n","Weight          0\n","Acceleration    0\n","Model Year      0\n","Origin          0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"code","metadata":{"id":"tw35M4enXR3i","colab_type":"code","colab":{}},"source":["#split data into train and test\n","\n","train=data.sample(frac=0.8,random_state=100)\n","test=data.drop(train.index)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"-Cx5kCT-WXqq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"914fa589-842c-44d4-edaf-f2a46373a5a6","executionInfo":{"status":"ok","timestamp":1560340763571,"user_tz":-330,"elapsed":5881,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["print('train={} test={}'.format(train.shape,test.shape))"],"execution_count":49,"outputs":[{"output_type":"stream","text":["train=(318, 8) test=(80, 8)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NXDhEWQVXfSt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"efe5b8e6-f6d5-4e79-a173-51abc0632ac9","executionInfo":{"status":"ok","timestamp":1560337747116,"user_tz":-330,"elapsed":1383,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data.shape"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(398, 8)"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"JhG6nUHmn5BV","colab_type":"text"},"source":["#Fuel Efficiency v2"]},{"cell_type":"markdown","metadata":{"id":"ZgzLB44ABXoP","colab_type":"text"},"source":["# New Section"]},{"cell_type":"code","metadata":{"id":"FAMoSinBn3BD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"bef4dddc-823f-462f-8d8f-f77aae64580b","executionInfo":{"status":"ok","timestamp":1560348935705,"user_tz":-330,"elapsed":4098,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["import pathlib\n","\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import seaborn as sns\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow.keras import layers\n","\n","tf.__version__"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'1.13.1'"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"0eUoXwNlogCn","colab_type":"text"},"source":["##Get Data"]},{"cell_type":"code","metadata":{"id":"_ysUhuFFoeas","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"de5e7266-f703-41ec-c6ec-7aefa78ef7f3","executionInfo":{"status":"ok","timestamp":1560348936264,"user_tz":-330,"elapsed":4593,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["file_path=keras.utils.get_file('fuel_efficiency.data',\n","                         \"https://archive.ics.uci.edu/ml/machine-learning-databases/auto-mpg/auto-mpg.data\")\n","file_path"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/root/.keras/datasets/fuel_efficiency.data'"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"rNNmEC9Go208","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":232},"outputId":"64a1f57e-653b-4bc9-e18b-420f9de9ed92","executionInfo":{"status":"ok","timestamp":1560348936268,"user_tz":-330,"elapsed":4492,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["column_names=['MPG','Cylinders','Displacement','Horsepower','Weight',\n","                'Acceleration', 'Model Year', 'Origin']\n","\n","_raw_data=pd.read_csv(file_path,names=column_names,na_values='?',\n","                    comment='\\t',sep=' ',skipinitialspace=True)\n","data=_raw_data.copy()\n","data.tail()"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MPG</th>\n","      <th>Cylinders</th>\n","      <th>Displacement</th>\n","      <th>Horsepower</th>\n","      <th>Weight</th>\n","      <th>Acceleration</th>\n","      <th>Model Year</th>\n","      <th>Origin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>393</th>\n","      <td>27.0</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>86.0</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>44.0</td>\n","      <td>4</td>\n","      <td>97.0</td>\n","      <td>52.0</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","      <td>82</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>32.0</td>\n","      <td>4</td>\n","      <td>135.0</td>\n","      <td>84.0</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>82.0</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MPG  Cylinders  Displacement  ...  Acceleration  Model Year  Origin\n","393  27.0          4         140.0  ...          15.6          82       1\n","394  44.0          4          97.0  ...          24.6          82       2\n","395  32.0          4         135.0  ...          11.6          82       1\n","396  28.0          4         120.0  ...          18.6          82       1\n","397  31.0          4         119.0  ...          19.4          82       1\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"60ddnfejpay0","colab_type":"text"},"source":["#Clean the data"]},{"cell_type":"code","metadata":{"id":"8mcSGiS8pWV3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":175},"outputId":"801ca2bb-c823-4e15-e0ca-073e53a72e46","executionInfo":{"status":"ok","timestamp":1560348936272,"user_tz":-330,"elapsed":4454,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["#na row\n","data.isna().sum()"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MPG             0\n","Cylinders       0\n","Displacement    0\n","Horsepower      6\n","Weight          0\n","Acceleration    0\n","Model Year      0\n","Origin          0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"RopR9FZWp6P5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":262},"outputId":"7b9fce12-0c6a-4ba4-d29a-b830f2b94ad6","executionInfo":{"status":"ok","timestamp":1560348936275,"user_tz":-330,"elapsed":4381,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data[data['Horsepower'].isna()]"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MPG</th>\n","      <th>Cylinders</th>\n","      <th>Displacement</th>\n","      <th>Horsepower</th>\n","      <th>Weight</th>\n","      <th>Acceleration</th>\n","      <th>Model Year</th>\n","      <th>Origin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32</th>\n","      <td>25.0</td>\n","      <td>4</td>\n","      <td>98.0</td>\n","      <td>NaN</td>\n","      <td>2046.0</td>\n","      <td>19.0</td>\n","      <td>71</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>126</th>\n","      <td>21.0</td>\n","      <td>6</td>\n","      <td>200.0</td>\n","      <td>NaN</td>\n","      <td>2875.0</td>\n","      <td>17.0</td>\n","      <td>74</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>330</th>\n","      <td>40.9</td>\n","      <td>4</td>\n","      <td>85.0</td>\n","      <td>NaN</td>\n","      <td>1835.0</td>\n","      <td>17.3</td>\n","      <td>80</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>336</th>\n","      <td>23.6</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>NaN</td>\n","      <td>2905.0</td>\n","      <td>14.3</td>\n","      <td>80</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>354</th>\n","      <td>34.5</td>\n","      <td>4</td>\n","      <td>100.0</td>\n","      <td>NaN</td>\n","      <td>2320.0</td>\n","      <td>15.8</td>\n","      <td>81</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>374</th>\n","      <td>23.0</td>\n","      <td>4</td>\n","      <td>151.0</td>\n","      <td>NaN</td>\n","      <td>3035.0</td>\n","      <td>20.5</td>\n","      <td>82</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MPG  Cylinders  Displacement  ...  Acceleration  Model Year  Origin\n","32   25.0          4          98.0  ...          19.0          71       1\n","126  21.0          6         200.0  ...          17.0          74       1\n","330  40.9          4          85.0  ...          17.3          80       2\n","336  23.6          4         140.0  ...          14.3          80       1\n","354  34.5          4         100.0  ...          15.8          81       2\n","374  23.0          4         151.0  ...          20.5          82       1\n","\n","[6 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"2FyzUrszqCGe","colab_type":"code","colab":{}},"source":["data=data.dropna()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"IQfU9GY_qEyC","colab_type":"code","colab":{}},"source":["origin=data.pop('Origin')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jvbPhdKFqWaU","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":232},"outputId":"71780b56-d49f-47d3-a20f-92b2e937cc6b","executionInfo":{"status":"ok","timestamp":1560348938373,"user_tz":-330,"elapsed":6142,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["data['USA']=(origin==1)*1.0\n","data['Europe']=(origin==2)*1.0\n","data['Japan']=(origin==3)*1.0\n","data.tail()"],"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MPG</th>\n","      <th>Cylinders</th>\n","      <th>Displacement</th>\n","      <th>Horsepower</th>\n","      <th>Weight</th>\n","      <th>Acceleration</th>\n","      <th>Model Year</th>\n","      <th>USA</th>\n","      <th>Europe</th>\n","      <th>Japan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>393</th>\n","      <td>27.0</td>\n","      <td>4</td>\n","      <td>140.0</td>\n","      <td>86.0</td>\n","      <td>2790.0</td>\n","      <td>15.6</td>\n","      <td>82</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>394</th>\n","      <td>44.0</td>\n","      <td>4</td>\n","      <td>97.0</td>\n","      <td>52.0</td>\n","      <td>2130.0</td>\n","      <td>24.6</td>\n","      <td>82</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>32.0</td>\n","      <td>4</td>\n","      <td>135.0</td>\n","      <td>84.0</td>\n","      <td>2295.0</td>\n","      <td>11.6</td>\n","      <td>82</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>28.0</td>\n","      <td>4</td>\n","      <td>120.0</td>\n","      <td>79.0</td>\n","      <td>2625.0</td>\n","      <td>18.6</td>\n","      <td>82</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>31.0</td>\n","      <td>4</td>\n","      <td>119.0</td>\n","      <td>82.0</td>\n","      <td>2720.0</td>\n","      <td>19.4</td>\n","      <td>82</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      MPG  Cylinders  Displacement  Horsepower  ...  Model Year  USA  Europe  Japan\n","393  27.0          4         140.0        86.0  ...          82  1.0     0.0    0.0\n","394  44.0          4          97.0        52.0  ...          82  0.0     1.0    0.0\n","395  32.0          4         135.0        84.0  ...          82  1.0     0.0    0.0\n","396  28.0          4         120.0        79.0  ...          82  1.0     0.0    0.0\n","397  31.0          4         119.0        82.0  ...          82  1.0     0.0    0.0\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"yN-d8nbSrYBK","colab_type":"text"},"source":["#Split data"]},{"cell_type":"code","metadata":{"id":"kBagt0Qvqv_q","colab_type":"code","colab":{}},"source":["train=data.sample(frac=0.8,random_state=100)\n","test=data.drop(train.index)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"yL0WntmKrreM","colab_type":"text"},"source":["#EDA"]},{"cell_type":"code","metadata":{"id":"1jH3bKayrmbe","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":766},"outputId":"bd87590e-4c92-4f31-cf82-622dd068b1bc","executionInfo":{"status":"ok","timestamp":1560348942876,"user_tz":-330,"elapsed":10510,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["sns.pairplot(train[['MPG','Cylinders','Displacement','Weight']],diag_kind='kde')"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.PairGrid at 0x7f3299317c18>"]},"metadata":{"tags":[]},"execution_count":13},{"output_type":"display_data","data":{"image/png":"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\njUZTD/4/7uanGrDaMrMAAAAASUVORK5CYII=\n","text/plain":["<Figure size 720x720 with 20 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"xn5nQyoHsEoR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":363},"outputId":"43e4be3e-cb4f-48da-bd8f-e510871b6bad","executionInfo":{"status":"ok","timestamp":1560348942881,"user_tz":-330,"elapsed":10478,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["train.describe().T"],"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>MPG</th>\n","      <td>314.0</td>\n","      <td>23.579299</td>\n","      <td>7.877216</td>\n","      <td>9.0</td>\n","      <td>17.125</td>\n","      <td>23.0</td>\n","      <td>29.375</td>\n","      <td>46.6</td>\n","    </tr>\n","    <tr>\n","      <th>Cylinders</th>\n","      <td>314.0</td>\n","      <td>5.455414</td>\n","      <td>1.691811</td>\n","      <td>3.0</td>\n","      <td>4.000</td>\n","      <td>4.0</td>\n","      <td>8.000</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>Displacement</th>\n","      <td>314.0</td>\n","      <td>192.562102</td>\n","      <td>103.701434</td>\n","      <td>68.0</td>\n","      <td>98.000</td>\n","      <td>146.0</td>\n","      <td>260.000</td>\n","      <td>455.0</td>\n","    </tr>\n","    <tr>\n","      <th>Horsepower</th>\n","      <td>314.0</td>\n","      <td>103.767516</td>\n","      <td>38.123560</td>\n","      <td>46.0</td>\n","      <td>75.000</td>\n","      <td>94.5</td>\n","      <td>120.000</td>\n","      <td>230.0</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>314.0</td>\n","      <td>2959.312102</td>\n","      <td>856.880939</td>\n","      <td>1649.0</td>\n","      <td>2193.000</td>\n","      <td>2764.5</td>\n","      <td>3612.000</td>\n","      <td>5140.0</td>\n","    </tr>\n","    <tr>\n","      <th>Acceleration</th>\n","      <td>314.0</td>\n","      <td>15.518471</td>\n","      <td>2.705097</td>\n","      <td>8.0</td>\n","      <td>13.900</td>\n","      <td>15.5</td>\n","      <td>17.000</td>\n","      <td>24.8</td>\n","    </tr>\n","    <tr>\n","      <th>Model Year</th>\n","      <td>314.0</td>\n","      <td>75.964968</td>\n","      <td>3.672110</td>\n","      <td>70.0</td>\n","      <td>73.000</td>\n","      <td>76.0</td>\n","      <td>79.000</td>\n","      <td>82.0</td>\n","    </tr>\n","    <tr>\n","      <th>USA</th>\n","      <td>314.0</td>\n","      <td>0.608280</td>\n","      <td>0.488914</td>\n","      <td>0.0</td>\n","      <td>0.000</td>\n","      <td>1.0</td>\n","      <td>1.000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Europe</th>\n","      <td>314.0</td>\n","      <td>0.171975</td>\n","      <td>0.377961</td>\n","      <td>0.0</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.000</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>Japan</th>\n","      <td>314.0</td>\n","      <td>0.219745</td>\n","      <td>0.414735</td>\n","      <td>0.0</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.000</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              count         mean         std  ...     50%       75%     max\n","MPG           314.0    23.579299    7.877216  ...    23.0    29.375    46.6\n","Cylinders     314.0     5.455414    1.691811  ...     4.0     8.000     8.0\n","Displacement  314.0   192.562102  103.701434  ...   146.0   260.000   455.0\n","Horsepower    314.0   103.767516   38.123560  ...    94.5   120.000   230.0\n","Weight        314.0  2959.312102  856.880939  ...  2764.5  3612.000  5140.0\n","Acceleration  314.0    15.518471    2.705097  ...    15.5    17.000    24.8\n","Model Year    314.0    75.964968    3.672110  ...    76.0    79.000    82.0\n","USA           314.0     0.608280    0.488914  ...     1.0     1.000     1.0\n","Europe        314.0     0.171975    0.377961  ...     0.0     0.000     1.0\n","Japan         314.0     0.219745    0.414735  ...     0.0     0.000     1.0\n","\n","[10 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"kPAs-Tr7tZUK","colab_type":"text"},"source":["#Prepare train and test datasets"]},{"cell_type":"code","metadata":{"id":"503FuMRytL5s","colab_type":"code","colab":{}},"source":["train_y=train.pop('MPG')\n","test_y=test.pop('MPG')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"v1cWsiJCt1XY","colab_type":"text"},"source":["#preprocessing"]},{"cell_type":"code","metadata":{"id":"L5lWo3sOtzly","colab_type":"code","colab":{}},"source":["from sklearn.preprocessing import scale,StandardScaler\n","std_scalar=StandardScaler()\n","scaled_arr=std_scalar.fit_transform(train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"KXw5teraxhmR","colab_type":"code","colab":{}},"source":["norm_train_x=pd.DataFrame(scaled_arr,columns=train.columns)\n","test_scaled_arr=std_scalar.transform(test)\n","norm_test_x=pd.DataFrame(test_scaled_arr,columns=train.columns)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jRkxZyVOxi8G","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":334},"outputId":"6c680369-d396-467c-a870-d9a7b5620155","executionInfo":{"status":"ok","timestamp":1560348942940,"user_tz":-330,"elapsed":10379,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["norm_test_x.describe().T"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Cylinders</th>\n","      <td>78.0</td>\n","      <td>0.049166</td>\n","      <td>1.048215</td>\n","      <td>-1.453669</td>\n","      <td>-0.861643</td>\n","      <td>-0.861643</td>\n","      <td>1.506462</td>\n","      <td>1.506462</td>\n","    </tr>\n","    <tr>\n","      <th>Displacement</th>\n","      <td>78.0</td>\n","      <td>0.089793</td>\n","      <td>1.050098</td>\n","      <td>-1.183761</td>\n","      <td>-0.761204</td>\n","      <td>-0.401426</td>\n","      <td>1.078733</td>\n","      <td>2.534746</td>\n","    </tr>\n","    <tr>\n","      <th>Horsepower</th>\n","      <td>78.0</td>\n","      <td>0.092672</td>\n","      <td>1.052600</td>\n","      <td>-1.465145</td>\n","      <td>-0.617861</td>\n","      <td>-0.335433</td>\n","      <td>0.689189</td>\n","      <td>3.185064</td>\n","    </tr>\n","    <tr>\n","      <th>Weight</th>\n","      <td>78.0</td>\n","      <td>0.107338</td>\n","      <td>0.958303</td>\n","      <td>-1.573685</td>\n","      <td>-0.684163</td>\n","      <td>-0.092707</td>\n","      <td>0.836558</td>\n","      <td>2.075577</td>\n","    </tr>\n","    <tr>\n","      <th>Acceleration</th>\n","      <td>78.0</td>\n","      <td>0.042529</td>\n","      <td>1.104207</td>\n","      <td>-2.043283</td>\n","      <td>-0.747364</td>\n","      <td>-0.006839</td>\n","      <td>0.770712</td>\n","      <td>2.955261</td>\n","    </tr>\n","    <tr>\n","      <th>Model Year</th>\n","      <td>78.0</td>\n","      <td>0.020046</td>\n","      <td>1.023819</td>\n","      <td>-1.626991</td>\n","      <td>-0.808718</td>\n","      <td>0.009555</td>\n","      <td>0.827828</td>\n","      <td>1.646101</td>\n","    </tr>\n","    <tr>\n","      <th>USA</th>\n","      <td>78.0</td>\n","      <td>0.172140</td>\n","      <td>0.951635</td>\n","      <td>-1.246132</td>\n","      <td>-1.246132</td>\n","      <td>0.802483</td>\n","      <td>0.802483</td>\n","      <td>0.802483</td>\n","    </tr>\n","    <tr>\n","      <th>Europe</th>\n","      <td>78.0</td>\n","      <td>0.019909</td>\n","      <td>1.023546</td>\n","      <td>-0.455733</td>\n","      <td>-0.455733</td>\n","      <td>-0.455733</td>\n","      <td>-0.455733</td>\n","      <td>2.194269</td>\n","    </tr>\n","    <tr>\n","      <th>Japan</th>\n","      <td>78.0</td>\n","      <td>-0.221072</td>\n","      <td>0.812613</td>\n","      <td>-0.530691</td>\n","      <td>-0.530691</td>\n","      <td>-0.530691</td>\n","      <td>-0.530691</td>\n","      <td>1.884337</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              count      mean       std  ...       50%       75%       max\n","Cylinders      78.0  0.049166  1.048215  ... -0.861643  1.506462  1.506462\n","Displacement   78.0  0.089793  1.050098  ... -0.401426  1.078733  2.534746\n","Horsepower     78.0  0.092672  1.052600  ... -0.335433  0.689189  3.185064\n","Weight         78.0  0.107338  0.958303  ... -0.092707  0.836558  2.075577\n","Acceleration   78.0  0.042529  1.104207  ... -0.006839  0.770712  2.955261\n","Model Year     78.0  0.020046  1.023819  ...  0.009555  0.827828  1.646101\n","USA            78.0  0.172140  0.951635  ...  0.802483  0.802483  0.802483\n","Europe         78.0  0.019909  1.023546  ... -0.455733 -0.455733  2.194269\n","Japan          78.0 -0.221072  0.812613  ... -0.530691 -0.530691  1.884337\n","\n","[9 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"markdown","metadata":{"id":"QAFdJEFh0W2l","colab_type":"text"},"source":["#Model"]},{"cell_type":"code","metadata":{"id":"kgIVpbYw040z","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":90},"outputId":"ba508a4a-072b-4065-b29b-9e44ae69a177","executionInfo":{"status":"ok","timestamp":1560348942944,"user_tz":-330,"elapsed":10279,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["#norm_train_x,train_y,norm_test_x,test_y\n","\n","norm_train_x.keys()"],"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Cylinders', 'Displacement', 'Horsepower', 'Weight', 'Acceleration',\n","       'Model Year', 'USA', 'Europe', 'Japan'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"mI0CFE-uz15D","colab_type":"code","colab":{}},"source":["def build_model():\n","  model=keras.Sequential([\n","      layers.Dense(64,activation=tf.nn.relu, input_shape=[len(norm_train_x.keys())]),\n","      layers.Dense(64, activation=tf.nn.relu),\n","      layers.Dense(1)\n","  ])\n","  \n","  optimizer=tf.keras.optimizers.RMSprop(0.001)\n","  \n","  model.compile(loss='mean_squared_error',\n","               optimizer=optimizer,\n","               metrics=['mean_absolute_error','mean_squared_error'])\n","  return model"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"e6ZhtjBC2Fi1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":142},"outputId":"9936712c-cbde-401d-85a2-07bba2298980","executionInfo":{"status":"ok","timestamp":1560348942985,"user_tz":-330,"elapsed":10235,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["model=build_model()"],"execution_count":21,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/resource_variable_ops.py:435: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Colocations handled automatically by placer.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/utils/losses_utils.py:170: to_float (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.cast instead.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"H-fSlorE2Hem","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":4067},"outputId":"1fecf22b-c07a-43e0-d38f-9e5277e0ea9b","executionInfo":{"status":"ok","timestamp":1560348942988,"user_tz":-330,"elapsed":10193,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["#tf.reset_default_graph()\n","tf.get_default_graph().get_operations()"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<tf.Operation 'dense_input' type=Placeholder>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/MatMul' type=MatMul>,\n"," <tf.Operation 'dense/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'dense/Relu' type=Relu>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_1/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_1/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_1/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_1/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_1/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_1/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_1/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_1/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_1/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'dense_1/Relu' type=Relu>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_2/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_2/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_2/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_2/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_2/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_2/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_2/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_2/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_2/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'RMSprop/lr/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/lr' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/lr/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/lr/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/lr/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop/rho/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/rho' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/rho/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/rho/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/rho/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop/decay/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/decay' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/decay/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/decay/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/decay/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop/iterations/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/iterations' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/iterations/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/iterations/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/iterations/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2_target' type=Placeholder>,\n"," <tf.Operation 'Const' type=Const>,\n"," <tf.Operation 'dense_2_sample_weights' type=PlaceholderWithDefault>,\n"," <tf.Operation 'total/Initializer/zeros' type=Const>,\n"," <tf.Operation 'total' type=VarHandleOp>,\n"," <tf.Operation 'total/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'total/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'total/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'count/Initializer/zeros' type=Const>,\n"," <tf.Operation 'count' type=VarHandleOp>,\n"," <tf.Operation 'count/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'count/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'count/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'total_1/Initializer/zeros' type=Const>,\n"," <tf.Operation 'total_1' type=VarHandleOp>,\n"," <tf.Operation 'total_1/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'total_1/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'total_1/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'count_1/Initializer/zeros' type=Const>,\n"," <tf.Operation 'count_1' type=VarHandleOp>,\n"," <tf.Operation 'count_1/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'count_1/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'count_1/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/sub' type=Sub>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/Square' type=Square>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/Mean' type=Mean>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape' type=Shape>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/values/shape' type=Shape>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/values/rank' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_scalar/x' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_scalar' type=Equal>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank' type=Equal>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims' type=ExpandDims>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like' type=Fill>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat' type=ConcatV2>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1' type=ExpandDims>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation' type=DenseToDenseSetOperation>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims' type=Size>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims' type=Equal>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge' type=Merge>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge' type=Merge>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_1' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_2' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_3' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_4' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_5' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp' type=NoOp>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert' type=Assert>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge' type=Merge>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like/Shape' type=Shape>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like' type=Fill>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights' type=Mul>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul' type=Mul>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum' type=Sum>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/num_elements' type=Size>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/num_elements/Cast' type=Cast>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Const_1' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_1' type=Sum>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/value' type=DivNoNan>,\n"," <tf.Operation 'loss/mul/x' type=Const>,\n"," <tf.Operation 'loss/mul' type=Mul>,\n"," <tf.Operation 'metrics/mean_absolute_error/sub' type=Sub>,\n"," <tf.Operation 'metrics/mean_absolute_error/Abs' type=Abs>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean' type=Mean>,\n"," <tf.Operation 'metrics/mean_absolute_error/Size' type=Size>,\n"," <tf.Operation 'metrics/mean_absolute_error/Cast' type=Cast>,\n"," <tf.Operation 'metrics/mean_absolute_error/Const' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Sum' type=Sum>,\n"," <tf.Operation 'metrics/mean_absolute_error/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/AssignAddVariableOp_1' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/div_no_nan/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/div_no_nan/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'metrics/mean_absolute_error/sub_1' type=Sub>,\n"," <tf.Operation 'metrics/mean_absolute_error/Abs_1' type=Abs>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean_1/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean_1' type=Mean>,\n"," <tf.Operation 'metrics/mean_absolute_error/Const_1' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean_2' type=Mean>,\n"," <tf.Operation 'metrics/mean_squared_error/sub' type=Sub>,\n"," <tf.Operation 'metrics/mean_squared_error/Square' type=Square>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean' type=Mean>,\n"," <tf.Operation 'metrics/mean_squared_error/Size' type=Size>,\n"," <tf.Operation 'metrics/mean_squared_error/Cast' type=Cast>,\n"," <tf.Operation 'metrics/mean_squared_error/Const' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Sum' type=Sum>,\n"," <tf.Operation 'metrics/mean_squared_error/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/AssignAddVariableOp_1' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/div_no_nan/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/div_no_nan/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'metrics/mean_squared_error/sub_1' type=Sub>,\n"," <tf.Operation 'metrics/mean_squared_error/Square_1' type=Square>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean_1/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean_1' type=Mean>,\n"," <tf.Operation 'metrics/mean_squared_error/Const_1' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean_2' type=Mean>]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"phoc9V7T27_7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":246},"outputId":"d1f67b19-5592-42c8-f542-31804ab482a5","executionInfo":{"status":"ok","timestamp":1560348943008,"user_tz":-330,"elapsed":10152,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["model.summary()"],"execution_count":23,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","dense (Dense)                (None, 64)                640       \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 64)                4160      \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 1)                 65        \n","=================================================================\n","Total params: 4,865\n","Trainable params: 4,865\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"piRJLKbf3IcE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":193},"outputId":"58c6bc80-3949-49a7-9474-75ff01d81cab","executionInfo":{"status":"ok","timestamp":1560348943011,"user_tz":-330,"elapsed":10111,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["model.predict(norm_train_x[:10])"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.10337799],\n","       [-0.00777215],\n","       [-0.24159423],\n","       [ 0.06551525],\n","       [-0.38311988],\n","       [ 0.22187604],\n","       [-0.31263775],\n","       [-0.02489866],\n","       [-0.10641665],\n","       [ 0.07121145]], dtype=float32)"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"markdown","metadata":{"id":"jfd9O8uf3V7P","colab_type":"text"},"source":["##Trainingde"]},{"cell_type":"code","metadata":{"id":"T8-2pGlo3VQi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"outputId":"70456425-e861-4eae-81e5-a2e58c25092e","executionInfo":{"status":"ok","timestamp":1560348957925,"user_tz":-330,"elapsed":24958,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["class PrintDot(keras.callbacks.Callback):\n","  def on_epoch_end(self,epoch,logs):\n","    if epoch%100==0:print('')\n","    print('*',end='')\n","\n","EPOCHS=1000\n","\n","history=model.fit(\n","    norm_train_x,\n","    train_y,\n","    epochs=EPOCHS,\n","    validation_split=0.2,\n","    verbose=0,\n","    callbacks=[PrintDot()]\n",")"],"execution_count":25,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.cast instead.\n","\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************\n","****************************************************************************************************"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WU5hSMNL5DAe","colab_type":"text"},"source":["##Analyzing history object"]},{"cell_type":"code","metadata":{"id":"5NXNcPm55YKD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"ddd8b292-d863-412e-854d-bf555a63b369","executionInfo":{"status":"ok","timestamp":1560348957929,"user_tz":-330,"elapsed":24905,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["print(history.epoch)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p6V0m64p48i-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":215},"outputId":"45612fbe-7e11-41b9-b4d0-4a7a627e861b","executionInfo":{"status":"ok","timestamp":1560348957933,"user_tz":-330,"elapsed":24866,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["hist=pd.DataFrame(history.history)\n","hist['epoch']=history.epoch\n","hist.tail()"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>loss</th>\n","      <th>mean_absolute_error</th>\n","      <th>mean_squared_error</th>\n","      <th>val_loss</th>\n","      <th>val_mean_absolute_error</th>\n","      <th>val_mean_squared_error</th>\n","      <th>epoch</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>995</th>\n","      <td>2.163099</td>\n","      <td>0.980613</td>\n","      <td>2.163099</td>\n","      <td>11.104341</td>\n","      <td>2.106969</td>\n","      <td>11.104342</td>\n","      <td>995</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>2.332624</td>\n","      <td>0.998564</td>\n","      <td>2.332624</td>\n","      <td>11.194450</td>\n","      <td>2.114341</td>\n","      <td>11.194450</td>\n","      <td>996</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>2.247392</td>\n","      <td>0.965290</td>\n","      <td>2.247392</td>\n","      <td>10.989189</td>\n","      <td>2.084123</td>\n","      <td>10.989190</td>\n","      <td>997</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>2.179790</td>\n","      <td>0.959185</td>\n","      <td>2.179790</td>\n","      <td>11.305674</td>\n","      <td>2.118298</td>\n","      <td>11.305674</td>\n","      <td>998</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>2.084634</td>\n","      <td>0.973952</td>\n","      <td>2.084634</td>\n","      <td>11.163394</td>\n","      <td>2.141113</td>\n","      <td>11.163394</td>\n","      <td>999</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         loss  mean_absolute_error  ...  val_mean_squared_error  epoch\n","995  2.163099             0.980613  ...               11.104342    995\n","996  2.332624             0.998564  ...               11.194450    996\n","997  2.247392             0.965290  ...               10.989190    997\n","998  2.179790             0.959185  ...               11.305674    998\n","999  2.084634             0.973952  ...               11.163394    999\n","\n","[5 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"id":"SXdBFhvX6KlI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":550},"outputId":"70021a62-45fe-4257-b036-9b6630f13a5a","executionInfo":{"status":"ok","timestamp":1560348959404,"user_tz":-330,"elapsed":26293,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["def plot_history(history):\n","  hist=pd.DataFrame(history.history)\n","  hist['epoch']=history.epoch\n","  \n","  plt.figure()\n","  plt.xlabel('Epoch')\n","  plt.ylabel('Mean Abs Error in MPG')\n","  plt.plot(hist['epoch'],hist['mean_absolute_error'],\n","          label='Train Error')\n","  plt.plot(hist['epoch'],hist['val_mean_absolute_error'],\n","          label='Val Error')\n","  plt.ylim([0,5])\n","  plt.legend()\n","  \n","  plt.figure()\n","  plt.xlabel('Epoch')\n","  plt.ylabel('Mean Square Erro [$MPG^2$]')\n","  plt.plot(hist['epoch'],hist['mean_squared_error'],\n","           label='Train Error')\n","  plt.plot(hist['epoch'],hist['val_mean_squared_error'],\n","           label='Val Error')\n","  plt.ylim([0,20])\n","  plt.legend()\n","  plt.show()\n"," \n","plot_history(history)"],"execution_count":28,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"G4oCJ6Ti9wOZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":585},"outputId":"38c0b248-62cd-4448-e74d-894c02791caf","executionInfo":{"status":"ok","timestamp":1560348962293,"user_tz":-330,"elapsed":29143,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["model=build_model()\n","early_stop=keras.callbacks.EarlyStopping(monitor='val_loss',patience=10)\n","history=model.fit(norm_train_x,train_y,epochs=EPOCHS,\n","                 validation_split=0.2,verbose=0,\n","                 callbacks=[early_stop,PrintDot()])\n","plot_history(history)"],"execution_count":29,"outputs":[{"output_type":"stream","text":["\n","******************************************"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\nAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\nXn9FpVRMAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"q18W25wZ-Plu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":17654},"outputId":"8cbf1897-b0bc-4788-d86a-e9e80631b8ac","executionInfo":{"status":"ok","timestamp":1560348962300,"user_tz":-330,"elapsed":29115,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["tf.get_default_graph().get_operations()"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<tf.Operation 'dense_input' type=Placeholder>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/MatMul' type=MatMul>,\n"," <tf.Operation 'dense/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'dense/Relu' type=Relu>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_1/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_1/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_1/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_1/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_1/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_1/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_1/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_1/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_1/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_1/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_1/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'dense_1/Relu' type=Relu>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_2/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_2/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_2/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_2/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_2/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_2/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_2/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_2/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_2/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_2/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'RMSprop/lr/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/lr' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/lr/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/lr/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/lr/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop/rho/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/rho' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/rho/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/rho/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/rho/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop/decay/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/decay' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/decay/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/decay/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/decay/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop/iterations/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop/iterations' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop/iterations/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop/iterations/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop/iterations/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_2_target' type=Placeholder>,\n"," <tf.Operation 'Const' type=Const>,\n"," <tf.Operation 'dense_2_sample_weights' type=PlaceholderWithDefault>,\n"," <tf.Operation 'total/Initializer/zeros' type=Const>,\n"," <tf.Operation 'total' type=VarHandleOp>,\n"," <tf.Operation 'total/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'total/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'total/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'count/Initializer/zeros' type=Const>,\n"," <tf.Operation 'count' type=VarHandleOp>,\n"," <tf.Operation 'count/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'count/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'count/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'total_1/Initializer/zeros' type=Const>,\n"," <tf.Operation 'total_1' type=VarHandleOp>,\n"," <tf.Operation 'total_1/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'total_1/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'total_1/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'count_1/Initializer/zeros' type=Const>,\n"," <tf.Operation 'count_1' type=VarHandleOp>,\n"," <tf.Operation 'count_1/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'count_1/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'count_1/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/sub' type=Sub>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/Square' type=Square>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/Mean' type=Mean>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape' type=Shape>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/values/shape' type=Shape>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/values/rank' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_scalar/x' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_scalar' type=Equal>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank' type=Equal>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims' type=ExpandDims>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like' type=Fill>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat' type=ConcatV2>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1' type=ExpandDims>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation' type=DenseToDenseSetOperation>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims' type=Size>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims' type=Equal>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge' type=Merge>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge' type=Merge>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_1' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_2' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_3' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_4' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_5' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp' type=NoOp>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert' type=Assert>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3' type=Switch>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1' type=Identity>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge' type=Merge>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like/Shape' type=Shape>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like' type=Fill>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/broadcast_weights' type=Mul>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul' type=Mul>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Const' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum' type=Sum>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/num_elements' type=Size>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/num_elements/Cast' type=Cast>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Const_1' type=Const>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_1' type=Sum>,\n"," <tf.Operation 'loss/dense_2_loss/MeanSquaredError/weighted_loss/value' type=DivNoNan>,\n"," <tf.Operation 'loss/mul/x' type=Const>,\n"," <tf.Operation 'loss/mul' type=Mul>,\n"," <tf.Operation 'metrics/mean_absolute_error/sub' type=Sub>,\n"," <tf.Operation 'metrics/mean_absolute_error/Abs' type=Abs>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean' type=Mean>,\n"," <tf.Operation 'metrics/mean_absolute_error/Size' type=Size>,\n"," <tf.Operation 'metrics/mean_absolute_error/Cast' type=Cast>,\n"," <tf.Operation 'metrics/mean_absolute_error/Const' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Sum' type=Sum>,\n"," <tf.Operation 'metrics/mean_absolute_error/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/AssignAddVariableOp_1' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/div_no_nan/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/div_no_nan/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_absolute_error/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'metrics/mean_absolute_error/sub_1' type=Sub>,\n"," <tf.Operation 'metrics/mean_absolute_error/Abs_1' type=Abs>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean_1/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean_1' type=Mean>,\n"," <tf.Operation 'metrics/mean_absolute_error/Const_1' type=Const>,\n"," <tf.Operation 'metrics/mean_absolute_error/Mean_2' type=Mean>,\n"," <tf.Operation 'metrics/mean_squared_error/sub' type=Sub>,\n"," <tf.Operation 'metrics/mean_squared_error/Square' type=Square>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean' type=Mean>,\n"," <tf.Operation 'metrics/mean_squared_error/Size' type=Size>,\n"," <tf.Operation 'metrics/mean_squared_error/Cast' type=Cast>,\n"," <tf.Operation 'metrics/mean_squared_error/Const' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Sum' type=Sum>,\n"," <tf.Operation 'metrics/mean_squared_error/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/AssignAddVariableOp_1' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/div_no_nan/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/div_no_nan/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics/mean_squared_error/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'metrics/mean_squared_error/sub_1' type=Sub>,\n"," <tf.Operation 'metrics/mean_squared_error/Square_1' type=Square>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean_1/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean_1' type=Mean>,\n"," <tf.Operation 'metrics/mean_squared_error/Const_1' type=Const>,\n"," <tf.Operation 'metrics/mean_squared_error/Mean_2' type=Mean>,\n"," <tf.Operation 'predict/group_deps' type=NoOp>,\n"," <tf.Operation 'Placeholder' type=Placeholder>,\n"," <tf.Operation 'AssignVariableOp' type=AssignVariableOp>,\n"," <tf.Operation 'ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_1' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_2' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_3' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_4' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_5' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_6' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_7' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_8' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_9' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_10' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_11' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_12' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_13' type=VarIsInitializedOp>,\n"," <tf.Operation 'init' type=NoOp>,\n"," <tf.Operation 'Placeholder_1' type=Placeholder>,\n"," <tf.Operation 'AssignVariableOp_1' type=AssignVariableOp>,\n"," <tf.Operation 'ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'Placeholder_2' type=Placeholder>,\n"," <tf.Operation 'AssignVariableOp_2' type=AssignVariableOp>,\n"," <tf.Operation 'ReadVariableOp_2' type=ReadVariableOp>,\n"," <tf.Operation 'Placeholder_3' type=Placeholder>,\n"," <tf.Operation 'AssignVariableOp_3' type=AssignVariableOp>,\n"," <tf.Operation 'ReadVariableOp_3' type=ReadVariableOp>,\n"," <tf.Operation 'keras_learning_phase/input' type=Const>,\n"," <tf.Operation 'keras_learning_phase' type=PlaceholderWithDefault>,\n"," <tf.Operation 'training/RMSprop/gradients/Shape' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/grad_ys_0' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/Fill' type=Fill>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/mul_grad/Mul' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/mul_grad/Mul_1' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Shape' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Shape_1' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/BroadcastGradientArgs' type=BroadcastGradientArgs>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Sum' type=Sum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Neg' type=Neg>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/div_no_nan_1' type=DivNoNan>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/div_no_nan_2' type=DivNoNan>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/mul' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Sum_1' type=Sum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/value_grad/Reshape_1' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Reshape/shape' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Const' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Tile' type=Tile>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_grad/Reshape/shape' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_grad/Shape' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Sum_grad/Tile' type=Tile>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Shape' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Shape_1' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/BroadcastGradientArgs' type=BroadcastGradientArgs>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Mul' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Sum' type=Sum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Mul_1' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Sum_1' type=Sum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/weighted_loss/Mul_grad/Reshape_1' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Shape' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Size' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/add' type=Add>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/mod' type=FloorMod>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Shape_1' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/range/start' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/range/delta' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/range' type=Range>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Fill/value' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Fill' type=Fill>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/DynamicStitch' type=DynamicStitch>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Maximum/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Maximum' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/floordiv' type=FloorDiv>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Tile' type=Tile>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Shape_2' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Shape_3' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Const' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Prod' type=Prod>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Const_1' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Prod_1' type=Prod>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Maximum_1/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Maximum_1' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/floordiv_1' type=FloorDiv>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/Cast' type=Cast>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Mean_grad/truediv' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Square_grad/Const' type=Const>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Square_grad/Mul' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/Square_grad/Mul_1' type=Mul>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Shape' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Shape_1' type=Shape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/BroadcastGradientArgs' type=BroadcastGradientArgs>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Sum' type=Sum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Sum_1' type=Sum>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Neg' type=Neg>,\n"," <tf.Operation 'training/RMSprop/gradients/loss/dense_2_loss/MeanSquaredError/sub_grad/Reshape_1' type=Reshape>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_2/BiasAdd_grad/BiasAddGrad' type=BiasAddGrad>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_2/MatMul_grad/MatMul' type=MatMul>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_2/MatMul_grad/MatMul_1' type=MatMul>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_1/Relu_grad/ReluGrad' type=ReluGrad>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_1/BiasAdd_grad/BiasAddGrad' type=BiasAddGrad>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_1/MatMul_grad/MatMul' type=MatMul>,\n"," <tf.Operation 'training/RMSprop/gradients/dense_1/MatMul_grad/MatMul_1' type=MatMul>,\n"," <tf.Operation 'training/RMSprop/gradients/dense/Relu_grad/ReluGrad' type=ReluGrad>,\n"," <tf.Operation 'training/RMSprop/gradients/dense/BiasAdd_grad/BiasAddGrad' type=BiasAddGrad>,\n"," <tf.Operation 'training/RMSprop/gradients/dense/MatMul_grad/MatMul' type=MatMul>,\n"," <tf.Operation 'training/RMSprop/gradients/dense/MatMul_grad/MatMul_1' type=MatMul>,\n"," <tf.Operation 'training/RMSprop/zeros' type=Const>,\n"," <tf.Operation 'training/RMSprop/Variable' type=VarHandleOp>,\n"," <tf.Operation 'training/RMSprop/Variable/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training/RMSprop/Variable/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/Variable/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/zeros_1' type=Const>,\n"," <tf.Operation 'training/RMSprop/Variable_1' type=VarHandleOp>,\n"," <tf.Operation 'training/RMSprop/Variable_1/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training/RMSprop/Variable_1/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/Variable_1/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/zeros_2/shape_as_tensor' type=Const>,\n"," <tf.Operation 'training/RMSprop/zeros_2/Const' type=Const>,\n"," <tf.Operation 'training/RMSprop/zeros_2' type=Fill>,\n"," <tf.Operation 'training/RMSprop/Variable_2' type=VarHandleOp>,\n"," <tf.Operation 'training/RMSprop/Variable_2/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training/RMSprop/Variable_2/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/Variable_2/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/zeros_3' type=Const>,\n"," <tf.Operation 'training/RMSprop/Variable_3' type=VarHandleOp>,\n"," <tf.Operation 'training/RMSprop/Variable_3/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training/RMSprop/Variable_3/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/Variable_3/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/zeros_4' type=Const>,\n"," <tf.Operation 'training/RMSprop/Variable_4' type=VarHandleOp>,\n"," <tf.Operation 'training/RMSprop/Variable_4/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training/RMSprop/Variable_4/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/Variable_4/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/zeros_5' type=Const>,\n"," <tf.Operation 'training/RMSprop/Variable_5' type=VarHandleOp>,\n"," <tf.Operation 'training/RMSprop/Variable_5/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training/RMSprop/Variable_5/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/Variable_5/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/Const' type=Const>,\n"," <tf.Operation 'training/RMSprop/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul' type=Mul>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_2' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub/x' type=Const>,\n"," <tf.Operation 'training/RMSprop/sub' type=Sub>,\n"," <tf.Operation 'training/RMSprop/Square' type=Square>,\n"," <tf.Operation 'training/RMSprop/mul_1' type=Mul>,\n"," <tf.Operation 'training/RMSprop/add' type=Add>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_3' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_4' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_2' type=Mul>,\n"," <tf.Operation 'training/RMSprop/Const_1' type=Const>,\n"," <tf.Operation 'training/RMSprop/Const_2' type=Const>,\n"," <tf.Operation 'training/RMSprop/clip_by_value/Minimum' type=Minimum>,\n"," <tf.Operation 'training/RMSprop/clip_by_value' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/Sqrt' type=Sqrt>,\n"," <tf.Operation 'training/RMSprop/add_1/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/add_1' type=Add>,\n"," <tf.Operation 'training/RMSprop/truediv' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_5' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_1' type=Sub>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_1' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_6' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_7' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_3/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_3' type=Mul>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_8' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_2/x' type=Const>,\n"," <tf.Operation 'training/RMSprop/sub_2' type=Sub>,\n"," <tf.Operation 'training/RMSprop/Square_1' type=Square>,\n"," <tf.Operation 'training/RMSprop/mul_4' type=Mul>,\n"," <tf.Operation 'training/RMSprop/add_2' type=Add>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_2' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_9' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_10' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_5' type=Mul>,\n"," <tf.Operation 'training/RMSprop/Const_3' type=Const>,\n"," <tf.Operation 'training/RMSprop/Const_4' type=Const>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_1/Minimum' type=Minimum>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_1' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/Sqrt_1' type=Sqrt>,\n"," <tf.Operation 'training/RMSprop/add_3/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/add_3' type=Add>,\n"," <tf.Operation 'training/RMSprop/truediv_1' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_11' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_3' type=Sub>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_3' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_12' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_13' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_6/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_6' type=Mul>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_14' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_4/x' type=Const>,\n"," <tf.Operation 'training/RMSprop/sub_4' type=Sub>,\n"," <tf.Operation 'training/RMSprop/Square_2' type=Square>,\n"," <tf.Operation 'training/RMSprop/mul_7' type=Mul>,\n"," <tf.Operation 'training/RMSprop/add_4' type=Add>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_4' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_15' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_16' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_8' type=Mul>,\n"," <tf.Operation 'training/RMSprop/Const_5' type=Const>,\n"," <tf.Operation 'training/RMSprop/Const_6' type=Const>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_2/Minimum' type=Minimum>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_2' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/Sqrt_2' type=Sqrt>,\n"," <tf.Operation 'training/RMSprop/add_5/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/add_5' type=Add>,\n"," <tf.Operation 'training/RMSprop/truediv_2' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_17' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_5' type=Sub>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_5' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_18' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_19' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_9/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_9' type=Mul>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_20' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_6/x' type=Const>,\n"," <tf.Operation 'training/RMSprop/sub_6' type=Sub>,\n"," <tf.Operation 'training/RMSprop/Square_3' type=Square>,\n"," <tf.Operation 'training/RMSprop/mul_10' type=Mul>,\n"," <tf.Operation 'training/RMSprop/add_6' type=Add>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_6' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_21' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_22' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_11' type=Mul>,\n"," <tf.Operation 'training/RMSprop/Const_7' type=Const>,\n"," <tf.Operation 'training/RMSprop/Const_8' type=Const>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_3/Minimum' type=Minimum>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_3' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/Sqrt_3' type=Sqrt>,\n"," <tf.Operation 'training/RMSprop/add_7/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/add_7' type=Add>,\n"," <tf.Operation 'training/RMSprop/truediv_3' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_23' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_7' type=Sub>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_7' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_24' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_25' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_12/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_12' type=Mul>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_26' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_8/x' type=Const>,\n"," <tf.Operation 'training/RMSprop/sub_8' type=Sub>,\n"," <tf.Operation 'training/RMSprop/Square_4' type=Square>,\n"," <tf.Operation 'training/RMSprop/mul_13' type=Mul>,\n"," <tf.Operation 'training/RMSprop/add_8' type=Add>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_8' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_27' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_28' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_14' type=Mul>,\n"," <tf.Operation 'training/RMSprop/Const_9' type=Const>,\n"," <tf.Operation 'training/RMSprop/Const_10' type=Const>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_4/Minimum' type=Minimum>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_4' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/Sqrt_4' type=Sqrt>,\n"," <tf.Operation 'training/RMSprop/add_9/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/add_9' type=Add>,\n"," <tf.Operation 'training/RMSprop/truediv_4' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_29' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_9' type=Sub>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_9' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_30' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_31' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_15/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_15' type=Mul>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_32' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_10/x' type=Const>,\n"," <tf.Operation 'training/RMSprop/sub_10' type=Sub>,\n"," <tf.Operation 'training/RMSprop/Square_5' type=Square>,\n"," <tf.Operation 'training/RMSprop/mul_16' type=Mul>,\n"," <tf.Operation 'training/RMSprop/add_10' type=Add>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_10' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_33' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_34' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/mul_17' type=Mul>,\n"," <tf.Operation 'training/RMSprop/Const_11' type=Const>,\n"," <tf.Operation 'training/RMSprop/Const_12' type=Const>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_5/Minimum' type=Minimum>,\n"," <tf.Operation 'training/RMSprop/clip_by_value_5' type=Maximum>,\n"," <tf.Operation 'training/RMSprop/Sqrt_5' type=Sqrt>,\n"," <tf.Operation 'training/RMSprop/add_11/y' type=Const>,\n"," <tf.Operation 'training/RMSprop/add_11' type=Add>,\n"," <tf.Operation 'training/RMSprop/truediv_5' type=RealDiv>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_35' type=ReadVariableOp>,\n"," <tf.Operation 'training/RMSprop/sub_11' type=Sub>,\n"," <tf.Operation 'training/RMSprop/AssignVariableOp_11' type=AssignVariableOp>,\n"," <tf.Operation 'training/RMSprop/ReadVariableOp_36' type=ReadVariableOp>,\n"," <tf.Operation 'training_1/group_deps' type=NoOp>,\n"," <tf.Operation 'evaluation/group_deps' type=NoOp>,\n"," <tf.Operation 'VarIsInitializedOp_14' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_15' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_16' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_17' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_18' type=VarIsInitializedOp>,\n"," <tf.Operation 'VarIsInitializedOp_19' type=VarIsInitializedOp>,\n"," <tf.Operation 'init_1' type=NoOp>,\n"," <tf.Operation 'dense_3_input' type=Placeholder>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_3/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_3/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_3/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_3/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_3/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_3/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_3/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_3/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_3/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_3/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_3/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_3/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_3/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_3/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'dense_3/Relu' type=Relu>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_4/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_4/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_4/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_4/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_4/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_4/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_4/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_4/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_4/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_4/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_4/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_4/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_4/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_4/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'dense_4/Relu' type=Relu>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform/shape' type=Const>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform/min' type=Const>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform/max' type=Const>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform/RandomUniform' type=RandomUniform>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform/sub' type=Sub>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform/mul' type=Mul>,\n"," <tf.Operation 'dense_5/kernel/Initializer/random_uniform' type=Add>,\n"," <tf.Operation 'dense_5/kernel' type=VarHandleOp>,\n"," <tf.Operation 'dense_5/kernel/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_5/kernel/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_5/kernel/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_5/bias/Initializer/zeros' type=Const>,\n"," <tf.Operation 'dense_5/bias' type=VarHandleOp>,\n"," <tf.Operation 'dense_5/bias/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'dense_5/bias/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'dense_5/bias/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_5/MatMul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_5/MatMul' type=MatMul>,\n"," <tf.Operation 'dense_5/BiasAdd/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_5/BiasAdd' type=BiasAdd>,\n"," <tf.Operation 'RMSprop_1/lr/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop_1/lr' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop_1/lr/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop_1/lr/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop_1/lr/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop_1/rho/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop_1/rho' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop_1/rho/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop_1/rho/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop_1/rho/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop_1/decay/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop_1/decay' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop_1/decay/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop_1/decay/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop_1/decay/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'RMSprop_1/iterations/Initializer/initial_value' type=Const>,\n"," <tf.Operation 'RMSprop_1/iterations' type=VarHandleOp>,\n"," <tf.Operation 'RMSprop_1/iterations/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'RMSprop_1/iterations/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'RMSprop_1/iterations/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'dense_5_target' type=Placeholder>,\n"," <tf.Operation 'Const_1' type=Const>,\n"," <tf.Operation 'dense_5_sample_weights' type=PlaceholderWithDefault>,\n"," <tf.Operation 'total_2/Initializer/zeros' type=Const>,\n"," <tf.Operation 'total_2' type=VarHandleOp>,\n"," <tf.Operation 'total_2/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'total_2/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'total_2/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'count_2/Initializer/zeros' type=Const>,\n"," <tf.Operation 'count_2' type=VarHandleOp>,\n"," <tf.Operation 'count_2/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'count_2/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'count_2/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'total_3/Initializer/zeros' type=Const>,\n"," <tf.Operation 'total_3' type=VarHandleOp>,\n"," <tf.Operation 'total_3/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'total_3/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'total_3/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'count_3/Initializer/zeros' type=Const>,\n"," <tf.Operation 'count_3' type=VarHandleOp>,\n"," <tf.Operation 'count_3/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'count_3/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'count_3/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/sub' type=Sub>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/Square' type=Square>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/Mean' type=Mean>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape' type=Shape>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/values/shape' type=Shape>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/values/rank' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_scalar/x' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_scalar' type=Equal>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_t' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/switch_f' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/pred_id' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Switch_1' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank' type=Equal>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/is_same_rank/Switch_1' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_t' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/switch_f' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/pred_id' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/dim' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims' type=ExpandDims>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims/Switch_1' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Shape' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like/Const' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ones_like' type=Fill>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat/axis' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/concat' type=ConcatV2>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/dim' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1' type=ExpandDims>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/ExpandDims_1/Switch_1' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/DenseToDenseSetOperation' type=DenseToDenseSetOperation>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/num_invalid_dims' type=Size>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims/x' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/has_invalid_dims' type=Equal>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Switch_1' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/has_valid_nonscalar_shape/Merge' type=Merge>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/is_valid_shape/Merge' type=Merge>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_1' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_2' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_3' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_4' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/Const_5' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_t' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/switch_f' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/pred_id' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/NoOp' type=NoOp>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_0' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_1' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_2' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_4' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_5' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/data_7' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert' type=Assert>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_1' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_2' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Assert/Switch_3' type=Switch>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/control_dependency_1' type=Identity>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/assert_broadcastable/AssertGuard/Merge' type=Merge>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like/Shape' type=Shape>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like/Const' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights/ones_like' type=Fill>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/broadcast_weights' type=Mul>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul' type=Mul>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Const' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum' type=Sum>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/num_elements' type=Size>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/num_elements/Cast' type=Cast>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Const_1' type=Const>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_1' type=Sum>,\n"," <tf.Operation 'loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value' type=DivNoNan>,\n"," <tf.Operation 'loss_1/mul/x' type=Const>,\n"," <tf.Operation 'loss_1/mul' type=Mul>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/sub' type=Sub>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Abs' type=Abs>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Mean' type=Mean>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Size' type=Size>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Cast' type=Cast>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Const' type=Const>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Sum' type=Sum>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/AssignAddVariableOp_1' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/div_no_nan/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/div_no_nan/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/sub_1' type=Sub>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Abs_1' type=Abs>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Mean_1/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Mean_1' type=Mean>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Const_1' type=Const>,\n"," <tf.Operation 'metrics_1/mean_absolute_error/Mean_2' type=Mean>,\n"," <tf.Operation 'metrics_1/mean_squared_error/sub' type=Sub>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Square' type=Square>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Mean/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Mean' type=Mean>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Size' type=Size>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Cast' type=Cast>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Const' type=Const>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Sum' type=Sum>,\n"," <tf.Operation 'metrics_1/mean_squared_error/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics_1/mean_squared_error/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_squared_error/AssignAddVariableOp_1' type=AssignAddVariableOp>,\n"," <tf.Operation 'metrics_1/mean_squared_error/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_squared_error/div_no_nan/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_squared_error/div_no_nan/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'metrics_1/mean_squared_error/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'metrics_1/mean_squared_error/sub_1' type=Sub>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Square_1' type=Square>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Mean_1/reduction_indices' type=Const>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Mean_1' type=Mean>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Const_1' type=Const>,\n"," <tf.Operation 'metrics_1/mean_squared_error/Mean_2' type=Mean>,\n"," <tf.Operation 'training_2/RMSprop/gradients/Shape' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/grad_ys_0' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/Fill' type=Fill>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/mul_grad/Mul' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/mul_grad/Mul_1' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Shape' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Shape_1' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/BroadcastGradientArgs' type=BroadcastGradientArgs>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/div_no_nan' type=DivNoNan>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Sum' type=Sum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Neg' type=Neg>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/div_no_nan_1' type=DivNoNan>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/div_no_nan_2' type=DivNoNan>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/mul' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Sum_1' type=Sum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/value_grad/Reshape_1' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Reshape/shape' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Const' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_1_grad/Tile' type=Tile>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_grad/Reshape/shape' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_grad/Shape' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Sum_grad/Tile' type=Tile>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Shape' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Shape_1' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/BroadcastGradientArgs' type=BroadcastGradientArgs>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Mul' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Sum' type=Sum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Mul_1' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Sum_1' type=Sum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/weighted_loss/Mul_grad/Reshape_1' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Shape' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Size' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/add' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/mod' type=FloorMod>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Shape_1' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/range/start' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/range/delta' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/range' type=Range>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Fill/value' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Fill' type=Fill>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/DynamicStitch' type=DynamicStitch>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Maximum/y' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Maximum' type=Maximum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/floordiv' type=FloorDiv>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Tile' type=Tile>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Shape_2' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Shape_3' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Const' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Prod' type=Prod>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Const_1' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Prod_1' type=Prod>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Maximum_1/y' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Maximum_1' type=Maximum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/floordiv_1' type=FloorDiv>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/Cast' type=Cast>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Mean_grad/truediv' type=RealDiv>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Square_grad/Const' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Square_grad/Mul' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/Square_grad/Mul_1' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Shape' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Shape_1' type=Shape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/BroadcastGradientArgs' type=BroadcastGradientArgs>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Sum' type=Sum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Reshape' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Sum_1' type=Sum>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Neg' type=Neg>,\n"," <tf.Operation 'training_2/RMSprop/gradients/loss_1/dense_5_loss/MeanSquaredError/sub_grad/Reshape_1' type=Reshape>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_5/BiasAdd_grad/BiasAddGrad' type=BiasAddGrad>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_5/MatMul_grad/MatMul' type=MatMul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_5/MatMul_grad/MatMul_1' type=MatMul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_4/Relu_grad/ReluGrad' type=ReluGrad>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_4/BiasAdd_grad/BiasAddGrad' type=BiasAddGrad>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_4/MatMul_grad/MatMul' type=MatMul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_4/MatMul_grad/MatMul_1' type=MatMul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_3/Relu_grad/ReluGrad' type=ReluGrad>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_3/BiasAdd_grad/BiasAddGrad' type=BiasAddGrad>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_3/MatMul_grad/MatMul' type=MatMul>,\n"," <tf.Operation 'training_2/RMSprop/gradients/dense_3/MatMul_grad/MatMul_1' type=MatMul>,\n"," <tf.Operation 'training_2/RMSprop/zeros' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Variable' type=VarHandleOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/zeros_1' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Variable_1' type=VarHandleOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_1/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_1/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_1/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/zeros_2/shape_as_tensor' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/zeros_2/Const' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/zeros_2' type=Fill>,\n"," <tf.Operation 'training_2/RMSprop/Variable_2' type=VarHandleOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_2/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_2/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_2/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/zeros_3' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Variable_3' type=VarHandleOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_3/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_3/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_3/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/zeros_4' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Variable_4' type=VarHandleOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_4/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_4/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_4/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/zeros_5' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Variable_5' type=VarHandleOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_5/IsInitialized/VarIsInitializedOp' type=VarIsInitializedOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_5/Assign' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Variable_5/Read/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/Const' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/AssignAddVariableOp' type=AssignAddVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_1' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_2' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub/x' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/sub' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/Square' type=Square>,\n"," <tf.Operation 'training_2/RMSprop/mul_1' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/add' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_3' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_4' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_2' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/Const_1' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Const_2' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value/Minimum' type=Minimum>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value' type=Maximum>,\n"," <tf.Operation 'training_2/RMSprop/Sqrt' type=Sqrt>,\n"," <tf.Operation 'training_2/RMSprop/add_1/y' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/add_1' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/truediv' type=RealDiv>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_5' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_1' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_1' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_6' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_7' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_3/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_3' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_8' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_2/x' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/sub_2' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/Square_1' type=Square>,\n"," <tf.Operation 'training_2/RMSprop/mul_4' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/add_2' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_2' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_9' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_10' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_5' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/Const_3' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Const_4' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_1/Minimum' type=Minimum>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_1' type=Maximum>,\n"," <tf.Operation 'training_2/RMSprop/Sqrt_1' type=Sqrt>,\n"," <tf.Operation 'training_2/RMSprop/add_3/y' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/add_3' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/truediv_1' type=RealDiv>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_11' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_3' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_3' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_12' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_13' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_6/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_6' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_14' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_4/x' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/sub_4' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/Square_2' type=Square>,\n"," <tf.Operation 'training_2/RMSprop/mul_7' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/add_4' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_4' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_15' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_16' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_8' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/Const_5' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Const_6' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_2/Minimum' type=Minimum>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_2' type=Maximum>,\n"," <tf.Operation 'training_2/RMSprop/Sqrt_2' type=Sqrt>,\n"," <tf.Operation 'training_2/RMSprop/add_5/y' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/add_5' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/truediv_2' type=RealDiv>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_17' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_5' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_5' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_18' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_19' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_9/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_9' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_20' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_6/x' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/sub_6' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/Square_3' type=Square>,\n"," <tf.Operation 'training_2/RMSprop/mul_10' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/add_6' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_6' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_21' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_22' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_11' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/Const_7' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Const_8' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_3/Minimum' type=Minimum>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_3' type=Maximum>,\n"," <tf.Operation 'training_2/RMSprop/Sqrt_3' type=Sqrt>,\n"," <tf.Operation 'training_2/RMSprop/add_7/y' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/add_7' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/truediv_3' type=RealDiv>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_23' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_7' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_7' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_24' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_25' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_12/ReadVariableOp' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_12' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_26' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/sub_8/x' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/sub_8' type=Sub>,\n"," <tf.Operation 'training_2/RMSprop/Square_4' type=Square>,\n"," <tf.Operation 'training_2/RMSprop/mul_13' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/add_8' type=Add>,\n"," <tf.Operation 'training_2/RMSprop/AssignVariableOp_8' type=AssignVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_27' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/ReadVariableOp_28' type=ReadVariableOp>,\n"," <tf.Operation 'training_2/RMSprop/mul_14' type=Mul>,\n"," <tf.Operation 'training_2/RMSprop/Const_9' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/Const_10' type=Const>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_4/Minimum' type=Minimum>,\n"," <tf.Operation 'training_2/RMSprop/clip_by_value_4' type=Maximum>,\n"," ...]"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"Nmy7d96k-Txm","colab_type":"code","colab":{}},"source":["loss,mae,mse=model.evaluate(norm_test_x,test_y,verbose=0)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"psMy7vhCEF8b","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"bf2359a8-eef3-4ade-fb5a-b1847321a482","executionInfo":{"status":"ok","timestamp":1560349300910,"user_tz":-330,"elapsed":1425,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["mae"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2.129167"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"Mcj8w1rAEIv7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"f621c154-fdf8-4c27-8c9b-5b51a3f19da9","executionInfo":{"status":"ok","timestamp":1560349317799,"user_tz":-330,"elapsed":1161,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["loss"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8.127180172846867"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"markdown","metadata":{"id":"h7dTanE_E-5E","colab_type":"text"},"source":["##Predictions"]},{"cell_type":"code","metadata":{"id":"4yKOwPv5ERO4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"outputId":"a3d6ef0a-48af-495d-e219-4e7d4296403b","executionInfo":{"status":"ok","timestamp":1560349719225,"user_tz":-330,"elapsed":1176,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["test_preds=model.predict(norm_test_x).flatten()\n","\n","plt.scatter(test_y,test_preds)\n","plt.xlabel('True Values [MPG]')\n","plt.ylabel('Predictions [MPG]')\n","plt.axis('equal')\n","plt.axis('square')\n","plt.xlim([0,plt.xlim()[1]])\n","plt.ylim([0,plt.ylim()[1]])\n","_=plt.plot([-100,100],[-100,100])"],"execution_count":38,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"EUvIvOQeFwrK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"outputId":"80d72c63-f1cc-4393-c828-42f821b29394","executionInfo":{"status":"ok","timestamp":1560350135844,"user_tz":-330,"elapsed":1262,"user":{"displayName":"1-800-273-8255","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAANyU/zyRRfCU-_ys/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["plt.hist(test_y-test_preds,bins=25)\n","plt.xlabel('Prediction Error [MPG]')\n","_=plt.ylabel('Count')"],"execution_count":46,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nnEEgSY37f4NR746kldqzAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"JG3irHdVGtKK","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}