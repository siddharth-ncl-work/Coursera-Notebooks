{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"coursera_lhc_week3","version":"0.3.2","provenance":[{"file_id":"https://github.com/hse-aml/hadron-collider-machine-learning/blob/master/week3/index.ipynb","timestamp":1557697183060}],"collapsed_sections":[],"toc_visible":true},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"V1bzffMu_I3h","colab_type":"code","outputId":"4bfcdd64-0d7d-4cd1-91d5-407b5b296dbc","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1557698360972,"user_tz":-330,"elapsed":936,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["%pylab inline"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Populating the interactive namespace from numpy and matplotlib\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BEdnBkvd_6CY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":258},"outputId":"051b8a10-cc15-45c2-8b5b-57d14f6cd7c8","executionInfo":{"status":"ok","timestamp":1557697381109,"user_tz":-330,"elapsed":6195,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["!pip install hep_ml"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Collecting hep_ml\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/27/67/6b2c5931ca515ce68cd4c8ac6b75febf2b13827e4d92fa33e351e1d3a04a/hep_ml-0.6.0-py2.py3-none-any.whl (50kB)\n","\u001b[K     |████████████████████████████████| 51kB 3.5MB/s \n","\u001b[?25hRequirement already satisfied: pandas>=0.14.0 in /usr/local/lib/python3.6/dist-packages (from hep_ml) (0.24.2)\n","Requirement already satisfied: scikit-learn>=0.19 in /usr/local/lib/python3.6/dist-packages (from hep_ml) (0.20.3)\n","Requirement already satisfied: numpy>=1.9 in /usr/local/lib/python3.6/dist-packages (from hep_ml) (1.16.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from hep_ml) (1.12.0)\n","Requirement already satisfied: theano>=1.0.2 in /usr/local/lib/python3.6/dist-packages (from hep_ml) (1.0.4)\n","Requirement already satisfied: scipy>=0.15.0 in /usr/local/lib/python3.6/dist-packages (from hep_ml) (1.2.1)\n","Requirement already satisfied: pytz>=2011k in /usr/local/lib/python3.6/dist-packages (from pandas>=0.14.0->hep_ml) (2018.9)\n","Requirement already satisfied: python-dateutil>=2.5.0 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.14.0->hep_ml) (2.5.3)\n","Installing collected packages: hep-ml\n","Successfully installed hep-ml-0.6.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"vyf9Nz-g_I3r","colab_type":"code","colab":{}},"source":["import pandas\n","from sklearn.model_selection import train_test_split\n","\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","\n","from sklearn.metrics import roc_curve, roc_auc_score\n","\n","from hep_ml import metrics"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wb9dXNdV_I3u","colab_type":"text"},"source":["# Load dataset and split into training / test\n","\n","`training.csv` is a mixture of simulated signal, real background.\n","It has the following columns.\n","\n","`test.csv` has the following columns:\n","\n"]},{"cell_type":"code","metadata":{"id":"hBbX5nW1_I3v","colab_type":"code","colab":{}},"source":["train_ada = pandas.read_csv('https://github.com/hse-aml/hadron-collider-machine-learning/releases/download/Week_3/training.csv.gz', sep=',')\n","test_ada = pandas.read_csv('https://github.com/hse-aml/hadron-collider-machine-learning/releases/download/Week_3/test.csv.gz', sep=',', index_col='id')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7HqHczx1Af3T","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"outputId":"6b70d0bd-3ed1-4c9b-9dac-81c519c578b9","executionInfo":{"status":"ok","timestamp":1557698408093,"user_tz":-330,"elapsed":1486,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["print (\"Training full sample columns:\", \", \".join(train_ada.columns), \"\\nShape:\", train_ada.shape)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["Training full sample columns: id, LifeTime, dira, FlightDistance, FlightDistanceError, IP, IPSig, VertexChi2, pt, DOCAone, DOCAtwo, DOCAthree, IP_p0p2, IP_p1p2, isolationa, isolationb, isolationc, isolationd, isolatione, isolationf, iso, CDF1, CDF2, CDF3, ISO_SumBDT, p0_IsoBDT, p1_IsoBDT, p2_IsoBDT, p0_track_Chi2Dof, p1_track_Chi2Dof, p2_track_Chi2Dof, p0_IP, p1_IP, p2_IP, p0_IPSig, p1_IPSig, p2_IPSig, p0_pt, p1_pt, p2_pt, p0_p, p1_p, p2_p, p0_eta, p1_eta, p2_eta, SPDhits, production, signal, mass, min_ANNmuon \n","Shape: (67553, 51)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Gsux16We_I3x","colab_type":"code","outputId":"5a7fcb2f-b800-4c44-982d-7c33ddfe08db","colab":{}},"source":["#print (\"Training full sample columns:\", \", \".join(train_ada.columns), \"\\nShape:\", train_ada.shape)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Training full sample columns: id, LifeTime, dira, FlightDistance, FlightDistanceError, IP, IPSig, VertexChi2, pt, DOCAone, DOCAtwo, DOCAthree, IP_p0p2, IP_p1p2, isolationa, isolationb, isolationc, isolationd, isolatione, isolationf, iso, CDF1, CDF2, CDF3, ISO_SumBDT, p0_IsoBDT, p1_IsoBDT, p2_IsoBDT, p0_track_Chi2Dof, p1_track_Chi2Dof, p2_track_Chi2Dof, p0_IP, p1_IP, p2_IP, p0_IPSig, p1_IPSig, p2_IPSig, p0_pt, p1_pt, p2_pt, p0_p, p1_p, p2_p, p0_eta, p1_eta, p2_eta, SPDhits, production, signal, mass, min_ANNmuon \n","Shape: (67553, 51)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"cpTjjj5TAzUK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":318},"outputId":"f140ae10-041f-4cbc-9a0a-f69948e44c44","executionInfo":{"status":"ok","timestamp":1557698413351,"user_tz":-330,"elapsed":979,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["print (\"Test full sample columns:\", \", \".join(test_ada.columns), \"\\nShape:\", test_ada.shape)\n","test_ada.head()"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Test full sample columns: LifeTime, dira, FlightDistance, FlightDistanceError, IP, IPSig, VertexChi2, pt, DOCAone, DOCAtwo, DOCAthree, IP_p0p2, IP_p1p2, isolationa, isolationb, isolationc, isolationd, isolatione, isolationf, iso, CDF1, CDF2, CDF3, ISO_SumBDT, p0_IsoBDT, p1_IsoBDT, p2_IsoBDT, p0_track_Chi2Dof, p1_track_Chi2Dof, p2_track_Chi2Dof, p0_IP, p1_IP, p2_IP, p0_IPSig, p1_IPSig, p2_IPSig, p0_pt, p1_pt, p2_pt, p0_p, p1_p, p2_p, p0_eta, p1_eta, p2_eta, SPDhits \n","Shape: (855819, 46)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>LifeTime</th>\n","      <th>dira</th>\n","      <th>FlightDistance</th>\n","      <th>FlightDistanceError</th>\n","      <th>IP</th>\n","      <th>IPSig</th>\n","      <th>VertexChi2</th>\n","      <th>pt</th>\n","      <th>DOCAone</th>\n","      <th>DOCAtwo</th>\n","      <th>...</th>\n","      <th>p0_pt</th>\n","      <th>p1_pt</th>\n","      <th>p2_pt</th>\n","      <th>p0_p</th>\n","      <th>p1_p</th>\n","      <th>p2_p</th>\n","      <th>p0_eta</th>\n","      <th>p1_eta</th>\n","      <th>p2_eta</th>\n","      <th>SPDhits</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14711831</th>\n","      <td>0.001273</td>\n","      <td>0.999816</td>\n","      <td>8.569642</td>\n","      <td>0.310039</td>\n","      <td>0.197893</td>\n","      <td>5.183939</td>\n","      <td>2.286117</td>\n","      <td>687.479248</td>\n","      <td>0.022301</td>\n","      <td>0.050763</td>\n","      <td>...</td>\n","      <td>508.926514</td>\n","      <td>306.629456</td>\n","      <td>714.222717</td>\n","      <td>30300.734375</td>\n","      <td>5662.158691</td>\n","      <td>7406.368164</td>\n","      <td>4.779700</td>\n","      <td>3.608334</td>\n","      <td>3.029715</td>\n","      <td>705</td>\n","    </tr>\n","    <tr>\n","      <th>16316387</th>\n","      <td>0.000661</td>\n","      <td>0.999954</td>\n","      <td>7.061379</td>\n","      <td>0.348772</td>\n","      <td>0.067430</td>\n","      <td>6.316281</td>\n","      <td>3.865824</td>\n","      <td>5691.845703</td>\n","      <td>0.002455</td>\n","      <td>0.037633</td>\n","      <td>...</td>\n","      <td>943.130676</td>\n","      <td>3287.291260</td>\n","      <td>1563.593994</td>\n","      <td>6160.323730</td>\n","      <td>43781.566406</td>\n","      <td>19728.500000</td>\n","      <td>2.563915</td>\n","      <td>3.280884</td>\n","      <td>3.226650</td>\n","      <td>907</td>\n","    </tr>\n","    <tr>\n","      <th>6771382</th>\n","      <td>0.000889</td>\n","      <td>0.999999</td>\n","      <td>6.502967</td>\n","      <td>0.273914</td>\n","      <td>0.011020</td>\n","      <td>0.865816</td>\n","      <td>1.004631</td>\n","      <td>5429.225586</td>\n","      <td>0.002753</td>\n","      <td>0.036379</td>\n","      <td>...</td>\n","      <td>2886.055908</td>\n","      <td>2216.936279</td>\n","      <td>598.068359</td>\n","      <td>26387.134766</td>\n","      <td>15534.978516</td>\n","      <td>6504.145020</td>\n","      <td>2.903129</td>\n","      <td>2.634985</td>\n","      <td>3.077517</td>\n","      <td>213</td>\n","    </tr>\n","    <tr>\n","      <th>686045</th>\n","      <td>0.001295</td>\n","      <td>0.999301</td>\n","      <td>7.838184</td>\n","      <td>0.325697</td>\n","      <td>0.388636</td>\n","      <td>11.391245</td>\n","      <td>10.345356</td>\n","      <td>661.717834</td>\n","      <td>0.008163</td>\n","      <td>0.436003</td>\n","      <td>...</td>\n","      <td>461.727753</td>\n","      <td>357.967560</td>\n","      <td>1118.084229</td>\n","      <td>5451.857422</td>\n","      <td>10281.403320</td>\n","      <td>23722.742188</td>\n","      <td>3.160085</td>\n","      <td>4.050494</td>\n","      <td>3.747409</td>\n","      <td>275</td>\n","    </tr>\n","    <tr>\n","      <th>8755882</th>\n","      <td>0.001714</td>\n","      <td>0.999805</td>\n","      <td>7.064559</td>\n","      <td>0.113440</td>\n","      <td>0.154421</td>\n","      <td>13.925871</td>\n","      <td>12.951378</td>\n","      <td>3885.417969</td>\n","      <td>0.066317</td>\n","      <td>0.052183</td>\n","      <td>...</td>\n","      <td>1773.747925</td>\n","      <td>1643.278198</td>\n","      <td>711.572205</td>\n","      <td>7724.954590</td>\n","      <td>12830.546875</td>\n","      <td>6008.145996</td>\n","      <td>2.151059</td>\n","      <td>2.744157</td>\n","      <td>2.823017</td>\n","      <td>357</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 46 columns</p>\n","</div>"],"text/plain":["          LifeTime      dira  FlightDistance  FlightDistanceError        IP  \\\n","id                                                                            \n","14711831  0.001273  0.999816        8.569642             0.310039  0.197893   \n","16316387  0.000661  0.999954        7.061379             0.348772  0.067430   \n","6771382   0.000889  0.999999        6.502967             0.273914  0.011020   \n","686045    0.001295  0.999301        7.838184             0.325697  0.388636   \n","8755882   0.001714  0.999805        7.064559             0.113440  0.154421   \n","\n","              IPSig  VertexChi2           pt   DOCAone   DOCAtwo  ...  \\\n","id                                                                ...   \n","14711831   5.183939    2.286117   687.479248  0.022301  0.050763  ...   \n","16316387   6.316281    3.865824  5691.845703  0.002455  0.037633  ...   \n","6771382    0.865816    1.004631  5429.225586  0.002753  0.036379  ...   \n","686045    11.391245   10.345356   661.717834  0.008163  0.436003  ...   \n","8755882   13.925871   12.951378  3885.417969  0.066317  0.052183  ...   \n","\n","                p0_pt        p1_pt        p2_pt          p0_p          p1_p  \\\n","id                                                                            \n","14711831   508.926514   306.629456   714.222717  30300.734375   5662.158691   \n","16316387   943.130676  3287.291260  1563.593994   6160.323730  43781.566406   \n","6771382   2886.055908  2216.936279   598.068359  26387.134766  15534.978516   \n","686045     461.727753   357.967560  1118.084229   5451.857422  10281.403320   \n","8755882   1773.747925  1643.278198   711.572205   7724.954590  12830.546875   \n","\n","                  p2_p    p0_eta    p1_eta    p2_eta  SPDhits  \n","id                                                             \n","14711831   7406.368164  4.779700  3.608334  3.029715      705  \n","16316387  19728.500000  2.563915  3.280884  3.226650      907  \n","6771382    6504.145020  2.903129  2.634985  3.077517      213  \n","686045    23722.742188  3.160085  4.050494  3.747409      275  \n","8755882    6008.145996  2.151059  2.744157  2.823017      357  \n","\n","[5 rows x 46 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"gH6RyokL_I32","colab_type":"code","outputId":"9a9dd912-c841-4f9e-ad34-93a59fd20ccf","colab":{}},"source":["#print (\"Test full sample columns:\", \", \".join(test_ada.columns), \"\\nShape:\", test_ada.shape)\n","#test_ada.head()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Test full sample columns: LifeTime, dira, FlightDistance, FlightDistanceError, IP, IPSig, VertexChi2, pt, DOCAone, DOCAtwo, DOCAthree, IP_p0p2, IP_p1p2, isolationa, isolationb, isolationc, isolationd, isolatione, isolationf, iso, CDF1, CDF2, CDF3, ISO_SumBDT, p0_IsoBDT, p1_IsoBDT, p2_IsoBDT, p0_track_Chi2Dof, p1_track_Chi2Dof, p2_track_Chi2Dof, p0_IP, p1_IP, p2_IP, p0_IPSig, p1_IPSig, p2_IPSig, p0_pt, p1_pt, p2_pt, p0_p, p1_p, p2_p, p0_eta, p1_eta, p2_eta, SPDhits \n","Shape: (855819, 46)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style>\n","    .dataframe thead tr:only-child th {\n","        text-align: right;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: left;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>LifeTime</th>\n","      <th>dira</th>\n","      <th>FlightDistance</th>\n","      <th>FlightDistanceError</th>\n","      <th>IP</th>\n","      <th>IPSig</th>\n","      <th>VertexChi2</th>\n","      <th>pt</th>\n","      <th>DOCAone</th>\n","      <th>DOCAtwo</th>\n","      <th>...</th>\n","      <th>p0_pt</th>\n","      <th>p1_pt</th>\n","      <th>p2_pt</th>\n","      <th>p0_p</th>\n","      <th>p1_p</th>\n","      <th>p2_p</th>\n","      <th>p0_eta</th>\n","      <th>p1_eta</th>\n","      <th>p2_eta</th>\n","      <th>SPDhits</th>\n","    </tr>\n","    <tr>\n","      <th>id</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14711831</th>\n","      <td>0.001273</td>\n","      <td>0.999816</td>\n","      <td>8.569642</td>\n","      <td>0.310039</td>\n","      <td>0.197893</td>\n","      <td>5.183939</td>\n","      <td>2.286117</td>\n","      <td>687.479248</td>\n","      <td>0.022301</td>\n","      <td>0.050763</td>\n","      <td>...</td>\n","      <td>508.926514</td>\n","      <td>306.629456</td>\n","      <td>714.222717</td>\n","      <td>30300.734375</td>\n","      <td>5662.158691</td>\n","      <td>7406.368164</td>\n","      <td>4.779700</td>\n","      <td>3.608334</td>\n","      <td>3.029715</td>\n","      <td>705</td>\n","    </tr>\n","    <tr>\n","      <th>16316387</th>\n","      <td>0.000661</td>\n","      <td>0.999954</td>\n","      <td>7.061379</td>\n","      <td>0.348772</td>\n","      <td>0.067430</td>\n","      <td>6.316281</td>\n","      <td>3.865824</td>\n","      <td>5691.845703</td>\n","      <td>0.002455</td>\n","      <td>0.037633</td>\n","      <td>...</td>\n","      <td>943.130676</td>\n","      <td>3287.291260</td>\n","      <td>1563.593994</td>\n","      <td>6160.323730</td>\n","      <td>43781.566406</td>\n","      <td>19728.500000</td>\n","      <td>2.563915</td>\n","      <td>3.280884</td>\n","      <td>3.226650</td>\n","      <td>907</td>\n","    </tr>\n","    <tr>\n","      <th>6771382</th>\n","      <td>0.000889</td>\n","      <td>0.999999</td>\n","      <td>6.502967</td>\n","      <td>0.273914</td>\n","      <td>0.011020</td>\n","      <td>0.865816</td>\n","      <td>1.004631</td>\n","      <td>5429.225586</td>\n","      <td>0.002753</td>\n","      <td>0.036379</td>\n","      <td>...</td>\n","      <td>2886.055908</td>\n","      <td>2216.936279</td>\n","      <td>598.068359</td>\n","      <td>26387.134766</td>\n","      <td>15534.978516</td>\n","      <td>6504.145020</td>\n","      <td>2.903129</td>\n","      <td>2.634985</td>\n","      <td>3.077517</td>\n","      <td>213</td>\n","    </tr>\n","    <tr>\n","      <th>686045</th>\n","      <td>0.001295</td>\n","      <td>0.999301</td>\n","      <td>7.838184</td>\n","      <td>0.325697</td>\n","      <td>0.388636</td>\n","      <td>11.391245</td>\n","      <td>10.345356</td>\n","      <td>661.717834</td>\n","      <td>0.008163</td>\n","      <td>0.436003</td>\n","      <td>...</td>\n","      <td>461.727753</td>\n","      <td>357.967560</td>\n","      <td>1118.084229</td>\n","      <td>5451.857422</td>\n","      <td>10281.403320</td>\n","      <td>23722.742188</td>\n","      <td>3.160085</td>\n","      <td>4.050494</td>\n","      <td>3.747409</td>\n","      <td>275</td>\n","    </tr>\n","    <tr>\n","      <th>8755882</th>\n","      <td>0.001714</td>\n","      <td>0.999805</td>\n","      <td>7.064559</td>\n","      <td>0.113440</td>\n","      <td>0.154421</td>\n","      <td>13.925871</td>\n","      <td>12.951378</td>\n","      <td>3885.417969</td>\n","      <td>0.066317</td>\n","      <td>0.052183</td>\n","      <td>...</td>\n","      <td>1773.747925</td>\n","      <td>1643.278198</td>\n","      <td>711.572205</td>\n","      <td>7724.954590</td>\n","      <td>12830.546875</td>\n","      <td>6008.145996</td>\n","      <td>2.151059</td>\n","      <td>2.744157</td>\n","      <td>2.823017</td>\n","      <td>357</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 46 columns</p>\n","</div>"],"text/plain":["          LifeTime      dira  FlightDistance  FlightDistanceError        IP  \\\n","id                                                                            \n","14711831  0.001273  0.999816        8.569642             0.310039  0.197893   \n","16316387  0.000661  0.999954        7.061379             0.348772  0.067430   \n","6771382   0.000889  0.999999        6.502967             0.273914  0.011020   \n","686045    0.001295  0.999301        7.838184             0.325697  0.388636   \n","8755882   0.001714  0.999805        7.064559             0.113440  0.154421   \n","\n","              IPSig  VertexChi2           pt   DOCAone   DOCAtwo   ...     \\\n","id                                                                 ...      \n","14711831   5.183939    2.286117   687.479248  0.022301  0.050763   ...      \n","16316387   6.316281    3.865824  5691.845703  0.002455  0.037633   ...      \n","6771382    0.865816    1.004631  5429.225586  0.002753  0.036379   ...      \n","686045    11.391245   10.345356   661.717834  0.008163  0.436003   ...      \n","8755882   13.925871   12.951378  3885.417969  0.066317  0.052183   ...      \n","\n","                p0_pt        p1_pt        p2_pt          p0_p          p1_p  \\\n","id                                                                            \n","14711831   508.926514   306.629456   714.222717  30300.734375   5662.158691   \n","16316387   943.130676  3287.291260  1563.593994   6160.323730  43781.566406   \n","6771382   2886.055908  2216.936279   598.068359  26387.134766  15534.978516   \n","686045     461.727753   357.967560  1118.084229   5451.857422  10281.403320   \n","8755882   1773.747925  1643.278198   711.572205   7724.954590  12830.546875   \n","\n","                  p2_p    p0_eta    p1_eta    p2_eta  SPDhits  \n","id                                                             \n","14711831   7406.368164  4.779700  3.608334  3.029715      705  \n","16316387  19728.500000  2.563915  3.280884  3.226650      907  \n","6771382    6504.145020  2.903129  2.634985  3.077517      213  \n","686045    23722.742188  3.160085  4.050494  3.747409      275  \n","8755882    6008.145996  2.151059  2.744157  2.823017      357  \n","\n","[5 rows x 46 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"f-vQqjSU_I35","colab_type":"text"},"source":["# Train simple model using part of the training sample"]},{"cell_type":"code","metadata":{"id":"1aLXsDXF_I36","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"outputId":"aba7ac7b-3e46-4875-b515-17883df65c41","executionInfo":{"status":"ok","timestamp":1557698423758,"user_tz":-330,"elapsed":1426,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["train, test = train_test_split(train_ada, train_size=0.7, random_state=13)"],"execution_count":7,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:2179: FutureWarning: From version 0.21, test_size will always complement train_size unless both are specified.\n","  FutureWarning)\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"5jzhKpwH_I38","colab_type":"text"},"source":["Let's chose features to train a model"]},{"cell_type":"code","metadata":{"id":"TcAEhe3D_I39","colab_type":"code","outputId":"26fa12fb-3c0d-446d-9b43-09ba6828202c","colab":{"base_uri":"https://localhost:8080/","height":54},"executionInfo":{"status":"ok","timestamp":1557698427266,"user_tz":-330,"elapsed":1003,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["variables = list(set(train_ada.columns) - {'id', 'signal', 'mass', 'production', 'min_ANNmuon'})\n","print (variables)"],"execution_count":8,"outputs":[{"output_type":"stream","text":["['FlightDistance', 'p0_IP', 'isolationb', 'ISO_SumBDT', 'FlightDistanceError', 'p0_IsoBDT', 'p1_p', 'p2_track_Chi2Dof', 'LifeTime', 'pt', 'isolationa', 'p1_IsoBDT', 'IPSig', 'p1_IPSig', 'CDF1', 'p1_pt', 'p2_eta', 'p0_p', 'p1_eta', 'p0_eta', 'IP_p1p2', 'p2_IsoBDT', 'isolatione', 'SPDhits', 'CDF2', 'IP_p0p2', 'p2_p', 'p1_IP', 'DOCAthree', 'p0_IPSig', 'CDF3', 'DOCAone', 'dira', 'DOCAtwo', 'p2_IPSig', 'p2_pt', 'p2_IP', 'IP', 'p1_track_Chi2Dof', 'p0_track_Chi2Dof', 'p0_pt', 'iso', 'VertexChi2', 'isolationf', 'isolationd', 'isolationc']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"Kg4E2SBzBI6_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"9ffe04a2-19ea-4ddc-e3e2-71913317ded4","executionInfo":{"status":"ok","timestamp":1557703503412,"user_tz":-330,"elapsed":30624,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["%%time\n","clf = AdaBoostClassifier(n_estimators=100, learning_rate=0.01, random_state=13,\n","                             base_estimator=DecisionTreeClassifier(max_depth=10, min_samples_leaf=30, max_features=6,\n","                                                                    random_state=13))\n","clf.fit(train[variables], train['signal'])"],"execution_count":191,"outputs":[{"output_type":"stream","text":["CPU times: user 29.6 s, sys: 26 ms, total: 29.6 s\n","Wall time: 29.6 s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_w6u468a_I4C","colab_type":"code","colab":{}},"source":["#%%time\n","#clf = AdaBoostClassifier(n_estimators=100, learning_rate=0.01, random_state=13,\n","#                             base_estimator=DecisionTreeClassifier(max_depth=6, min_samples_leaf=30, max_features=6,\n","#                                                                    random_state=13))\n","#clf.fit(train[variables], train['signal'])"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"HZ2DP4Jv_I4M","colab_type":"text"},"source":["# Check model quality on a half of the training sample\n"]},{"cell_type":"code","metadata":{"id":"pSW5Q3p5_I4N","colab_type":"code","colab":{}},"source":["def plot_metrics(y_true, y_pred):\n","    fpr, tpr, thresholds = roc_curve(y_true, y_pred)\n","    roc_auc = roc_auc_score(y_true, y_pred)\n","\n","    plt.plot(fpr, tpr, label='ROC AUC=%f' % roc_auc)\n","    plt.xlabel(\"FPR\")\n","    plt.ylabel(\"TPR\")\n","    plt.legend()\n","    plt.title(\"ROC Curve\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4BQyy2tVBSA-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":312},"outputId":"2da03872-7c26-410f-f1fc-7f9e94f79633","executionInfo":{"status":"ok","timestamp":1557703513945,"user_tz":-330,"elapsed":1688,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["y_pred = clf.predict_proba(test[variables])[:, 1]\n","\n","plot_metrics(test['signal'], y_pred)\n","test.shape, y_pred.shape"],"execution_count":192,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((20266, 51), (20266,))"]},"metadata":{"tags":[]},"execution_count":192},{"output_type":"display_data","data":{"image/png":"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\nXHzxxZx66qkHzfvMZz7DY489dtC8vLwP7j3auHEj5513HlOnTmXevHl86lOfYvfu3T3arlWrVjF7\n9mymTJnC9ddf3+m+orq6mksuuYQTTjiB+fPns2bNGiB6WG/+/PmceOKJlJSUcNtttx1U86RJk5gz\nZw5z5sxh9erV3a4L4Ec/+hElJSXMmjWLxYsXxw8HdbWuXuXu/errpJNO8qOxubLOJ3zzf/yB5WVH\n9X6RvmDdunVBl+C5ubnx11dffbV/97vfdXf3hoYGnzx5sj/33HPu7l5fX++LFi3yu+66y93d3377\nbZ88ebKvX7/e3d3b2tr8Zz/7WaefUV1d7cXFxT59+nR/77334vOvueYaf/TRRzutp7Gx0adMmeJL\nly6NL3vhhRf87bff7tF2nXzyyb58+XKPRCK+aNEif/rppw9p841vfMNvv/12d3dfv369n3HGGe7u\nHolEvLa21t3dW1pafP78+b58+fIua+5uXeXl5T5x4kRvaGhwd/fLLrvMf/Ob33S7ro46+zkBVnoP\n9rEpc/XR7ppo0hYPHRRwJSK949tPrmXd+zW9us6ZYwq47YKSHrdfsGABb731FgAPPvggH/7whzn7\n7LMByMnJ4a677mLhwoV8+ctf5vvf/z633HIL06dPB6I9ji9+8Yudrvfxxx/nggsuYOTIkTz00EPc\nfPPNh63lwQcfZMGCBVxwwQXxeQsXLuzRduzcuZOampp4z+Tqq6/miSee4Nxzzz2o3bp167jpppsA\nmD59OmVlZezevZuRI0fGeyytra20trYe9th+V+sCaGtro7GxkYyMDBoaGhgzZkyPtqM3pMzho5bY\npaj5GjZbpFeEw2GWLVvGhRdeCEQPHZ100kkHtTnuuOOoq6ujpqaGNWvWHLK8K0uWLGHx4sUsXryY\nJUuW9Og93a1/w4YN8UMuHb/27dvHjh07KC4ujrcvLi5mx44dh6znxBNP5PHHHwfg1VdfZevWrZSX\nlwPR78ecOXMYMWIEZ511Fqecckr8fbfccgsnnHACX/va12hubu52XWPHjuUb3/gG48ePZ/To0Qwe\nPDgetF2tqzelzB7y/dgDdnTlhgwUR/IXfW9qbGxkzpw57NixgxkzZnDWWWf16vp3797Nu+++y2mn\nnYaZkZGRwZo1a5g1a1anv789+Z0+/vjje+X4+0033cRXv/pV5syZw+zZs5k7dy7p6elAtOezevVq\n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\nAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Xv6vvSpY_I4S","colab_type":"code","outputId":"523f97bf-45bf-445f-fcc1-1cb7e8bb4270","colab":{}},"source":["#y_pred = clf.predict_proba(test[variables])[:, 1]\n","\n","#plot_metrics(test['signal'], y_pred)\n","#test.shape, y_pred.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((20266, 51), (20266,))"]},"metadata":{"tags":[]},"execution_count":10},{"output_type":"display_data","data":{"image/png":"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\nXrZOSRUR6UjChEJN5PBRemrCdFkkJpKTk1mwYAFz587lnHPOobKyMvreunXrOOWUU5g+fTrTpk3j\n1ltvjV4jBPDiiy9SWFjIrFmzmDlzJtdff32H61m6dCmLFi3ab95ll13Gk08+ud+8rKys6OuPPvqI\ns846i6lTpzJr1iwuvPBCdu/e3a1+rVq1innz5jF16lSuvfba/epuUVFRwXnnnccRRxzBMcccw9q1\nawHYtm0bJ598MrNmzWLOnDn8/Oc/j37moosuYsGCBSxYsICCggIWLFgAwNtvvx2dP3/+fJ5++uno\nZ77yla8wcuRI5s6du9/69+7dy2mnnca0adM47bTTqKio6FbfDoq796ufo446yg/Fw29t9Ynffd53\nVNYd0udF+oL169fHuwTPzMyMvr700kv9xz/+sbu719XV+eTJk/2ll15yd/d9+/b5kiVL/O6773Z3\n9w8++MAnT57sGzZscHf3QCDg99xzT7vrqKio8Pz8fJ85c6Zv3rw5On/ZsmX+xBNPtFtPfX29T506\n1ZcvXx5975VXXvEPPvigW/06+uijfcWKFR4KhXzJkiX+wgsvHNDm+uuv95tvvtnd3Tds2OCnnHKK\nu7vv2LHDV61a5e7u1dXVPm3aNF+3bt0Bn7/uuuv8Rz/6kbuHfz+BQCD6+by8vOj0X/7yF1+1apXP\nmTNnv8/fcMMNftttt7m7+2233ebf+c532u1Le38nwErvxjY2Yc4+ahlTSNbxWBkgfvTcOtbvqO7R\nZc4em8MPz5nT7faLFi1izZo1ADz88MMcf/zxnH766QAMHjyYu+++m8WLF3P11Vdz++238/3vf5+Z\nM2cCkJKSwje+8Y12l/vUU09xzjnnMGrUKB599FFuuummLmt5+OGHWbRoEeecc0503sknn9ytfuzc\nuZPq6uronsmll17KM888w5lnnrlfu/Xr10drmTlzJsXFxezevZsxY8YwZswYALKzs5k1axbbt29n\n9uzZ0c+6O48//jivvPJK9PfToqGhYb+xgBNPPJHi4uID6nz22Wd59dVXAVi2bBmLFy/mJz/5Sbf6\n2F0JcyzFI7uCGqQT6RnBYJCXX36Zc889FwgfOjrqqKP2azNlyhRqa2uprq5m7dq1B7zfkUceeYRL\nLrmESy65hEceeaRbn+ls+Rs3boweqmn7U1lZyfbt28nPz4+2z8/PZ/v27QcsZ/78+fzud78Dwod/\ntm7dSklJyX5tiouLee+99zj22GP3m//aa68xatQopk2bFp331ltvMWfOHObNm8d9991HSkrn39Nb\nAghgzJhB471mAAAKJ0lEQVQx7Nmzp9P2hyLx9hR08ZoMEAfzjb4n1dfXs2DBAoqLiznqqKM47bTT\ngPAXr46+dB3Ml7Hdu3dTVFTECSecgJmRkpLC2rVrmTt3brvL6c6yZ8yYwerVqzt8v+VLY1fLvfHG\nG/nWt77FggULmDdvHgsXLtxvQ15bW8sXvvAFfvazn5GTk7PfZ1uCrrVjjz2WdevWsWHDBpYtW8aZ\nZ55Jenp6l/2JpZjuKZjZEjPbaGZFZnZjO+8PMrPHIu+/ZWYFsaql5YxUHT4SOTwZGRmsXr2arVu3\n0tTUxD333APAnDlzWLly5X5tN2/eTFZWFtnZ2cyZM4dVq1Z1ufzHHnuMiooKJk2aREFBAcXFxTz6\n6KMAjBgxYr/B1b1795Kbmxtdf0fL72pPIT8/f79v/CUlJYwdO/aA5eTk5PDggw+yevVqHnroIUpL\nS6MXiQUCAb7whS/wxS9+kfPPP3+/zzU3N/O73/2Oiy66qN36Zs2aRWZmZnTguiOjRo1i586dQPiQ\n18iRIzttf0i6M/BwKD9AMrAJmAykAe8Ds9u0+QZwX+T1xcBjXS33UAea/+uvm3zid5/3qvqmQ/q8\nSF/Q1waa3333XR8/frw3NTV5XV2dT5o0yf/4xz+6e3jg+eyzz/a77rrL3d3ff/99nzJlim/cuNHd\n3YPBoN9xxx0HLP+4447zFStWRKc3b97sU6ZMcXf35557zk899VRvbGx0d/c77rjDL7/88uj6pkyZ\n4s8//3z0sy+++KKvWbOmW/0qLCz0N954IzrQ/Pvf//6ANhUVFdF133///f7lL3/Z3d1DoZB/+ctf\n9m9961vtLvvFF1/0E088cb95mzdvjg4sFxcX+5gxY7y0tDT6/pYtWw4YaL7++uv3G2i+4YYb2l3f\n4Qw0xzIUFgEvtZq+CbipTZuXgEWR1ylAGWCdLfdQQ+G+V4t84nef99qGwCF9XqQv6Guh4O7+uc99\nzh966CF3d1+zZo2fdNJJPn36dJ8yZYrffPPNHgqFom2fe+45P/LII33mzJk+a9Ysv/766/db1pYt\nW3zs2LH7fcbdfeHChf7mm2+6u/vNN9/sc+fO9fnz5/v555/ve/bsibbbsGGDn3HGGT516lSfNWuW\nX3TRRb5r165u9eudd97xOXPm+OTJk/3qq6+O1nDvvff6vffe6+7uK1as8KlTp/qMGTP8vPPO8717\n97q7+2uvveaAz5s3z+fPn+/z58/fL1SWLVsWXUaLhx56yGfPnu3z58/3hQsX+tNPPx197+KLL/bR\no0d7SkqKjxs3zh944AF3dy8rK/NTTjnFp06d6qeccoqXl5e325fDCQXzdo6l9QQzuwBY4u5XRqa/\nDBzr7te0arM20qYkMr0p0qaszbKuAq4CmDBhwlFbt2496Hr+sG4Xz6zezp0XLWBQSvKhdkskrjZs\n2MCsWbPiXYb0ce39nZjZKncv7OqzsRxobu/gfdsE6k4b3P1+4H6AwsLCQ0qx0+eM5vQ5ow/loyIi\nCSOWA80lwPhW0/nAjo7amFkKMATYG8OaRESkE7EMhXeAaWY2yczSCA8kL2/TZjmwLPL6AuAVj9Xx\nLJEBQv+LSGcO9+8jZqHg7s3ANYQHkzcAj7v7OjO7xczOjTT7b2CEmRUB1wEHnLYqIp9KT0+nvLxc\nwSDtcg8/T+FwrnWI2UBzrBQWFnrbc6FFEoWevCZd6ejJa31hoFlEelhqauohP1FLpDsS5t5HIiLS\nNYWCiIhEKRRERCSq3w00m1kpcPCXNIflEr6VRiJRnxOD+pwYDqfPE909r6tG/S4UDoeZrezO6PtA\noj4nBvU5MfRGn3X4SEREohQKIiISlWihcH+8C4gD9TkxqM+JIeZ9TqgxBRER6Vyi7SmIiEgnFAoi\nIhI1IEPBzJaY2UYzKzKzA+68amaDzOyxyPtvmVlB71fZs7rR5+vMbL2ZrTGzl81sYjzq7Eld9blV\nuwvMzM2s35++2J0+m9mFkX/rdWb2cG/X2NO68bc9wcz+bGbvRf6+z4pHnT3FzH5pZnsiT6Zs730z\ns7siv481ZnZkjxbQnWd29qcfIBnYBEwG0oD3gdlt2nwDuC/y+mLgsXjX3Qt9PhkYHHn99UToc6Rd\nNvBX4E2gMN5198K/8zTgPWBYZHpkvOvuhT7fD3w98no2UBzvug+zzycCRwJrO3j/LOBFwk+uPA54\nqyfXPxD3FI4Bitx9s7s3AY8CS9u0WQr8OvL6SeBUM2vv0aD9RZd9dvc/u3tdZPJNwk/C68+68+8M\ncCtwOzAQ7jXdnT5/FbjH3SsA3H1PL9fY07rTZwdyIq+HcOATHvsVd/8rnT+BcinwkIe9CQw1szE9\ntf6BGArjgG2tpksi89pt4+GHAVUBI3qlutjoTp9bu4LwN43+rMs+m9lCYLy7P9+bhcVQd/6dpwPT\nzex1M3vTzJb0WnWx0Z0+3wx8ycxKgBeAb/ZOaXFzsP+/H5SB+DyF9r7xtz3vtjtt+pNu98fMvgQU\nAifFtKLY67TPZpYE3Alc1lsF9YLu/DunED6EtJjw3uBrZjbX3StjXFusdKfPlwC/cvc7zGwR8JtI\nn0OxLy8uYrr9Goh7CiXA+FbT+Ry4OxltY2YphHc5O9td6+u602fM7LPA94Fz3b2xl2qLla76nA3M\nBV41s2LCx16X9/PB5u7+bT/r7gF33wJsJBwS/VV3+nwF8DiAu78BpBO+cdxA1a3/3w/VQAyFd4Bp\nZjbJzNIIDyQvb9NmObAs8voC4BWPjOD0U132OXIo5T8JB0J/P84MXfTZ3avcPdfdC9y9gPA4yrnu\n3p+f5dqdv+1nCJ9UgJnlEj6ctLlXq+xZ3enzJ8CpAGY2i3AolPZqlb1rOXBp5Cyk44Aqd9/ZUwsf\ncIeP3L3ZzK4BXiJ85sIv3X2dmd0CrHT35cB/E97FLCK8h3Bx/Co+fN3s80+BLOCJyJj6J+5+btyK\nPkzd7POA0s0+vwScbmbrgSBwg7uXx6/qw9PNPn8b+C8z+z+ED6Nc1p+/5JnZI4QP/+VGxkl+CKQC\nuPt9hMdNzgKKgDrg8h5dfz/+3YmISA8biIePRETkECkUREQkSqEgIiJRCgUREYlSKIiISJRCQaSb\nzCxoZqtb/RSY2WIzq4rcoXODmf0w0rb1/A/N7N/iXb9Idwy46xREYqje3Re0nhG57fpr7v45M8sE\nVptZy72WWuZnAO+Z2dPu/nrvlixycLSnINJD3H0fsAqY0mZ+PbCaHrxpmUisKBREui+j1aGjp9u+\naWYjCN9jaV2b+cMI33/or71Tpsih0+Ejke474PBRxN+Z2XtACPjXyG0YFkfmrwFmRObv6sVaRQ6J\nQkHk8L3m7p/raL6ZTQf+FhlTWN3bxYkcDB0+Eokxd/8IuA34brxrEemKQkGkd9wHnGhmk+JdiEhn\ndJdUERGJ0p6CiIhEKRRERCRKoSAiIlEKBRERiVIoiIhIlEJBRESiFAoiIhL1/wHKWPXD+vJxQwAA\nAABJRU5ErkJggg==\n","text/plain":["<matplotlib.figure.Figure at 0x125cdc780>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"OH2VhOIv_I4W","colab_type":"text"},"source":["ROC AUC is just a part of the solution, you also have to make sure that\n","\n","- the classifier output is not correlated with the mass\n","- classifier performs similarily on MC and real data of the normalization channel\n"]},{"cell_type":"markdown","metadata":{"id":"YiVXqgwH_I4X","colab_type":"text"},"source":["### Mass correlation check"]},{"cell_type":"code","metadata":{"id":"-FsqGwRd_I4Y","colab_type":"code","colab":{}},"source":["df_corr_check = pandas.read_csv(\"https://github.com/hse-aml/hadron-collider-machine-learning/releases/download/Week_3/check_correlation.csv.gz\")#(\"reference/check_correlation.csv\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"x_g3fjgnBmgR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"1a03ee4a-d76f-4c65-8761-8ed4f2657d69","executionInfo":{"status":"ok","timestamp":1557698452186,"user_tz":-330,"elapsed":7954,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["df_corr_check.shape"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5514, 48)"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"iAjZBtCA_I4a","colab_type":"code","outputId":"b01bf08b-c1dc-401d-dbb1-2cde26c9d3e6","colab":{}},"source":["#df_corr_check.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5514, 48)"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"NonXjDKb_I4d","colab_type":"code","colab":{}},"source":["y_pred = clf.predict(df_corr_check[variables])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"WgAqQJ2U_I4g","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xha2zd8Q_I4k","colab_type":"code","colab":{}},"source":[" def efficiencies(features, thresholds=None, mask=None, bins=30, labels_dict=None, ignored_sideband=0.0,\n","                     errors=False, grid_columns=2):\n","        \"\"\"\n","        Efficiencies for spectators\n","        :param features: using features (if None then use classifier's spectators)\n","        :type features: None or list[str]\n","        :param bins: bins for histogram\n","        :type bins: int or array-like\n","        :param mask: mask for data, which will be used\n","        :type mask: None or numbers.Number or array-like or str or function(pandas.DataFrame)\n","        :param list[float] thresholds: thresholds on prediction\n","        :param bool errors: if True then use errorbar, else interpolate function\n","        :param labels_dict: label -- name for class label\n","            if None then {0: 'bck', '1': 'signal'}\n","        :type labels_dict: None or OrderedDict(int: str)\n","        :param int grid_columns: count of columns in grid\n","        :param float ignored_sideband: (0, 1) percent of plotting data\n","        :rtype: plotting.GridPlot\n","        \"\"\"\n","        mask, data, class_labels, weight = self._apply_mask(\n","            mask, self._get_features(features), self.target, self.weight)\n","        labels_dict = self._check_labels(labels_dict, class_labels)\n","\n","        plots = []\n","        for feature in data.columns:\n","            for name, prediction in self.prediction.items():\n","                prediction = prediction[mask]\n","                eff = OrderedDict()\n","                for label, label_name in labels_dict.items():\n","                    label_mask = class_labels == label\n","                    eff[label_name] = utils.get_efficiencies(prediction[label_mask, label],\n","                                                             data[feature][label_mask].values,\n","                                                             bins_number=bins,\n","                                                             sample_weight=weight[label_mask],\n","                                                             thresholds=thresholds, errors=errors,\n","                                                             ignored_sideband=ignored_sideband)\n","\n","                for label_name, eff_data in eff.items():\n","                    if errors:\n","                        plot_fig = plotting.ErrorPlot(eff_data)\n","                    else:\n","                        plot_fig = plotting.FunctionsPlot(eff_data)\n","                    plot_fig.xlabel = feature\n","                    plot_fig.ylabel = 'Efficiency for {}'.format(name)\n","                    plot_fig.title = '{} flatness'.format(label_name)\n","                    plot_fig.ylim = (0, 1)\n","                    plots.append(plot_fig)\n","\n","        return plotting.GridPlot(grid_columns, *plots)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"jQ2sQbIB_I4p","colab_type":"code","colab":{}},"source":["def check_arrays(*arrays):\n","    \"\"\"\n","    Left for consistency, version of `sklearn.validation.check_arrays`\n","    :param list[iterable] arrays: arrays with same length of first dimension.\n","    \"\"\"\n","    assert len(arrays) > 0, 'The number of array must be greater than zero'\n","    checked_arrays = []\n","    shapes = []\n","    for arr in arrays:\n","        if arr is not None:\n","            checked_arrays.append(numpy.array(arr))\n","            shapes.append(checked_arrays[-1].shape[0])\n","        else:\n","            checked_arrays.append(None)\n","    assert numpy.sum(numpy.array(shapes) == shapes[0]) == len(shapes), 'Different shapes of the arrays {}'.format(\n","        shapes)\n","    return checked_arrays"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tuujPAEn_I4s","colab_type":"code","colab":{}},"source":["def get_efficiencies(prediction, spectator, sample_weight=None, bins_number=20,\n","                     thresholds=None, errors=False, ignored_sideband=0.0):\n","    \"\"\"\n","    Construct efficiency function dependent on spectator for each threshold\n","    Different score functions available: Efficiency, Precision, Recall, F1Score,\n","    and other things from sklearn.metrics\n","    :param prediction: list of probabilities\n","    :param spectator: list of spectator's values\n","    :param bins_number: int, count of bins for plot\n","    :param thresholds: list of prediction's threshold\n","        (default=prediction's cuts for which efficiency will be [0.2, 0.4, 0.5, 0.6, 0.8])\n","    :return:\n","        if errors=False\n","        OrderedDict threshold -> (x_values, y_values)\n","        if errors=True\n","        OrderedDict threshold -> (x_values, y_values, y_err, x_err)\n","        All the parts: x_values, y_values, y_err, x_err are numpy.arrays of the same length.\n","    \"\"\"\n","    prediction, spectator, sample_weight = \\\n","        check_arrays(prediction, spectator, sample_weight)\n","\n","    spectator_min, spectator_max = weighted_quantile(spectator, [ignored_sideband, (1. - ignored_sideband)])\n","    mask = (spectator >= spectator_min) & (spectator <= spectator_max)\n","    spectator = spectator[mask]\n","    prediction = prediction[mask]\n","    bins_number = min(bins_number, len(prediction))\n","    sample_weight = sample_weight if sample_weight is None else numpy.array(sample_weight)[mask]\n","\n","    if thresholds is None:\n","        thresholds = [weighted_quantile(prediction, quantiles=1 - eff, sample_weight=sample_weight)\n","                      for eff in [0.2, 0.4, 0.5, 0.6, 0.8]]\n","\n","    binner = Binner(spectator, bins_number=bins_number)\n","    if sample_weight is None:\n","        sample_weight = numpy.ones(len(prediction))\n","    bins_data = binner.split_into_bins(spectator, prediction, sample_weight)\n","\n","    bin_edges = numpy.array([spectator_min] + list(binner.limits) + [spectator_max])\n","    xerr = numpy.diff(bin_edges) / 2.\n","    result = OrderedDict()\n","    for threshold in thresholds:\n","        x_values = []\n","        y_values = []\n","        N_in_bin = []\n","        for num, (masses, probabilities, weights) in enumerate(bins_data):\n","            y_values.append(numpy.average(probabilities > threshold, weights=weights))\n","            N_in_bin.append(numpy.sum(weights))\n","            if errors:\n","                x_values.append((bin_edges[num + 1] + bin_edges[num]) / 2.)\n","            else:\n","                x_values.append(numpy.mean(masses))\n","\n","        x_values, y_values, N_in_bin = check_arrays(x_values, y_values, N_in_bin)\n","        if errors:\n","            result[threshold] = (x_values, y_values, numpy.sqrt(y_values * (1 - y_values) / N_in_bin), xerr)\n","        else:\n","            result[threshold] = (x_values, y_values)\n","    return result"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qsuWODPZ_I4x","colab_type":"code","colab":{}},"source":["def weighted_quantile(array, quantiles, sample_weight=None, array_sorted=False, old_style=False):\n","    \"\"\"Computing quantiles of array. Unlike the numpy.percentile, this function supports weights,\n","    but it is inefficient and performs complete sorting.\n","    :param array: distribution, array of shape [n_samples]\n","    :param quantiles: floats from range [0, 1] with quantiles of shape [n_quantiles]\n","    :param sample_weight: optional weights of samples, array of shape [n_samples]\n","    :param array_sorted: if True, the sorting step will be skipped\n","    :param old_style: if True, will correct output to be consistent with numpy.percentile.\n","    :return: array of shape [n_quantiles]\n","    Example:\n","    >>> weighted_quantile([1, 2, 3, 4, 5], [0.5])\n","    Out: array([ 3.])\n","    >>> weighted_quantile([1, 2, 3, 4, 5], [0.5], sample_weight=[3, 1, 1, 1, 1])\n","    Out: array([ 2.])\n","    \"\"\"\n","    array = numpy.array(array)\n","    quantiles = numpy.array(quantiles)\n","    sample_weight = check_sample_weight(array, sample_weight)\n","    assert numpy.all(quantiles >= 0) and numpy.all(quantiles <= 1), 'Percentiles should be in [0, 1]'\n","\n","    if not array_sorted:\n","        array, sample_weight = reorder_by_first(array, sample_weight)\n","\n","    weighted_quantiles = numpy.cumsum(sample_weight) - 0.5 * sample_weight\n","    if old_style:\n","        # To be convenient with numpy.percentile\n","        weighted_quantiles -= weighted_quantiles[0]\n","        weighted_quantiles /= weighted_quantiles[-1]\n","    else:\n","        weighted_quantiles /= numpy.sum(sample_weight)\n","    return numpy.interp(quantiles, weighted_quantiles, array)\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"le4iboXx_I40","colab_type":"code","colab":{}},"source":["def check_sample_weight(y_true, sample_weight):\n","    \"\"\"Checks the weights, if None, returns array.\n","    :param y_true: labels (or any array of length [n_samples])\n","    :param sample_weight: None or array of length [n_samples]\n","    :return: numpy.array of shape [n_samples]\n","    \"\"\"\n","    if sample_weight is None:\n","        return numpy.ones(len(y_true), dtype=numpy.float)\n","    else:\n","        sample_weight = numpy.array(sample_weight, dtype=numpy.float)\n","        assert len(y_true) == len(sample_weight), \\\n","            \"The length of weights is different: not {0}, but {1}\".format(len(y_true), len(sample_weight))\n","        return sample_weight\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"tb3xgnBd_I42","colab_type":"code","colab":{}},"source":["\n","def reorder_by_first(*arrays):\n","    \"\"\"\n","    Applies the same permutation to all passed arrays,\n","    permutation sorts the first passed array\n","    \"\"\"\n","    arrays = check_arrays(*arrays)\n","    order = numpy.argsort(arrays[0])\n","    return [arr[order] for arr in arrays]\n","\n","class Binner(object):\n","    def __init__(self, values, bins_number):\n","        \"\"\"\n","        Binner is a class that helps to split the values into several bins.\n","        Initially an array of values is given, which is then splitted into 'bins_number' equal parts,\n","        and thus we are computing limits (boundaries of bins).\n","        \"\"\"\n","        percentiles = [i * 100.0 / bins_number for i in range(1, bins_number)]\n","        self.limits = numpy.percentile(values, percentiles)\n","\n","    def get_bins(self, values):\n","        \"\"\"Given the values of feature, compute the index of bin\n","        :param values: array of shape [n_samples]\n","        :return: array of shape [n_samples]\n","        \"\"\"\n","        return numpy.searchsorted(self.limits, values)\n","\n","    def set_limits(self, limits):\n","        \"\"\"Change the thresholds inside bins.\"\"\"\n","        self.limits = limits\n","\n","    @property\n","    def bins_number(self):\n","        \"\"\":return: number of bins\"\"\"\n","        return len(self.limits) + 1\n","\n","    def split_into_bins(self, *arrays):\n","        \"\"\"\n","        :param arrays: data to be splitted, the first array corresponds\n","        :return: sequence of length [n_bins] with values corresponding to each bin.\n","        \"\"\"\n","        values = arrays[0]\n","        for array in arrays:\n","            assert len(array) == len(values), \"passed arrays have different length\"\n","        bins = self.get_bins(values)\n","        result = []\n","        for bin in range(len(self.limits) + 1):\n","            indices = bins == bin\n","            result.append([numpy.array(array)[indices] for array in arrays])\n","        return result\n","from collections import OrderedDict\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"azSMuM_T_I45","colab_type":"code","colab":{}},"source":["eff = get_efficiencies(y_pred, df_corr_check.mass, thresholds=[0.5]) #, thresholds=[0.2, 0.4, 0.5, 0.6, 0.8])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"C01ex0S9B6Oz","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"07c3eeaa-7a2e-4929-cd0f-81f1c18535b0","executionInfo":{"status":"ok","timestamp":1557698466827,"user_tz":-330,"elapsed":1508,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["eff.keys()"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["odict_keys([0.5])"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"pXyy8NE9_I48","colab_type":"code","outputId":"2863b98d-12dc-4fd6-de8a-81f28492e800","colab":{}},"source":["#eff.keys()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["odict_keys([0.5])"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"K40ebOCsCCR_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":283},"outputId":"54d97557-bc89-4ad5-bdeb-3a7f8438d053","executionInfo":{"status":"ok","timestamp":1557700717459,"user_tz":-330,"elapsed":1282,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["for label_name, eff_data in eff.items():\n","    pyplot.plot(eff_data[0], eff_data[1], label=\"global eff  %.1f\" % label_name)\n","pyplot.xlabel('mass')\n","pyplot.ylabel('Efficiency')\n","pyplot.legend();"],"execution_count":87,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"rkgKXTTH_I5B","colab_type":"code","outputId":"c94a1698-577c-461d-e85b-2252540c447a","colab":{}},"source":["#for label_name, eff_data in eff.items():\n","#    pyplot.plot(eff_data[0], eff_data[1], label=\"global eff  %.1f\" % label_name)\n","#pyplot.xlabel('mass')\n","#pyplot.ylabel('Efficiency')\n","#pyplot.legend();"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<matplotlib.figure.Figure at 0x10c502ac8>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"-aKk6G7p_I5D","colab_type":"code","colab":{}},"source":["from utils import check_correlation"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FmjAmzToEJTP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"985aa654-741b-4b4d-820b-cf050a24409a","executionInfo":{"status":"ok","timestamp":1557702228838,"user_tz":-330,"elapsed":1074,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["corr_metric = check_correlation(y_pred, df_corr_check['mass'])\n","print (corr_metric)"],"execution_count":122,"outputs":[{"output_type":"stream","text":["0.0002175065098647437\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"iWMONO80_I5L","colab_type":"code","outputId":"230ddb24-74e0-4a00-a2aa-8b530884b51e","colab":{}},"source":["#corr_metric = check_correlation(y_pred, df_corr_check['mass'])\n","#print (corr_metric)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["0.00019905986073\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"V4zrVxg3_I5Q","colab_type":"text"},"source":["## MC vs Real difference"]},{"cell_type":"code","metadata":{"id":"fGbwKgDw_I5R","colab_type":"code","colab":{}},"source":["df_agreement = pandas.read_csv(\"https://github.com/hse-aml/hadron-collider-machine-learning/releases/download/Week_3/check_agreement.csv.gz\")#('reference/check_agreement.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"b0tGoySf_I5V","colab_type":"code","colab":{}},"source":["\n","from sklearn.utils.validation import column_or_1d\n","def get_ks_metric(df_agree, df_test):\n","    sig_ind = df_agree[df_agree['signal'] == 1].index\n","    bck_ind = df_agree[df_agree['signal'] == 0].index\n","\n","    mc_prob = numpy.array(df_test.loc[sig_ind]['prediction'])\n","    mc_weight = numpy.array(df_agree.loc[sig_ind]['weight'])\n","    data_prob = numpy.array(df_test.loc[bck_ind]['prediction'])\n","    data_weight = numpy.array(df_agree.loc[bck_ind]['weight'])\n","    val, agreement_metric = check_agreement_ks_sample_weighted(data_prob, mc_prob, data_weight, mc_weight)\n","    return agreement_metric['ks']"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gTpdEeYW_I5X","colab_type":"code","colab":{}},"source":["def check_agreement_ks_sample_weighted (data_prediction, mc_prediction, weights_data, weights_mc):\n","    data_prediction, weights_data = map(column_or_1d, [data_prediction, weights_data])\n","    mc_prediction, weights_mc = map(column_or_1d, [mc_prediction, weights_mc])\n","\n","    assert numpy.all(data_prediction >= 0.) and numpy.all(data_prediction <= 1.), 'error in prediction'\n","    assert numpy.all(mc_prediction >= 0.) and numpy.all(mc_prediction <= 1.), 'error in prediction'\n","\n","    weights_data = weights_data / numpy.sum(weights_data)\n","    weights_mc = weights_mc / numpy.sum(weights_mc)\n","\n","    data_neg = data_prediction[weights_data < 0]\n","    weights_neg = -weights_data[weights_data < 0]\n","    mc_prediction = numpy.concatenate((mc_prediction, data_neg))\n","    weights_mc = numpy.concatenate((weights_mc, weights_neg))\n","    data_prediction = data_prediction[weights_data >= 0]\n","    weights_data = weights_data[weights_data >= 0]\n","\n","    assert numpy.all(weights_data >= 0) and numpy.all(weights_mc >= 0)\n","    assert numpy.allclose(weights_data.sum(), weights_mc.sum())\n","\n","    weights_data /= numpy.sum(weights_data)\n","    weights_mc /= numpy.sum(weights_mc)\n","\n","    fpr, tpr, _ = roc_curve_splitted(data_prediction, mc_prediction, weights_data, weights_mc)\n","\n","    Dnm = numpy.max(numpy.abs(fpr - tpr))\n","    Dnm_part = numpy.max(numpy.abs(fpr - tpr)[fpr + tpr < 1])\n","\n","    result = {'ks': Dnm, 'ks_part': Dnm_part}\n","    return Dnm_part < 0.03, result"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"AZtJx3k__I5a","colab_type":"code","outputId":"01e23610-3cb0-475b-b1b8-b6cebd3c1ca8","colab":{"base_uri":"https://localhost:8080/","height":187},"executionInfo":{"status":"ok","timestamp":1557698545315,"user_tz":-330,"elapsed":644,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["df_agreement.columns"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['id', 'LifeTime', 'dira', 'FlightDistance', 'FlightDistanceError', 'IP',\n","       'IPSig', 'VertexChi2', 'pt', 'DOCAone', 'DOCAtwo', 'DOCAthree',\n","       'IP_p0p2', 'IP_p1p2', 'isolationa', 'isolationb', 'isolationc',\n","       'isolationd', 'isolatione', 'isolationf', 'iso', 'CDF1', 'CDF2', 'CDF3',\n","       'ISO_SumBDT', 'p0_IsoBDT', 'p1_IsoBDT', 'p2_IsoBDT', 'p0_track_Chi2Dof',\n","       'p1_track_Chi2Dof', 'p2_track_Chi2Dof', 'p0_IP', 'p1_IP', 'p2_IP',\n","       'p0_IPSig', 'p1_IPSig', 'p2_IPSig', 'p0_pt', 'p1_pt', 'p2_pt', 'p0_p',\n","       'p1_p', 'p2_p', 'p0_eta', 'p1_eta', 'p2_eta', 'SPDhits', 'signal',\n","       'weight'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"uYy54YSeEaKE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":253},"outputId":"a679d9c0-90ef-4d49-b20b-0582beea72b3","executionInfo":{"status":"ok","timestamp":1557698555350,"user_tz":-330,"elapsed":1241,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["df_agreement[variables].head()"],"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FlightDistance</th>\n","      <th>p0_IP</th>\n","      <th>isolationb</th>\n","      <th>ISO_SumBDT</th>\n","      <th>FlightDistanceError</th>\n","      <th>p0_IsoBDT</th>\n","      <th>p1_p</th>\n","      <th>p2_track_Chi2Dof</th>\n","      <th>LifeTime</th>\n","      <th>pt</th>\n","      <th>...</th>\n","      <th>p2_IP</th>\n","      <th>IP</th>\n","      <th>p1_track_Chi2Dof</th>\n","      <th>p0_track_Chi2Dof</th>\n","      <th>p0_pt</th>\n","      <th>iso</th>\n","      <th>VertexChi2</th>\n","      <th>isolationf</th>\n","      <th>isolationd</th>\n","      <th>isolationc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6.945030</td>\n","      <td>0.483199</td>\n","      <td>6</td>\n","      <td>-0.207475</td>\n","      <td>0.229196</td>\n","      <td>-0.019306</td>\n","      <td>6380.673828</td>\n","      <td>1.487057</td>\n","      <td>0.001451</td>\n","      <td>2251.611816</td>\n","      <td>...</td>\n","      <td>0.426797</td>\n","      <td>0.058117</td>\n","      <td>0.862549</td>\n","      <td>0.606178</td>\n","      <td>1438.064697</td>\n","      <td>4.0</td>\n","      <td>7.953543</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>9.468235</td>\n","      <td>0.712242</td>\n","      <td>6</td>\n","      <td>-0.659644</td>\n","      <td>0.517488</td>\n","      <td>-0.278330</td>\n","      <td>64480.023438</td>\n","      <td>1.336784</td>\n","      <td>0.000679</td>\n","      <td>10594.470703</td>\n","      <td>...</td>\n","      <td>0.123877</td>\n","      <td>0.189683</td>\n","      <td>1.073474</td>\n","      <td>1.900118</td>\n","      <td>316.791351</td>\n","      <td>3.0</td>\n","      <td>7.141451</td>\n","      <td>1.0</td>\n","      <td>1.0</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>13.280714</td>\n","      <td>0.381544</td>\n","      <td>2</td>\n","      <td>-0.399239</td>\n","      <td>0.219291</td>\n","      <td>-0.115879</td>\n","      <td>3921.181641</td>\n","      <td>0.798658</td>\n","      <td>0.003027</td>\n","      <td>2502.196289</td>\n","      <td>...</td>\n","      <td>1.290409</td>\n","      <td>0.231709</td>\n","      <td>1.683084</td>\n","      <td>0.660675</td>\n","      <td>1887.477905</td>\n","      <td>1.0</td>\n","      <td>4.778880</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.166821</td>\n","      <td>0.564650</td>\n","      <td>4</td>\n","      <td>-0.821041</td>\n","      <td>0.167886</td>\n","      <td>-0.208248</td>\n","      <td>13221.149414</td>\n","      <td>0.938619</td>\n","      <td>0.000810</td>\n","      <td>5097.813965</td>\n","      <td>...</td>\n","      <td>0.166646</td>\n","      <td>0.011298</td>\n","      <td>1.093031</td>\n","      <td>0.770563</td>\n","      <td>975.041687</td>\n","      <td>0.0</td>\n","      <td>5.528002</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>10.897236</td>\n","      <td>0.373736</td>\n","      <td>1</td>\n","      <td>-1.116815</td>\n","      <td>0.284975</td>\n","      <td>-0.328938</td>\n","      <td>46903.394531</td>\n","      <td>1.123868</td>\n","      <td>0.000706</td>\n","      <td>20388.097656</td>\n","      <td>...</td>\n","      <td>0.112430</td>\n","      <td>0.160511</td>\n","      <td>1.471946</td>\n","      <td>1.080559</td>\n","      <td>6035.000977</td>\n","      <td>0.0</td>\n","      <td>8.670339</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 46 columns</p>\n","</div>"],"text/plain":["   FlightDistance     p0_IP  isolationb  ISO_SumBDT  FlightDistanceError  \\\n","0        6.945030  0.483199           6   -0.207475             0.229196   \n","1        9.468235  0.712242           6   -0.659644             0.517488   \n","2       13.280714  0.381544           2   -0.399239             0.219291   \n","3        5.166821  0.564650           4   -0.821041             0.167886   \n","4       10.897236  0.373736           1   -1.116815             0.284975   \n","\n","   p0_IsoBDT          p1_p  p2_track_Chi2Dof  LifeTime            pt  ...  \\\n","0  -0.019306   6380.673828          1.487057  0.001451   2251.611816  ...   \n","1  -0.278330  64480.023438          1.336784  0.000679  10594.470703  ...   \n","2  -0.115879   3921.181641          0.798658  0.003027   2502.196289  ...   \n","3  -0.208248  13221.149414          0.938619  0.000810   5097.813965  ...   \n","4  -0.328938  46903.394531          1.123868  0.000706  20388.097656  ...   \n","\n","      p2_IP        IP  p1_track_Chi2Dof  p0_track_Chi2Dof        p0_pt  iso  \\\n","0  0.426797  0.058117          0.862549          0.606178  1438.064697  4.0   \n","1  0.123877  0.189683          1.073474          1.900118   316.791351  3.0   \n","2  1.290409  0.231709          1.683084          0.660675  1887.477905  1.0   \n","3  0.166646  0.011298          1.093031          0.770563   975.041687  0.0   \n","4  0.112430  0.160511          1.471946          1.080559  6035.000977  0.0   \n","\n","   VertexChi2  isolationf  isolationd  isolationc  \n","0    7.953543         1.0         2.0           1  \n","1    7.141451         1.0         1.0          17  \n","2    4.778880         1.0         0.0           1  \n","3    5.528002         0.0         0.0           3  \n","4    8.670339         0.0         0.0           0  \n","\n","[5 rows x 46 columns]"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"id":"8cQI5HZZ_I5d","colab_type":"code","outputId":"5f992d32-4603-4792-f283-fc824f5daff9","colab":{}},"source":["#df_agreement[variables].head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style>\n","    .dataframe thead tr:only-child th {\n","        text-align: right;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: left;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ISO_SumBDT</th>\n","      <th>p2_pt</th>\n","      <th>LifeTime</th>\n","      <th>p0_p</th>\n","      <th>pt</th>\n","      <th>p1_IPSig</th>\n","      <th>VertexChi2</th>\n","      <th>p1_IsoBDT</th>\n","      <th>DOCAtwo</th>\n","      <th>SPDhits</th>\n","      <th>...</th>\n","      <th>p2_p</th>\n","      <th>isolationf</th>\n","      <th>p0_IsoBDT</th>\n","      <th>DOCAone</th>\n","      <th>p1_track_Chi2Dof</th>\n","      <th>DOCAthree</th>\n","      <th>p2_IPSig</th>\n","      <th>IP_p0p2</th>\n","      <th>IP</th>\n","      <th>isolatione</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.207475</td>\n","      <td>834.562378</td>\n","      <td>0.001451</td>\n","      <td>10392.814453</td>\n","      <td>2251.611816</td>\n","      <td>10.732132</td>\n","      <td>7.953543</td>\n","      <td>-0.089797</td>\n","      <td>0.084005</td>\n","      <td>512</td>\n","      <td>...</td>\n","      <td>15195.594727</td>\n","      <td>1.0</td>\n","      <td>-0.019306</td>\n","      <td>0.082219</td>\n","      <td>0.862549</td>\n","      <td>0.066887</td>\n","      <td>8.853514</td>\n","      <td>0.185107</td>\n","      <td>0.058117</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>-0.659644</td>\n","      <td>2861.309814</td>\n","      <td>0.000679</td>\n","      <td>3174.356934</td>\n","      <td>10594.470703</td>\n","      <td>16.435398</td>\n","      <td>7.141451</td>\n","      <td>-0.186370</td>\n","      <td>0.044154</td>\n","      <td>552</td>\n","      <td>...</td>\n","      <td>23134.953125</td>\n","      <td>1.0</td>\n","      <td>-0.278330</td>\n","      <td>0.007983</td>\n","      <td>1.073474</td>\n","      <td>0.001321</td>\n","      <td>7.737038</td>\n","      <td>0.039357</td>\n","      <td>0.189683</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.399239</td>\n","      <td>932.128235</td>\n","      <td>0.003027</td>\n","      <td>15219.761719</td>\n","      <td>2502.196289</td>\n","      <td>20.686119</td>\n","      <td>4.778880</td>\n","      <td>-0.131069</td>\n","      <td>0.106614</td>\n","      <td>318</td>\n","      <td>...</td>\n","      <td>10180.791016</td>\n","      <td>1.0</td>\n","      <td>-0.115879</td>\n","      <td>0.045085</td>\n","      <td>1.683084</td>\n","      <td>0.005850</td>\n","      <td>44.521961</td>\n","      <td>0.335788</td>\n","      <td>0.231709</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.821041</td>\n","      <td>2617.248291</td>\n","      <td>0.000810</td>\n","      <td>4365.082520</td>\n","      <td>5097.813965</td>\n","      <td>7.873435</td>\n","      <td>5.528002</td>\n","      <td>-0.177802</td>\n","      <td>0.038642</td>\n","      <td>290</td>\n","      <td>...</td>\n","      <td>24291.875000</td>\n","      <td>0.0</td>\n","      <td>-0.208248</td>\n","      <td>0.055115</td>\n","      <td>1.093031</td>\n","      <td>0.003864</td>\n","      <td>9.630725</td>\n","      <td>0.076522</td>\n","      <td>0.011298</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-1.116815</td>\n","      <td>4763.682617</td>\n","      <td>0.000706</td>\n","      <td>27463.011719</td>\n","      <td>20388.097656</td>\n","      <td>18.738485</td>\n","      <td>8.670339</td>\n","      <td>-0.443564</td>\n","      <td>0.020872</td>\n","      <td>45</td>\n","      <td>...</td>\n","      <td>24241.628906</td>\n","      <td>0.0</td>\n","      <td>-0.328938</td>\n","      <td>0.015587</td>\n","      <td>1.471946</td>\n","      <td>0.014612</td>\n","      <td>7.389726</td>\n","      <td>0.249906</td>\n","      <td>0.160511</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 46 columns</p>\n","</div>"],"text/plain":["   ISO_SumBDT        p2_pt  LifeTime          p0_p            pt   p1_IPSig  \\\n","0   -0.207475   834.562378  0.001451  10392.814453   2251.611816  10.732132   \n","1   -0.659644  2861.309814  0.000679   3174.356934  10594.470703  16.435398   \n","2   -0.399239   932.128235  0.003027  15219.761719   2502.196289  20.686119   \n","3   -0.821041  2617.248291  0.000810   4365.082520   5097.813965   7.873435   \n","4   -1.116815  4763.682617  0.000706  27463.011719  20388.097656  18.738485   \n","\n","   VertexChi2  p1_IsoBDT   DOCAtwo  SPDhits     ...              p2_p  \\\n","0    7.953543  -0.089797  0.084005      512     ...      15195.594727   \n","1    7.141451  -0.186370  0.044154      552     ...      23134.953125   \n","2    4.778880  -0.131069  0.106614      318     ...      10180.791016   \n","3    5.528002  -0.177802  0.038642      290     ...      24291.875000   \n","4    8.670339  -0.443564  0.020872       45     ...      24241.628906   \n","\n","   isolationf  p0_IsoBDT   DOCAone  p1_track_Chi2Dof  DOCAthree   p2_IPSig  \\\n","0         1.0  -0.019306  0.082219          0.862549   0.066887   8.853514   \n","1         1.0  -0.278330  0.007983          1.073474   0.001321   7.737038   \n","2         1.0  -0.115879  0.045085          1.683084   0.005850  44.521961   \n","3         0.0  -0.208248  0.055115          1.093031   0.003864   9.630725   \n","4         0.0  -0.328938  0.015587          1.471946   0.014612   7.389726   \n","\n","    IP_p0p2        IP  isolatione  \n","0  0.185107  0.058117         1.0  \n","1  0.039357  0.189683         1.0  \n","2  0.335788  0.231709         0.0  \n","3  0.076522  0.011298         0.0  \n","4  0.249906  0.160511         0.0  \n","\n","[5 rows x 46 columns]"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"pl8qFVuU_I5i","colab_type":"code","colab":{}},"source":["def compute_ks(data_prediction, mc_prediction, weights_data, weights_mc):\n","    \"\"\"\n","    Compute Kolmogorov-Smirnov (ks) distance between real data predictions cdf and Monte Carlo one.\n","    :param data_prediction: array-like, real data predictions\n","    :param mc_prediction: array-like, Monte Carlo data predictions\n","    :param weights_data: array-like, real data weights\n","    :param weights_mc: array-like, Monte Carlo weights\n","    :return: ks value\n","    \"\"\"\n","    assert len(data_prediction) == len(weights_data), 'Data length and weight one must be the same'\n","    assert len(mc_prediction) == len(weights_mc), 'Data length and weight one must be the same'\n","\n","    data_prediction, mc_prediction = numpy.array(data_prediction), numpy.array(mc_prediction)\n","    weights_data, weights_mc = numpy.array(weights_data), numpy.array(weights_mc)\n","\n","    assert numpy.all(data_prediction >= 0.) and numpy.all(data_prediction <= 1.), 'Data predictions are out of range [0, 1]'\n","    assert numpy.all(mc_prediction >= 0.) and numpy.all(mc_prediction <= 1.), 'MC predictions are out of range [0, 1]'\n","\n","    weights_data /= numpy.sum(weights_data)\n","    weights_mc /= numpy.sum(weights_mc)\n","\n","    fpr, tpr = __roc_curve_splitted(data_prediction, mc_prediction, weights_data, weights_mc)\n","\n","    Dnm = numpy.max(numpy.abs(fpr - tpr))\n","    return Dnm"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ChZTM1Mq_I5k","colab_type":"code","colab":{}},"source":["from sklearn.metrics import roc_curve\n","def __roc_curve_splitted(data_zero, data_one, sample_weights_zero, sample_weights_one):\n","    \"\"\"\n","    Compute roc curve\n","    :param data_zero: 0-labeled data\n","    :param data_one:  1-labeled data\n","    :param sample_weights_zero: weights for 0-labeled data\n","    :param sample_weights_one:  weights for 1-labeled data\n","    :return: roc curve\n","    \"\"\"\n","    labels = [0] * len(data_zero) + [1] * len(data_one)\n","    weights = numpy.concatenate([sample_weights_zero, sample_weights_one])\n","    data_all = numpy.concatenate([data_zero, data_one])\n","    fpr, tpr, _ = roc_curve(labels, data_all, sample_weight=weights)\n","    return fpr, tpr"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"h7umfMNsEr9u","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"e85c213e-8bd1-4e01-bfc8-4096982f0d4f","executionInfo":{"status":"ok","timestamp":1557700801220,"user_tz":-330,"elapsed":45704,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["agreement_probs = clf.predict_proba(df_agreement[variables])[:, 1]\n","\n","ks = compute_ks(\n","    agreement_probs[df_agreement['signal'].values == 0],\n","    agreement_probs[df_agreement['signal'].values == 1],\n","    df_agreement[df_agreement['signal'] == 0]['weight'].values,\n","    df_agreement[df_agreement['signal'] == 1]['weight'].values)\n","print ('KS metric:', ks, \"is OK:\", ks < 0.09)"],"execution_count":89,"outputs":[{"output_type":"stream","text":["KS metric: 0.1803363051205195 is OK: False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uPgPUI0L_I5n","colab_type":"code","outputId":"2ec50bb1-b615-413e-9e5c-989888f8f624","colab":{}},"source":["#agreement_probs = clf.predict_proba(df_agreement[variables])[:, 1]\n","\n","#ks = compute_ks(\n","#    agreement_probs[df_agreement['signal'].values == 0],\n","#    agreement_probs[df_agreement['signal'].values == 1],\n","#    df_agreement[df_agreement['signal'] == 0]['weight'].values,\n","#    df_agreement[df_agreement['signal'] == 1]['weight'].values)\n","#print ('KS metric:', ks, \"is OK:\", ks < 0.09)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["KS metric: 0.1632292298 is OK: False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MmNZv-MM_I5r","colab_type":"code","colab":{}},"source":["def plot_ks(X_agreement, y_pred):\n","    sig_ind = X_agreement[X_agreement['signal'] == 1].index\n","    bck_ind = X_agreement[X_agreement['signal'] == 0].index\n","\n","    mc_prob = y_pred[sig_ind]\n","    mc_weight = numpy.array(X_agreement.loc[sig_ind]['weight'])\n","    data_prob = y_pred[bck_ind]\n","    data_weight = numpy.array(X_agreement.loc[bck_ind]['weight'])\n","    inds = data_weight < 0\n","    mc_weight = numpy.array(list(mc_weight) + list(-data_weight[inds]))\n","    mc_prob = numpy.array(list(mc_prob) + list(data_prob[inds]))\n","    data_prob = data_prob[data_weight >= 0]\n","    data_weight = data_weight[data_weight >= 0]\n","    hist(data_prob, weights=data_weight, color='r', histtype='step', normed=True, bins=60, label='data')\n","    hist(mc_prob, weights=mc_weight, color='b', histtype='step', normed=True, bins=60, label='mc')\n","    xlabel(\"prediction\")\n","    legend(loc=2)\n","    show()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"vbvsIenlEyzE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":334},"outputId":"4e82c2bc-3a10-4af1-fd40-e1fb0b847afb","executionInfo":{"status":"ok","timestamp":1557698661663,"user_tz":-330,"elapsed":2583,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["plot_ks(df_agreement, agreement_probs)"],"execution_count":35,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/matplotlib/axes/_axes.py:6521: MatplotlibDeprecationWarning: \n","The 'normed' kwarg was deprecated in Matplotlib 2.1 and will be removed in 3.1. Use 'density' instead.\n","  alternative=\"'density'\", removal=\"3.1\")\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"yX0nJMVM_I5u","colab_type":"code","outputId":"cb0ac880-49b2-4f54-c6ea-e57d167be26c","colab":{}},"source":["plot_ks(df_agreement, agreement_probs)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXcAAAEKCAYAAADpfBXhAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAFjBJREFUeJzt3X2wXHV9x/HPJ4ikFIpK0ikScjelEQIJQbwIglgcqKLT\nCUW0BrEKA2RqfRyVGadllJHRmRbaTikUGoQJWjDIY4OD1aGFAVQkN/IUSJkJctPcQmsIT4kQIfbb\nP/bccLM5mz333rN7zv72/ZrZyT78dvd3T+797ne/v4fjiBAAIC0zqu4AAKB8BHcASBDBHQASRHAH\ngAQR3AEgQQR3AEgQwR0AEkRwB4AEEdwBIEFvqOqNZ82aFY1Go6q3B4C+tGbNmmcjYnandpUF90aj\noZGRkareHgD6ku0NRdpRlgGABBHcASBBBHcASFBlNfc8r732msbGxrRt27aqu9JVM2fO1Jw5c7Tn\nnntW3RUAiapVcB8bG9O+++6rRqMh21V3pysiQps3b9bY2JjmzZtXdXcAJKpWZZlt27Zp//33Tzaw\nS5Jt7b///sl/OwFQrVoFd0lJB/Zxg/AzAqhW7YI7AGD66h3cGw3JLu8yhRWxF154oS655JK2j992\n2216/PHHp/4zAkAX1Du4b9ggRZR32VBoYdekdCO4532msVMDgMmod3CvyDe+8Q0dcsghOvnkk/XE\nE09Ikq666iodffTRWrx4sU4//XS9/PLL+slPfqJVq1bp/PPP15FHHqknn3wyt91k5X2mdeFzCUDC\nCO4t1qxZo5UrV+rBBx/ULbfcotWrV0uSPvShD2n16tV6+OGHtWDBAl199dU67rjjtGTJEl188cV6\n6KGHdPDBB+e2K8PQENk8gOJqNc+9Du69916ddtpp2nvvvSVJS5YskSStXbtWF1xwgV544QVt3bpV\n73//+3OfX7TduEZj16x8aGjXdqOju97HpBsA7RDcc+RNVTzrrLN02223afHixVqxYoXuvvvu3OcW\nbTduvAQDAGWiLNPiPe95j2699Va98sor2rJli26//XZJ0pYtW3TAAQfotdde03XXXbej/b777qst\nW7bsuN2uHQD0Ur0z9/FCc5mv18FRRx2lj370ozryyCM1NDSkE044QZJ00UUX6ZhjjtHQ0JAWLVq0\nI6AvXbpU5513ni699FLddNNNbdtJ0iOPSK++2rz+7LPSYYcV6hIATJqjoprA8PBwtJ6sY926dVqw\n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\npDdKeljSYS1t/kLSldn1pZJuqLrfFR+P90raO7v+qUE/Hlm7fSXdI+l+ScNV97vC3435kh6U9Obs\n9u9W3e+Kj8dySZ/Krh8mabTqfnfzUrfMna0OdtbxeETEXRHxcnbzfjXXIaSqyO+HJF0k6W8kbetl\n53qsyLE4T9LlEfG8JEXEL3vcx14qcjxC0u9k1/fTrut1klK34M5WBzsrcjwmOkfSD7rao2p1PB62\n3y7poIj4fi87VoEivxtvk/Q22z+2fb/tU3rWu94rcjwulPRx22Nqzv77bG+6Vo26nWavtK0OElH4\nZ7X9cUnDkv6wqz2q1m6Ph+0Zau5KelavOlShIr8bb1CzNHOimt/o7rW9MCJe6HLfqlDkeJwhaUVE\n/K3td6m5NmdhRPxf97vXe3XL3Cez1YF2t9VBIoocD9k+WdJfSVoSEb/uUd+q0Ol47CtpoaS7bY9K\nOlbSqkQHVYv+rfxrRLwWEU9JekLNYJ+iIsfjHEnfk6SI+KmkmWruO5OkugV3tjrYWcfjkZUh/lnN\nwJ5yTVXqcDwi4sWImBURjYhoqDkGsSQiRqrpblcV+Vu5Tc0Bd9mepWaZ5hc97WXvFDke/yXpJEmy\nvUDN4L6pp73soVoF96yGPr7VwTpJ34tsqwPbS7JmV0vaP9vq4IuS2k6H63cFj8fFkvaRdKPth2y3\n/kIno+DxGAgFj8UPJW22/bikuySdHxGbq+lxdxU8Hl+SdJ7thyV9V9JZCSeGrFAFgBTVKnMHAJSD\n4A4ACSK4A0CCCO4AkCCCOwAkiOCOgWd7a/bvW23f1KHtF2zvPeH2Hbbf1O0+ApPFVEgkyfYeEfGb\ngm23RsQ+BduOqrnT5LPT6R/QbWTu6Du2G7b/0/a12b7cN9ne2/ao7a/avk/SR2wfbPvfbK+xfa/t\nQ7Pnz7P9U9urbV/U8rprs+t72L7E9qPZe3zW9uckvVXSXbbvytqNZqs/x/fWX5tdvjDhNdfZvirb\nU/1Htn+rx4cMA4jgjn51iKTlEXGEpJfU3OdfkrZFxLsjYqWa+3d/NiLeIenLkv4pa/MPkq6IiKMl\n/U+b118maZ6kt2fvcV1EXKrmfiXvjYj3Tmxs+x2SzpZ0jJp72pyXbQ0hNfdzuTwiDpf0gqTTp/mz\nAx0R3NGvNkbEj7Pr/yLp3dn1GyTJ9j6SjlO2LYOa++8ckLU5Xs3l55L0nTavf7KaJ4XZLkkR0Wlz\nundLujUifhURWyXdIumE7LGnIuKh7PoaSY3OPx4wPXXb8hcoqnWwaPz2r7J/Z0h6ISKOLPj8Vi7Q\nprV9OxN36vyNJMoy6Doyd/Srudme3FJzn+77Jj4YES9Jesr2RyTJTYuzh3+s5q6BknRmm9f/kaQ/\nz7aVlu23ZPdvUXNr4Vb3SPqTrPb/25JOk3Tv5H8soBwEd/SrdZI+afsRSW+RdEVOmzMlnZPtAviY\nXj/t2uclfdr2ajXPB5DnW2puEftI9vyPZfcvl/SD8QHVcRHxc0krJD0g6WeSvhURD07xZwOmjamQ\n6Du2G5K+HxELK+4KUFtk7gCQIDJ3AEgQmTsAJIjgDgAJIrgDQIII7gCQIII7ACSI4A4ACfp/12qN\nTny5TV4AAAAASUVORK5CYII=\n","text/plain":["<matplotlib.figure.Figure at 0x112f987f0>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"-w3jk3zx_I5x","colab_type":"text"},"source":["### Let's see if adding some noise can improve the agreement"]},{"cell_type":"code","metadata":{"id":"mHOUVIzQ_I5y","colab_type":"code","colab":{}},"source":["def add_noise(array, level=0.2, random_seed=34):\n","    numpy.random.seed(random_seed)\n","    return level * numpy.random.random(size=array.size) + (1 - level) * array"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Gs7SWW5j_I51","colab_type":"code","colab":{}},"source":["agreement_probs_noise = add_noise(clf.predict_proba(df_agreement[variables])[:, 1])\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2bs1mZFEE8kA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"9dc4066a-113d-4013-abe2-7956cc200826","executionInfo":{"status":"ok","timestamp":1557703559479,"user_tz":-330,"elapsed":10477,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["ks_noise = compute_ks(\n","    agreement_probs_noise[df_agreement['signal'].values == 0],\n","    agreement_probs_noise[df_agreement['signal'].values == 1],\n","    df_agreement[df_agreement['signal'] == 0]['weight'].values,\n","    df_agreement[df_agreement['signal'] == 1]['weight'].values)\n","print ('KS metric:', ks_noise, \"is OK:\", ks_noise < 0.09)"],"execution_count":197,"outputs":[{"output_type":"stream","text":["KS metric: 0.09195643922939545 is OK: False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WLzSotE7_I54","colab_type":"code","outputId":"19c05977-43e8-4ecb-9ed9-c99d6c49e665","colab":{}},"source":["#ks_noise = compute_ks(\n","#    agreement_probs_noise[df_agreement['signal'].values == 0],\n","#    agreement_probs_noise[df_agreement['signal'].values == 1],\n","#    df_agreement[df_agreement['signal'] == 0]['weight'].values,\n","#    df_agreement[df_agreement['signal'] == 1]['weight'].values)\n","#print ('KS metric:', ks_noise, \"is OK:\", ks_noise < 0.09)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["KS metric: 0.0367690212012 is OK: True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"K9SfcMixFC6n","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":334},"outputId":"a4296a9d-5d60-440b-85a5-dd7454629b90","executionInfo":{"status":"ok","timestamp":1557698722671,"user_tz":-330,"elapsed":1407,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["plot_ks(df_agreement, agreement_probs_noise)"],"execution_count":39,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/matplotlib/axes/_axes.py:6521: MatplotlibDeprecationWarning: \n","The 'normed' kwarg was deprecated in Matplotlib 2.1 and will be removed in 3.1. Use 'density' instead.\n","  alternative=\"'density'\", removal=\"3.1\")\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"53ANMXlQ_I6B","colab_type":"code","outputId":"204e16d7-0e86-489a-e41f-cb43df62d59e","colab":{}},"source":["#plot_ks(df_agreement, agreement_probs_noise)"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nqoh+oYEkNSwAAAAASUVORK5CYII=\n","text/plain":["<matplotlib.figure.Figure at 0x11352e320>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"rztLL4PV_I6J","colab_type":"text"},"source":["### Check ROC with noise"]},{"cell_type":"code","metadata":{"id":"3cG1qKWmFFXl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"e4078736-f835-44be-ccae-01e80ff10d6a","executionInfo":{"status":"ok","timestamp":1557698735667,"user_tz":-330,"elapsed":1036,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["test.shape"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(20266, 51)"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"id":"PsWkQdVJ_I6N","colab_type":"code","outputId":"bfc52940-1ea3-4584-de73-02ea189bc0a6","colab":{}},"source":["#test.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(20266, 51)"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"13VX2fVXFIUI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":312},"outputId":"c4205dc5-4613-4c91-a8ef-734f9f27c5a1","executionInfo":{"status":"ok","timestamp":1557703572045,"user_tz":-330,"elapsed":1658,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["y_pred = add_noise(clf.predict_proba(test[variables])[:, 1])\n","\n","plot_metrics(test['signal'], y_pred)\n","test.shape, y_pred.shape"],"execution_count":198,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((20266, 51), (20266,))"]},"metadata":{"tags":[]},"execution_count":198},{"output_type":"display_data","data":{"image/png":"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\nFGiItWYfAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"nE-sqsnB_I6S","colab_type":"code","outputId":"85993207-1489-4b2f-ba23-04dd320b710a","colab":{}},"source":["#y_pred = add_noise(clf.predict_proba(test[variables])[:, 1])\n","\n","#plot_metrics(test['signal'], y_pred)\n","#test.shape, y_pred.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((20266, 51), (20266,))"]},"metadata":{"tags":[]},"execution_count":40},{"output_type":"display_data","data":{"image/png":"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\nCQkJdOvWjd27dwOwceNGxo0bR0ZGBnfddRennXbaAXXs27eP559/nn//938/5O9FDl95dYCCvRVs\nKCylNhhaLiytYvXWYsxgZ3EVH23ZR1JCHKVVgSZfp1d6MvFm9OuewrA+3UnJiae0KsCgzFRSE+OJ\niwt9Q+7fPYWUxHh6dk0iIyWRXunJ9EhN1M48wiIWCmb2DHAGkGVmBcAdQCKAuz8KvABMBfKBcuDa\nSNXSFioqKjjhhBPYtGkT48eP56yzzgJCXeKmPsSH8+HesWMH+fn5nHrqqZgZCQkJrFq1iuOOO67R\n12nJaw8fPrzR4Zj9GvuG3tjrvvTSS5xwwgm8+uqrrF+/nrPOOovTTjuNjIwMNm/eTP/+/dmwYQNf\n+tKXGDNmDLm5udx333288MILTJgwgV/84hd8+9vfZt68eU2+Z79+/di8eTOZmZksX76ciy++mNWr\nV5ORkQFAIBBgxowZ3HLLLQwZMuSQ2y4HCtQG2birjE+2l1BSWcOHm/dRsLec2qCzvbiSLXsqmv35\njJQEhvRK40sjegOQ27srgVpnUGYqAIN6pjKwRyrHZKZqp97ORfLsoxmHeN6Bm1r7fVv6jb617R87\nLyoq4vzzz2fOnDnccsstjB49mjfffPOAths2bCAtLY309HRGjx7N8uXLOf7445t9/QULFrB37966\n4wjFxcXMnz+fu+66i8zMTPbu3VvXds+ePWRlZQEwevRo3njjjUZf81A9hezs7AOGYgoKCuqGeep7\n4oknmD17NmbG0KFDycnJYc2aNZx88sl17YcMGcIZZ5zBhx9+SEZGBitWrGDChAkAXH755ZxzTujs\n5ezsbLZs2UJ2djaBQICioiJ69uyJmZGcnAzA+PHjyc3NZd26deTl5QFwww03MGzYMG699dZmf4+x\nqrCkik93lLBhVxmFJVUs/2wvBXvLiTNjT3k1+8prDmgfZxAfZ/TJSOH47O6cNbIvAGOzu9E9NZF+\n3bqQmhRPekoC3VOTorFJEikePvWpo/wbP368N/Txxx8ftK6tde3ate7xBx984AMHDvTq6movLy/3\nnJwcf/nll93dvby83M877zx/8MEH3d19xYoVnpub62vXrnV399raWr/33nsPev2JEyf6kiVL6pY3\nbNjgubm57u7+/PPP+5QpU7yqqsrd3e+9916/9tpr694vNzfXFy1aVPezixcv9pUrV7Zou/Ly8vyd\n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\n","text/plain":["<matplotlib.figure.Figure at 0x1135454a8>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"tbKpC6g1_I6W","colab_type":"text"},"source":["# Train the model using the whole training sample"]},{"cell_type":"code","metadata":{"id":"v_YD_NWQ_I6X","colab_type":"code","outputId":"7d5ab252-5dce-41ac-d4c3-ab138794ff1a","colab":{"base_uri":"https://localhost:8080/","height":170},"executionInfo":{"status":"ok","timestamp":1557703792898,"user_tz":-330,"elapsed":45260,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["%time clf.fit(train_ada[variables], train_ada['signal'])"],"execution_count":199,"outputs":[{"output_type":"stream","text":["CPU times: user 43.8 s, sys: 24.9 ms, total: 43.8 s\n","Wall time: 43.8 s\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["AdaBoostClassifier(algorithm='SAMME.R',\n","          base_estimator=DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=10,\n","            max_features=6, max_leaf_nodes=None, min_impurity_decrease=0.0,\n","            min_impurity_split=None, min_samples_leaf=30,\n","            min_samples_split=2, min_weight_fraction_leaf=0.0,\n","            presort=False, random_state=13, splitter='best'),\n","          learning_rate=0.01, n_estimators=100, random_state=13)"]},"metadata":{"tags":[]},"execution_count":199}]},{"cell_type":"markdown","metadata":{"id":"P7Bo5Rzi_I6a","colab_type":"text"},"source":["Compute prediction and add noise"]},{"cell_type":"code","metadata":{"id":"zoH12PsF_I6c","colab_type":"code","colab":{}},"source":["y_pred = add_noise(clf.predict_proba(test_ada[variables])[:, 1])"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VdsGdBaQ_I6g","colab_type":"text"},"source":["# Prepare submission file"]},{"cell_type":"code","metadata":{"id":"9cB60thB_I6i","colab_type":"code","colab":{}},"source":["def save_submission(y_pred, index, filename='result'):\n","    sep = ','\n","    filename = '{}.csv.gz'.format(filename)\n","    pandas.DataFrame({'id': index, 'prediction': y_pred}).to_csv(\n","                filename, sep=sep, index=False, compression='gzip')\n","    print (\"Saved file: \", filename, \"\\nShape:\", (y_pred.shape[0], 2))\n","    return filename"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mn8-7htGFOtM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"cda798e2-2492-4c80-d363-90d127837c38","executionInfo":{"status":"ok","timestamp":1557703839911,"user_tz":-330,"elapsed":8162,"user":{"displayName":"Siddharth Ghule","photoUrl":"https://lh6.googleusercontent.com/-CRdt4DR4KLQ/AAAAAAAAAAI/AAAAAAAAM44/HF-YNi8zuAI/s64/photo.jpg","userId":"01016581137657955426"}}},"source":["save_submission(y_pred, test_ada.index, \"sample_submission\")"],"execution_count":202,"outputs":[{"output_type":"stream","text":["Saved file:  sample_submission.csv.gz \n","Shape: (855819, 2)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["'sample_submission.csv.gz'"]},"metadata":{"tags":[]},"execution_count":202}]},{"cell_type":"code","metadata":{"id":"UN4kSH91_I6m","colab_type":"code","outputId":"f9590c3b-f3f3-40a0-b72e-04f7d00a39a2","colab":{}},"source":["#save_submission(y_pred, test_ada.index, \"sample_submission\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Saved file:  submission/sample_submission.csv \n","Shape: (855819, 2)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["'submission/sample_submission.csv'"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"cOrF0w4H_I6p","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}